{
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\app.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire('dotenv').config();\n\nvar express = require('express');\n\nvar _require = require('apollo-server-express'),\n    ApolloServer = _require.ApolloServer;\n\nvar _require2 = require('@graphql-tools/schema'),\n    makeExecutableSchema = _require2.makeExecutableSchema;\n\nvar jwt = require('jsonwebtoken');\n\nvar compression = require('compression');\n\nvar _require3 = require('graphql-upload'),\n    GraphQLUpload = _require3.GraphQLUpload,\n    graphqlUploadExpress = _require3.graphqlUploadExpress;\n\nvar _require4 = require('subscriptions-transport-ws'),\n    SubscriptionServer = _require4.SubscriptionServer;\n\nvar cors = require('cors');\n\nvar _require5 = require('http'),\n    createServer = _require5.createServer;\n\nvar _require6 = require('graphql'),\n    execute = _require6.execute,\n    subscribe = _require6.subscribe;\n\nvar bodyParser = require('body-parser');\n\nvar path = require('path'); // Environment\n\n\nvar PORT = process.env.PORT;\nvar HOSTNAME = process.env.HOSTNAME;\nvar JWTSECRET = process.env.JWTSECRET; // Load schema and resolvers\n\nvar typeDefs = require('./graphql/types/index');\n\nvar resolvers = require('./graphql/resolves/index');\n\nvar tradeTokenForUser = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(authorization) {\n    var token, verificationResponse;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = authorization ? authorization.slice(7, authorization.length) : '';\n            verificationResponse = jwt.verify(token, JWTSECRET);\n\n            if (verificationResponse) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            return _context.abrupt(\"return\", verificationResponse);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function tradeTokenForUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar schema = makeExecutableSchema({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n});\n(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n  var app, httpServer, server;\n  return _regenerator[\"default\"].wrap(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          app = express();\n          httpServer = createServer(app);\n          server = new ApolloServer({\n            schema: schema,\n            context: function () {\n              var _context2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(_ref3) {\n                var req, authToken, currentUser;\n                return _regenerator[\"default\"].wrap(function _callee2$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        req = _ref3.req;\n                        authToken = null;\n                        currentUser = null;\n                        _context3.prev = 3;\n                        authToken = req.headers['authorization'];\n\n                        if (!authToken) {\n                          _context3.next = 9;\n                          break;\n                        }\n\n                        _context3.next = 8;\n                        return tradeTokenForUser(authToken);\n\n                      case 8:\n                        currentUser = _context3.sent;\n\n                      case 9:\n                        _context3.next = 14;\n                        break;\n\n                      case 11:\n                        _context3.prev = 11;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        console.warn(\"Unable to authenticate using auth token: \".concat(_context3.t0));\n\n                      case 14:\n                        return _context3.abrupt(\"return\", {\n                          currentUser: currentUser\n                        });\n\n                      case 15:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee2, null, [[3, 11]]);\n              }));\n\n              function context(_x2) {\n                return _context2.apply(this, arguments);\n              }\n\n              return context;\n            }()\n          });\n          _context4.next = 5;\n          return server.start();\n\n        case 5:\n          // @ts-ignore\n          app.use(cors('*')); // allows request from webapp\n\n          app.use(graphqlUploadExpress());\n          app.use(compression());\n          app.use(bodyParser.json({\n            limit: '50mb'\n          }));\n          app.use(bodyParser.urlencoded({\n            limit: '50mb',\n            extended: true\n          }));\n          app.use('/_upload', express[\"static\"](path.join(__dirname, 'upload'), {\n            index: false,\n            maxAge: '7d'\n          })); // Mount Apollo middleware here.\n\n          server.applyMiddleware({\n            app: app\n          });\n          SubscriptionServer.create({\n            schema: schema,\n            execute: execute,\n            subscribe: subscribe\n          }, {\n            server: httpServer,\n            path: server.graphqlPath\n          });\n          httpServer.listen({\n            port: PORT,\n            hostname: HOSTNAME\n          }, function () {\n            console.log(\"Query endpoint ready at \".concat(HOSTNAME, \":\").concat(PORT).concat(server.graphqlPath));\n            console.log(\"Subscription endpoint ready at ws://localhost:\".concat(PORT).concat(server.graphqlPath));\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee3);\n}))();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "require",
        "config",
        "express",
        "ApolloServer",
        "makeExecutableSchema",
        "jwt",
        "compression",
        "GraphQLUpload",
        "graphqlUploadExpress",
        "SubscriptionServer",
        "cors",
        "createServer",
        "execute",
        "subscribe",
        "bodyParser",
        "path",
        "PORT",
        "process",
        "env",
        "HOSTNAME",
        "JWTSECRET",
        "typeDefs",
        "resolvers",
        "tradeTokenForUser",
        "authorization",
        "token",
        "slice",
        "length",
        "verificationResponse",
        "verify",
        "schema",
        "app",
        "httpServer",
        "server",
        "context",
        "req",
        "authToken",
        "currentUser",
        "headers",
        "console",
        "warn",
        "start",
        "use",
        "json",
        "limit",
        "urlencoded",
        "extended",
        "join",
        "__dirname",
        "index",
        "maxAge",
        "applyMiddleware",
        "create",
        "graphqlPath",
        "listen",
        "port",
        "hostname",
        "log"
      ],
      "mappings": ";;;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,eAAyBA,OAAO,CAAC,uBAAD,CAAhC;AAAA,IAAQG,YAAR,YAAQA,YAAR;;AACA,gBAAiCH,OAAO,CAAC,uBAAD,CAAxC;AAAA,IAAQI,oBAAR,aAAQA,oBAAR;;AACA,IAAMC,GAAG,GAAGL,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,aAAD,CAA3B;;AACA,gBAGIA,OAAO,CAAC,gBAAD,CAHX;AAAA,IACEO,aADF,aACEA,aADF;AAAA,IAEEC,oBAFF,aAEEA,oBAFF;;AAIA,gBAA+BR,OAAO,CAAC,4BAAD,CAAtC;AAAA,IAAQS,kBAAR,aAAQA,kBAAR;;AACA,IAAMC,IAAI,GAAGV,OAAO,CAAC,MAAD,CAApB;;AACA,gBAAyBA,OAAO,CAAC,MAAD,CAAhC;AAAA,IAAQW,YAAR,aAAQA,YAAR;;AACA,gBAA+BX,OAAO,CAAC,SAAD,CAAtC;AAAA,IAAQY,OAAR,aAAQA,OAAR;AAAA,IAAiBC,SAAjB,aAAiBA,SAAjB;;AACA,IAAMC,UAAU,GAAGd,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMe,IAAI,GAAGf,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAIgB,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAvB;AACA,IAAIG,QAAQ,GAAGF,OAAO,CAACC,GAAR,CAAYC,QAA3B;AACA,IAAIC,SAAS,GAAGH,OAAO,CAACC,GAAR,CAAYE,SAA5B,C,CAEA;;AACA,IAAMC,QAAQ,GAAGrB,OAAO,CAAC,uBAAD,CAAxB;;AACA,IAAMsB,SAAS,GAAGtB,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAMuB,iBAAiB;AAAA,2FAAG,iBAAMC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,KADkB,GACVD,aAAa,GAAGA,aAAa,CAACE,KAAd,CAAoB,CAApB,EAAuBF,aAAa,CAACG,MAArC,CAAH,GAAkD,EADrD;AAElBC,YAAAA,oBAFkB,GAEKvB,GAAG,CAACwB,MAAJ,CAAWJ,KAAX,EAAkBL,SAAlB,CAFL;;AAAA,gBAGnBQ,oBAHmB;AAAA;AAAA;AAAA;;AAAA,6CAIf,KAJe;;AAAA;AAAA,6CAMjBA,oBANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBL,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AASA,IAAMO,MAAM,GAAG1B,oBAAoB,CAAC;AAClCiB,EAAAA,QAAQ,EAARA,QADkC;AAElCC,EAAAA,SAAS,EAATA;AAFkC,CAAD,CAAnC;AAKA,8EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACOS,UAAAA,GADP,GACa7B,OAAO,EADpB;AAEO8B,UAAAA,UAFP,GAEoBrB,YAAY,CAACoB,GAAD,CAFhC;AAIOE,UAAAA,MAJP,GAIgB,IAAI9B,YAAJ,CAAiB;AAC9B2B,YAAAA,MAAM,EAANA,MAD8B;AAE9BI,YAAAA,OAAO;AAAA,4GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,wBAAAA,GAAT,SAASA,GAAT;AACHC,wBAAAA,SADG,GACS,IADT;AAEHC,wBAAAA,WAFG,GAEW,IAFX;AAAA;AAKLD,wBAAAA,SAAS,GAAGD,GAAG,CAACG,OAAJ,CAAY,eAAZ,CAAZ;;AALK,6BAMDF,SANC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAOiBb,iBAAiB,CAACa,SAAD,CAPlC;;AAAA;AAOHC,wBAAAA,WAPG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAULE,wBAAAA,OAAO,CAACC,IAAR;;AAVK;AAAA,0DAYA;AACLH,0BAAAA,WAAW,EAAXA;AADK,yBAZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFuB,WAAjB,CAJhB;AAAA;AAAA,iBAwBOJ,MAAM,CAACQ,KAAP,EAxBP;;AAAA;AA0BC;AACAV,UAAAA,GAAG,CAACW,GAAJ,CAAQhC,IAAI,CAAC,GAAD,CAAZ,EA3BD,CA2BqB;;AAEpBqB,UAAAA,GAAG,CAACW,GAAJ,CAAQlC,oBAAoB,EAA5B;AAEAuB,UAAAA,GAAG,CAACW,GAAJ,CAAQpC,WAAW,EAAnB;AAEAyB,UAAAA,GAAG,CAACW,GAAJ,CAAQ5B,UAAU,CAAC6B,IAAX,CAAgB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAhB,CAAR;AAEAb,UAAAA,GAAG,CAACW,GAAJ,CAAQ5B,UAAU,CAAC+B,UAAX,CAAsB;AAAED,YAAAA,KAAK,EAAE,MAAT;AAAiBE,YAAAA,QAAQ,EAAE;AAA3B,WAAtB,CAAR;AAEAf,UAAAA,GAAG,CAACW,GAAJ,CAAQ,UAAR,EAAoBxC,OAAO,UAAP,CAAea,IAAI,CAACgC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,EAA+C;AACjEC,YAAAA,KAAK,EAAE,KAD0D;AAEjEC,YAAAA,MAAM,EAAE;AAFyD,WAA/C,CAApB,EArCD,CA0CC;;AACAjB,UAAAA,MAAM,CAACkB,eAAP,CAAuB;AAAEpB,YAAAA,GAAG,EAAHA;AAAF,WAAvB;AAEAtB,UAAAA,kBAAkB,CAAC2C,MAAnB,CACE;AAAEtB,YAAAA,MAAM,EAANA,MAAF;AAAUlB,YAAAA,OAAO,EAAPA,OAAV;AAAmBC,YAAAA,SAAS,EAATA;AAAnB,WADF,EAEE;AAAEoB,YAAAA,MAAM,EAAED,UAAV;AAAsBjB,YAAAA,IAAI,EAAEkB,MAAM,CAACoB;AAAnC,WAFF;AAKArB,UAAAA,UAAU,CAACsB,MAAX,CAAkB;AAAEC,YAAAA,IAAI,EAAEvC,IAAR;AAAcwC,YAAAA,QAAQ,EAAErC;AAAxB,WAAlB,EAAsD,YAAM;AAC1DoB,YAAAA,OAAO,CAACkB,GAAR,mCAC6BtC,QAD7B,cACyCH,IADzC,SACgDiB,MAAM,CAACoB,WADvD;AAGAd,YAAAA,OAAO,CAACkB,GAAR,yDACmDzC,IADnD,SAC0DiB,MAAM,CAACoB,WADjE;AAGD,WAPD;;AAlDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\",
      "sourcesContent": [
        "require('dotenv').config();\r\nconst express = require('express');\r\nconst { ApolloServer } = require('apollo-server-express');\r\nconst { makeExecutableSchema } = require('@graphql-tools/schema');\r\nconst jwt = require('jsonwebtoken');\r\nconst compression = require('compression');\r\nconst {\r\n  GraphQLUpload,\r\n  graphqlUploadExpress, // A Koa implementation is also exported.\r\n} = require('graphql-upload');\r\nconst { SubscriptionServer } = require('subscriptions-transport-ws');\r\nconst cors = require('cors');\r\nconst { createServer } = require('http');\r\nconst { execute, subscribe } = require('graphql');\r\nconst bodyParser = require('body-parser');\r\nconst path = require('path');\r\n\r\n// Environment\r\nvar PORT = process.env.PORT;\r\nvar HOSTNAME = process.env.HOSTNAME;\r\nvar JWTSECRET = process.env.JWTSECRET;\r\n\r\n// Load schema and resolvers\r\nconst typeDefs = require('./graphql/types/index');\r\nconst resolvers = require('./graphql/resolves/index');\r\n\r\nconst tradeTokenForUser = async authorization => {\r\n  const token = authorization ? authorization.slice(7, authorization.length) : '';\r\n  const verificationResponse = jwt.verify(token, JWTSECRET);\r\n  if (!verificationResponse) {\r\n    return false\r\n  }\r\n  return verificationResponse\r\n};\r\n\r\nconst schema = makeExecutableSchema({\r\n  typeDefs,\r\n  resolvers\r\n});\r\n\r\n(async () => {\r\n  const app = express();\r\n  const httpServer = createServer(app);\r\n\r\n  const server = new ApolloServer({\r\n    schema,\r\n    context: async ({ req }) => {\r\n      let authToken = null;\r\n      let currentUser = null;\r\n\r\n      try {\r\n        authToken = req.headers['authorization'];\r\n        if (authToken) {\r\n          currentUser = await tradeTokenForUser(authToken);\r\n        }\r\n      } catch (e) {\r\n        console.warn(`Unable to authenticate using auth token: ${e}`);\r\n      }\r\n      return {\r\n        currentUser\r\n      };\r\n    }\r\n  });\r\n\r\n  await server.start();\r\n\r\n  // @ts-ignore\r\n  app.use(cors('*')); // allows request from webapp\r\n\r\n  app.use(graphqlUploadExpress());\r\n\r\n  app.use(compression());\r\n\r\n  app.use(bodyParser.json({ limit: '50mb' }));\r\n\r\n  app.use(bodyParser.urlencoded({ limit: '50mb', extended: true }));\r\n\r\n  app.use('/_upload', express.static(path.join(__dirname, 'upload'), {\r\n    index: false,\r\n    maxAge: '7d'\r\n  }))\r\n\r\n  // Mount Apollo middleware here.\r\n  server.applyMiddleware({ app });\r\n\r\n  SubscriptionServer.create(\r\n    { schema, execute, subscribe },\r\n    { server: httpServer, path: server.graphqlPath }\r\n  );\r\n\r\n  httpServer.listen({ port: PORT, hostname: HOSTNAME }, () => {\r\n    console.log(\r\n      `Query endpoint ready at ${HOSTNAME}:${PORT}${server.graphqlPath}`\r\n    );\r\n    console.log(\r\n      `Subscription endpoint ready at ws://localhost:${PORT}${server.graphqlPath}`\r\n    );\r\n  });\r\n})();"
      ]
    },
    "sourceType": "script",
    "mtime": 1652769444846
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\index.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path');\n\nvar _require = require('@graphql-tools/load-files'),\n    loadFilesSync = _require.loadFilesSync;\n\nvar _require2 = require('@graphql-tools/merge'),\n    mergeTypeDefs = _require2.mergeTypeDefs;\n\nvar types = loadFilesSync(path.join(__dirname, '.'), {\n  extensions: ['js'],\n  recursive: true\n}); //remove empty object in array\n\nvar newArray = types.filter(function (value) {\n  return Object.keys(value).length !== 0;\n});\nmodule.exports = mergeTypeDefs(newArray);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwibG9hZEZpbGVzU3luYyIsIm1lcmdlVHlwZURlZnMiLCJ0eXBlcyIsImpvaW4iLCJfX2Rpcm5hbWUiLCJleHRlbnNpb25zIiwicmVjdXJzaXZlIiwibmV3QXJyYXkiLCJmaWx0ZXIiLCJ2YWx1ZSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsZUFBMEJBLE9BQU8sQ0FBQywyQkFBRCxDQUFqQztBQUFBLElBQVFDLGFBQVIsWUFBUUEsYUFBUjs7QUFDQSxnQkFBMEJELE9BQU8sQ0FBQyxzQkFBRCxDQUFqQztBQUFBLElBQVFFLGFBQVIsYUFBUUEsYUFBUjs7QUFFQSxJQUFNQyxLQUFLLEdBQUdGLGFBQWEsQ0FBQ0YsSUFBSSxDQUFDSyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsR0FBckIsQ0FBRCxFQUE0QjtBQUFFQyxFQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFELENBQWQ7QUFBc0JDLEVBQUFBLFNBQVMsRUFBRTtBQUFqQyxDQUE1QixDQUEzQixDLENBRUE7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHTCxLQUFLLENBQUNNLE1BQU4sQ0FBYSxVQUFBQyxLQUFLO0FBQUEsU0FBSUMsTUFBTSxDQUFDQyxJQUFQLENBQVlGLEtBQVosRUFBbUJHLE1BQW5CLEtBQThCLENBQWxDO0FBQUEsQ0FBbEIsQ0FBakI7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixhQUFhLENBQUNNLFFBQUQsQ0FBOUIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcZ3JhcGhxbFxcdHlwZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XHJcbmNvbnN0IHsgbG9hZEZpbGVzU3luYyB9ID0gcmVxdWlyZSgnQGdyYXBocWwtdG9vbHMvbG9hZC1maWxlcycpO1xyXG5jb25zdCB7IG1lcmdlVHlwZURlZnMgfSA9IHJlcXVpcmUoJ0BncmFwaHFsLXRvb2xzL21lcmdlJyk7XHJcblxyXG5jb25zdCB0eXBlcyA9IGxvYWRGaWxlc1N5bmMocGF0aC5qb2luKF9fZGlybmFtZSwgJy4nKSwgeyBleHRlbnNpb25zOiBbJ2pzJ10sIHJlY3Vyc2l2ZTogdHJ1ZSB9KVxyXG5cclxuLy9yZW1vdmUgZW1wdHkgb2JqZWN0IGluIGFycmF5XHJcbmNvbnN0IG5ld0FycmF5ID0gdHlwZXMuZmlsdGVyKHZhbHVlID0+IE9iamVjdC5rZXlzKHZhbHVlKS5sZW5ndGggIT09IDApO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtZXJnZVR5cGVEZWZzKG5ld0FycmF5KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "path",
        "require",
        "loadFilesSync",
        "mergeTypeDefs",
        "types",
        "join",
        "__dirname",
        "extensions",
        "recursive",
        "newArray",
        "filter",
        "value",
        "Object",
        "keys",
        "length",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,eAA0BA,OAAO,CAAC,2BAAD,CAAjC;AAAA,IAAQC,aAAR,YAAQA,aAAR;;AACA,gBAA0BD,OAAO,CAAC,sBAAD,CAAjC;AAAA,IAAQE,aAAR,aAAQA,aAAR;;AAEA,IAAMC,KAAK,GAAGF,aAAa,CAACF,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,GAArB,CAAD,EAA4B;AAAEC,EAAAA,UAAU,EAAE,CAAC,IAAD,CAAd;AAAsBC,EAAAA,SAAS,EAAE;AAAjC,CAA5B,CAA3B,C,CAEA;;AACA,IAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa,UAAAC,KAAK;AAAA,SAAIC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,KAA8B,CAAlC;AAAA,CAAlB,CAAjB;AAEAC,MAAM,CAACC,OAAP,GAAiBb,aAAa,CAACM,QAAD,CAA9B",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\",
      "sourcesContent": [
        "const path = require('path');\r\nconst { loadFilesSync } = require('@graphql-tools/load-files');\r\nconst { mergeTypeDefs } = require('@graphql-tools/merge');\r\n\r\nconst types = loadFilesSync(path.join(__dirname, '.'), { extensions: ['js'], recursive: true })\r\n\r\n//remove empty object in array\r\nconst newArray = types.filter(value => Object.keys(value).length !== 0);\r\n\r\nmodule.exports = mergeTypeDefs(newArray);"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518334
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\auth\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\auth\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\auth\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\auth\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\auth\\auth.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\auth\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\auth\\",
        "sourceFileName": "auth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _templateObject;\n\nvar _require = require('apollo-server-express'),\n    gql = _require.gql;\n\nvar typeDefs = gql(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  type LoginModel {\\n    User_ID: ID,\\n    User_Email: String,\\n    User_Name: String,\\n    IsAdmin: Boolean,\\n    Is_Deleted: Boolean,\\n    Moves_Company_ID: Int,\\n    Moves_Charity_ID: Int,\\n    Type: Int,\\n    token: String,\\n    refreshToken: String,\\n    tokenExpiration: Int,\\n  }\\n\\n  type ResponseLogin {\\n    user: LoginModel,\\n    messageCode: Int!,\\n    message: String!,\\n  }\\n\\n  # ROOT TYPE\\n  type Query {\\n    login(email: String!, password: String!): ResponseLogin,\\n    refreshToken(refreshToken: String!): ResponseLogin\\n  }\\n\\n  type Mutation{\\n    signResetPassWord(Email:String!,url:String):BaseResponse,\\n    checkCodeResetPassword(hashCode:String):BaseResponse,\\n    changeResetPassword(hashCode:String,Password:String!):BaseResponse\\n  }\\n\"])));\nmodule.exports = typeDefs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImdxbCIsInR5cGVEZWZzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxlQUFnQkEsT0FBTyxDQUFDLHVCQUFELENBQXZCO0FBQUEsSUFBUUMsR0FBUixZQUFRQSxHQUFSOztBQUVBLElBQU1DLFFBQVEsR0FBR0QsR0FBSCxvMUJBQWQ7QUFrQ0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsUUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcZ3JhcGhxbFxcdHlwZXNcXGF1dGhcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZ3FsIH0gPSByZXF1aXJlKCdhcG9sbG8tc2VydmVyLWV4cHJlc3MnKTtcclxuXHJcbmNvbnN0IHR5cGVEZWZzID0gZ3FsYFxyXG4gIHR5cGUgTG9naW5Nb2RlbCB7XHJcbiAgICBVc2VyX0lEOiBJRCxcclxuICAgIFVzZXJfRW1haWw6IFN0cmluZyxcclxuICAgIFVzZXJfTmFtZTogU3RyaW5nLFxyXG4gICAgSXNBZG1pbjogQm9vbGVhbixcclxuICAgIElzX0RlbGV0ZWQ6IEJvb2xlYW4sXHJcbiAgICBNb3Zlc19Db21wYW55X0lEOiBJbnQsXHJcbiAgICBNb3Zlc19DaGFyaXR5X0lEOiBJbnQsXHJcbiAgICBUeXBlOiBJbnQsXHJcbiAgICB0b2tlbjogU3RyaW5nLFxyXG4gICAgcmVmcmVzaFRva2VuOiBTdHJpbmcsXHJcbiAgICB0b2tlbkV4cGlyYXRpb246IEludCxcclxuICB9XHJcblxyXG4gIHR5cGUgUmVzcG9uc2VMb2dpbiB7XHJcbiAgICB1c2VyOiBMb2dpbk1vZGVsLFxyXG4gICAgbWVzc2FnZUNvZGU6IEludCEsXHJcbiAgICBtZXNzYWdlOiBTdHJpbmchLFxyXG4gIH1cclxuXHJcbiAgIyBST09UIFRZUEVcclxuICB0eXBlIFF1ZXJ5IHtcclxuICAgIGxvZ2luKGVtYWlsOiBTdHJpbmchLCBwYXNzd29yZDogU3RyaW5nISk6IFJlc3BvbnNlTG9naW4sXHJcbiAgICByZWZyZXNoVG9rZW4ocmVmcmVzaFRva2VuOiBTdHJpbmchKTogUmVzcG9uc2VMb2dpblxyXG4gIH1cclxuXHJcbiAgdHlwZSBNdXRhdGlvbntcclxuICAgIHNpZ25SZXNldFBhc3NXb3JkKEVtYWlsOlN0cmluZyEsdXJsOlN0cmluZyk6QmFzZVJlc3BvbnNlLFxyXG4gICAgY2hlY2tDb2RlUmVzZXRQYXNzd29yZChoYXNoQ29kZTpTdHJpbmcpOkJhc2VSZXNwb25zZSxcclxuICAgIGNoYW5nZVJlc2V0UGFzc3dvcmQoaGFzaENvZGU6U3RyaW5nLFBhc3N3b3JkOlN0cmluZyEpOkJhc2VSZXNwb25zZVxyXG4gIH1cclxuYDtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gdHlwZURlZnM7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "require",
        "gql",
        "typeDefs",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,eAAgBA,OAAO,CAAC,uBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,QAAQ,GAAGD,GAAH,o1BAAd;AAkCAE,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\auth\\",
      "sourcesContent": [
        "const { gql } = require('apollo-server-express');\r\n\r\nconst typeDefs = gql`\r\n  type LoginModel {\r\n    User_ID: ID,\r\n    User_Email: String,\r\n    User_Name: String,\r\n    IsAdmin: Boolean,\r\n    Is_Deleted: Boolean,\r\n    Moves_Company_ID: Int,\r\n    Moves_Charity_ID: Int,\r\n    Type: Int,\r\n    token: String,\r\n    refreshToken: String,\r\n    tokenExpiration: Int,\r\n  }\r\n\r\n  type ResponseLogin {\r\n    user: LoginModel,\r\n    messageCode: Int!,\r\n    message: String!,\r\n  }\r\n\r\n  # ROOT TYPE\r\n  type Query {\r\n    login(email: String!, password: String!): ResponseLogin,\r\n    refreshToken(refreshToken: String!): ResponseLogin\r\n  }\r\n\r\n  type Mutation{\r\n    signResetPassWord(Email:String!,url:String):BaseResponse,\r\n    checkCodeResetPassword(hashCode:String):BaseResponse,\r\n    changeResetPassword(hashCode:String,Password:String!):BaseResponse\r\n  }\r\n`;\r\n\r\nmodule.exports = typeDefs;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1652935443703
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\charity\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\charity\\\\charity.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\charity\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\charity\\charity.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\charity\\charity.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\charity\\charity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\charity\\",
        "sourceFileName": "charity.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _templateObject;\n\nvar _require = require('apollo-server-express'),\n    gql = _require.gql;\n\nvar typeDefs = gql(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n# scalar Timestamp\\n\\n    type ChariryUser {\\n        Moves_Charity_ID: ID,\\n        Charity_Name: String,\\n        Charity_Commission_No: String,\\n        Contact_Name: String,\\n        Contact_Email: String,\\n        Contact_Phone_Number: String,\\n\\n        Is_Active: Boolean,\\n        Is_Deleted: Boolean,\\n        Created_Date: Timestamp,\\n        Last_Modified_Date: Timestamp,\\n        Created_By: Int,\\n        Last_Modified_By: Int\\n    }\\n\\n    input CharityUserInput {\\n        Charity_Name: String,\\n        Charity_Commission_No: String,\\n        Contact_Name: String,\\n        Contact_Email: String,\\n        Contact_Phone_Number: String,\\n    }\\n\\n    # ROOT TYPE\\n    type Mutation {\\n        createCharity(bodyData: CharityUserInput!) : BaseResponse\\n    }\\n\\n\"])));\nmodule.exports = typeDefs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXJpdHkuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImdxbCIsInR5cGVEZWZzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxlQUFnQkEsT0FBTyxDQUFDLHVCQUFELENBQXZCO0FBQUEsSUFBUUMsR0FBUixZQUFRQSxHQUFSOztBQUVBLElBQU1DLFFBQVEsR0FBR0QsR0FBSCxpMkJBQWQ7QUFpQ0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsUUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcZ3JhcGhxbFxcdHlwZXNcXGNoYXJpdHlcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZ3FsIH0gPSByZXF1aXJlKCdhcG9sbG8tc2VydmVyLWV4cHJlc3MnKTtcclxuXHJcbmNvbnN0IHR5cGVEZWZzID0gZ3FsYFxyXG4jIHNjYWxhciBUaW1lc3RhbXBcclxuXHJcbiAgICB0eXBlIENoYXJpcnlVc2VyIHtcclxuICAgICAgICBNb3Zlc19DaGFyaXR5X0lEOiBJRCxcclxuICAgICAgICBDaGFyaXR5X05hbWU6IFN0cmluZyxcclxuICAgICAgICBDaGFyaXR5X0NvbW1pc3Npb25fTm86IFN0cmluZyxcclxuICAgICAgICBDb250YWN0X05hbWU6IFN0cmluZyxcclxuICAgICAgICBDb250YWN0X0VtYWlsOiBTdHJpbmcsXHJcbiAgICAgICAgQ29udGFjdF9QaG9uZV9OdW1iZXI6IFN0cmluZyxcclxuXHJcbiAgICAgICAgSXNfQWN0aXZlOiBCb29sZWFuLFxyXG4gICAgICAgIElzX0RlbGV0ZWQ6IEJvb2xlYW4sXHJcbiAgICAgICAgQ3JlYXRlZF9EYXRlOiBUaW1lc3RhbXAsXHJcbiAgICAgICAgTGFzdF9Nb2RpZmllZF9EYXRlOiBUaW1lc3RhbXAsXHJcbiAgICAgICAgQ3JlYXRlZF9CeTogSW50LFxyXG4gICAgICAgIExhc3RfTW9kaWZpZWRfQnk6IEludFxyXG4gICAgfVxyXG5cclxuICAgIGlucHV0IENoYXJpdHlVc2VySW5wdXQge1xyXG4gICAgICAgIENoYXJpdHlfTmFtZTogU3RyaW5nLFxyXG4gICAgICAgIENoYXJpdHlfQ29tbWlzc2lvbl9ObzogU3RyaW5nLFxyXG4gICAgICAgIENvbnRhY3RfTmFtZTogU3RyaW5nLFxyXG4gICAgICAgIENvbnRhY3RfRW1haWw6IFN0cmluZyxcclxuICAgICAgICBDb250YWN0X1Bob25lX051bWJlcjogU3RyaW5nLFxyXG4gICAgfVxyXG5cclxuICAgICMgUk9PVCBUWVBFXHJcbiAgICB0eXBlIE11dGF0aW9uIHtcclxuICAgICAgICBjcmVhdGVDaGFyaXR5KGJvZHlEYXRhOiBDaGFyaXR5VXNlcklucHV0ISkgOiBCYXNlUmVzcG9uc2VcclxuICAgIH1cclxuXHJcbmA7XHJcbm1vZHVsZS5leHBvcnRzID0gdHlwZURlZnM7Il19",
    "map": {
      "version": 3,
      "sources": [
        "charity.js"
      ],
      "names": [
        "require",
        "gql",
        "typeDefs",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,eAAgBA,OAAO,CAAC,uBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,QAAQ,GAAGD,GAAH,i2BAAd;AAiCAE,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\charity\\",
      "sourcesContent": [
        "const { gql } = require('apollo-server-express');\r\n\r\nconst typeDefs = gql`\r\n# scalar Timestamp\r\n\r\n    type ChariryUser {\r\n        Moves_Charity_ID: ID,\r\n        Charity_Name: String,\r\n        Charity_Commission_No: String,\r\n        Contact_Name: String,\r\n        Contact_Email: String,\r\n        Contact_Phone_Number: String,\r\n\r\n        Is_Active: Boolean,\r\n        Is_Deleted: Boolean,\r\n        Created_Date: Timestamp,\r\n        Last_Modified_Date: Timestamp,\r\n        Created_By: Int,\r\n        Last_Modified_By: Int\r\n    }\r\n\r\n    input CharityUserInput {\r\n        Charity_Name: String,\r\n        Charity_Commission_No: String,\r\n        Contact_Name: String,\r\n        Contact_Email: String,\r\n        Contact_Phone_Number: String,\r\n    }\r\n\r\n    # ROOT TYPE\r\n    type Mutation {\r\n        createCharity(bodyData: CharityUserInput!) : BaseResponse\r\n    }\r\n\r\n`;\r\nmodule.exports = typeDefs;"
      ]
    },
    "sourceType": "script",
    "mtime": 1652935320690
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\response\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\response\\\\baseResponse.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\response\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\response\\baseResponse.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\response\\baseResponse.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\response\\baseResponse.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\response\\",
        "sourceFileName": "baseResponse.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _templateObject;\n\nvar _require = require('apollo-server-express'),\n    gql = _require.gql;\n\nvar typeDefs = gql(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  type BaseResponse {\\n    messageCode: Int!\\n    message: String\\n  }\\n\"])));\nmodule.exports = typeDefs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2VSZXNwb25zZS5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZ3FsIiwidHlwZURlZnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGVBQWdCQSxPQUFPLENBQUMsdUJBQUQsQ0FBdkI7QUFBQSxJQUFRQyxHQUFSLFlBQVFBLEdBQVI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHRCxHQUFILGdLQUFkO0FBT0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsUUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcZ3JhcGhxbFxcdHlwZXNcXHJlc3BvbnNlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGdxbCB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XHJcblxyXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcclxuICB0eXBlIEJhc2VSZXNwb25zZSB7XHJcbiAgICBtZXNzYWdlQ29kZTogSW50IVxyXG4gICAgbWVzc2FnZTogU3RyaW5nXHJcbiAgfVxyXG5gO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB0eXBlRGVmczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "baseResponse.js"
      ],
      "names": [
        "require",
        "gql",
        "typeDefs",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,eAAgBA,OAAO,CAAC,uBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,QAAQ,GAAGD,GAAH,gKAAd;AAOAE,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\response\\",
      "sourcesContent": [
        "const { gql } = require('apollo-server-express');\r\n\r\nconst typeDefs = gql`\r\n  type BaseResponse {\r\n    messageCode: Int!\r\n    message: String\r\n  }\r\n`;\r\n\r\nmodule.exports = typeDefs;"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518336
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\scalarTypeSubscribe\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\scalarTypeSubscribe\\\\scalarType.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\scalarTypeSubscribe\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\scalarTypeSubscribe\\scalarType.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\scalarTypeSubscribe\\scalarType.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\scalarTypeSubscribe\\scalarType.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\scalarTypeSubscribe\\",
        "sourceFileName": "scalarType.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _templateObject;\n\nvar _require = require('apollo-server-express'),\n    gql = _require.gql;\n\nvar typeDefs = gql(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  scalar Timestamp\\n  scalar Upload\\n\"])));\nmodule.exports = typeDefs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjYWxhclR5cGUuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImdxbCIsInR5cGVEZWZzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxlQUFnQkEsT0FBTyxDQUFDLHVCQUFELENBQXZCO0FBQUEsSUFBUUMsR0FBUixZQUFRQSxHQUFSOztBQUVBLElBQU1DLFFBQVEsR0FBR0QsR0FBSCw2SEFBZDtBQUtBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFFBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxNb3Zlc01hc3RlclxcQ29kZVxcQWxpc2FtTW92ZS1Nb3Zlc01hdHRlclxcc2VydmVyXFxzcmNcXGdyYXBocWxcXHR5cGVzXFxzY2FsYXJUeXBlU3Vic2NyaWJlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGdxbCB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XHJcblxyXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcclxuICBzY2FsYXIgVGltZXN0YW1wXHJcbiAgc2NhbGFyIFVwbG9hZFxyXG5gXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVEZWZzIl19",
    "map": {
      "version": 3,
      "sources": [
        "scalarType.js"
      ],
      "names": [
        "require",
        "gql",
        "typeDefs",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,eAAgBA,OAAO,CAAC,uBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,QAAQ,GAAGD,GAAH,6HAAd;AAKAE,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\scalarTypeSubscribe\\",
      "sourcesContent": [
        "const { gql } = require('apollo-server-express');\r\n\r\nconst typeDefs = gql`\r\n  scalar Timestamp\r\n  scalar Upload\r\n`\r\n\r\nmodule.exports = typeDefs"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518337
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\subscription\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\subscription\\\\subscription.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\subscription\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\subscription\\subscription.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\subscription\\subscription.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\subscription\\subscription.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\subscription\\",
        "sourceFileName": "subscription.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _templateObject;\n\nvar _require = require('apollo-server-express'),\n    gql = _require.gql;\n\nvar typeDefs = gql(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  type Subscription {\\n    RefreshMessageCount: Boolean,\\n    RefreshThongBaoCount: Boolean\\n  }\\n\"])));\nmodule.exports = typeDefs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1YnNjcmlwdGlvbi5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZ3FsIiwidHlwZURlZnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGVBQWdCQSxPQUFPLENBQUMsdUJBQUQsQ0FBdkI7QUFBQSxJQUFRQyxHQUFSLFlBQVFBLEdBQVI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHRCxHQUFILDBMQUFkO0FBT0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsUUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcZ3JhcGhxbFxcdHlwZXNcXHN1YnNjcmlwdGlvblxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBncWwgfSA9IHJlcXVpcmUoJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcycpO1xyXG5cclxuY29uc3QgdHlwZURlZnMgPSBncWxgXHJcbiAgdHlwZSBTdWJzY3JpcHRpb24ge1xyXG4gICAgUmVmcmVzaE1lc3NhZ2VDb3VudDogQm9vbGVhbixcclxuICAgIFJlZnJlc2hUaG9uZ0Jhb0NvdW50OiBCb29sZWFuXHJcbiAgfVxyXG5gXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVEZWZzIl19",
    "map": {
      "version": 3,
      "sources": [
        "subscription.js"
      ],
      "names": [
        "require",
        "gql",
        "typeDefs",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,eAAgBA,OAAO,CAAC,uBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,QAAQ,GAAGD,GAAH,0LAAd;AAOAE,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\subscription\\",
      "sourcesContent": [
        "const { gql } = require('apollo-server-express');\r\n\r\nconst typeDefs = gql`\r\n  type Subscription {\r\n    RefreshMessageCount: Boolean,\r\n    RefreshThongBaoCount: Boolean\r\n  }\r\n`\r\n\r\nmodule.exports = typeDefs"
      ]
    },
    "sourceType": "script",
    "mtime": 1652779836262
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\tien-ich\\\\message\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\tien-ich\\\\message\\\\message.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\tien-ich\\message\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\tien-ich\\message\\message.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\tien-ich\\message\\message.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\tien-ich\\message\\message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\tien-ich\\message\\",
        "sourceFileName": "message.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _templateObject;\n\nvar _require = require('apollo-server-express'),\n    gql = _require.gql;\n\nvar typeDefs = gql(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  type Message {\\n    Id: ID!,\\n    TieuDe: String!,\\n    NoiDung: String!,\\n    NhomNguoiNhan: Int!,\\n    PhuongThucGui: String!,\\n    GuiTatCa: Boolean,\\n    SendDate: Timestamp,\\n    Status: Int,\\n    CreatedDate: Timestamp,\\n    StatusName: String\\n  }\\n\\n  input GetListMessageInput {\\n    FromCreatedDate: String,\\n    ToCreatedDate: String,\\n    FromSendDate: String,\\n    ToSendDate: String,\\n    ListStatus: [Int]\\n  }\\n\\n  type getListMessageResponse {\\n    listMessage: [Message],\\n    messageCode: Int,\\n    message: String,\\n  }\\n\\n  input MessageInput {\\n    TieuDe: String!,\\n    NoiDung: String!,\\n    NhomNguoiNhan: Int!,\\n    PhuongThucGui: String!,\\n    GuiTatCa: Boolean!,\\n    ListSelectedId: [Int]\\n  }\\n\\n  type DataSendMess {\\n    Id: Int,\\n    Name: String,\\n    ParentId: Int,\\n    Level: Int,\\n    NguoiDung_Id: Int,\\n    SoNguoiThuocNhomQuyen: Int,\\n    Selectable: Boolean \\n  }\\n\\n  type FileUploadMes {\\n    Id: Int,\\n    TenTaiLieu: String\\n  }\\n\\n  type GetMasterDataMessageDialogResponse {\\n    messageObject: Message,\\n    listDataSendMess: [DataSendMess],\\n    listDataPermissionGroup: [DataSendMess],\\n    listKeys: [String],\\n    listPartial: [Int],\\n    fileUploadMes: [FileUploadMes],\\n    messageCode: Int,\\n    message: String,\\n  }\\n\\n  type CreateMessageResponse {\\n    Id: Int,\\n    messageCode: Int,\\n    message: String,\\n  }\\n\\n  type GetCountMessageByUserId {\\n    count: Int,\\n    messageCode: Int,\\n    message: String,\\n  }\\n\\n  type MessageCustomize {\\n    Id: Int,\\n    TieuDe: String,\\n    NoiDung: String,\\n    SendDate: Timestamp,\\n    CreatedName: String,\\n    DaXem: Boolean,\\n    ListFile: [FileUploadMes]\\n  }\\n\\n  type GetListMessageByUserIdResponse {\\n    listMessage: [MessageCustomize],\\n    messageCode: Int,\\n    message: String,\\n  }\\n\\n  type downloadFileMessResponse {\\n    base64: String,\\n    type: String,\\n    messageCode: Int,\\n    message: String,\\n  }\\n  \\n  # ROOT TYPE\\n  type Query {\\n    getListMessage(GetListMessageInput: GetListMessageInput): getListMessageResponse,\\n    getMasterDataMessageDialog(Id: Int): GetMasterDataMessageDialogResponse,\\n    getCountMessageByUserId: GetCountMessageByUserId,\\n    getListMessageByUserId (Keyword: String): GetListMessageByUserIdResponse\\n  }\\n\\n  type Mutation {\\n    createMessage (MessageInput: MessageInput!, files: [Upload]): CreateMessageResponse,\\n    updateMessage  (Id: Int!, MessageInput: MessageInput!, files: [Upload]): BaseResponse,\\n    deleteMessage (Id: ID!): BaseResponse,\\n    sendMessage (Id: Int!): BaseResponse,\\n    deleteFileDinhKemMessage (Id: Int!): BaseResponse,\\n    downloadFileMess (Id: Int!): downloadFileMessResponse,\\n    xemMessage (Id: Int!): BaseResponse\\n  }\\n\"])));\nmodule.exports = typeDefs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImdxbCIsInR5cGVEZWZzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxlQUFnQkEsT0FBTyxDQUFDLHVCQUFELENBQXZCO0FBQUEsSUFBUUMsR0FBUixZQUFRQSxHQUFSOztBQUVBLElBQU1DLFFBQVEsR0FBR0QsR0FBSCx3dkZBQWQ7QUFxSEFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsUUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcZ3JhcGhxbFxcdHlwZXNcXHRpZW4taWNoXFxtZXNzYWdlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGdxbCB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XHJcblxyXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcclxuICB0eXBlIE1lc3NhZ2Uge1xyXG4gICAgSWQ6IElEISxcclxuICAgIFRpZXVEZTogU3RyaW5nISxcclxuICAgIE5vaUR1bmc6IFN0cmluZyEsXHJcbiAgICBOaG9tTmd1b2lOaGFuOiBJbnQhLFxyXG4gICAgUGh1b25nVGh1Y0d1aTogU3RyaW5nISxcclxuICAgIEd1aVRhdENhOiBCb29sZWFuLFxyXG4gICAgU2VuZERhdGU6IFRpbWVzdGFtcCxcclxuICAgIFN0YXR1czogSW50LFxyXG4gICAgQ3JlYXRlZERhdGU6IFRpbWVzdGFtcCxcclxuICAgIFN0YXR1c05hbWU6IFN0cmluZ1xyXG4gIH1cclxuXHJcbiAgaW5wdXQgR2V0TGlzdE1lc3NhZ2VJbnB1dCB7XHJcbiAgICBGcm9tQ3JlYXRlZERhdGU6IFN0cmluZyxcclxuICAgIFRvQ3JlYXRlZERhdGU6IFN0cmluZyxcclxuICAgIEZyb21TZW5kRGF0ZTogU3RyaW5nLFxyXG4gICAgVG9TZW5kRGF0ZTogU3RyaW5nLFxyXG4gICAgTGlzdFN0YXR1czogW0ludF1cclxuICB9XHJcblxyXG4gIHR5cGUgZ2V0TGlzdE1lc3NhZ2VSZXNwb25zZSB7XHJcbiAgICBsaXN0TWVzc2FnZTogW01lc3NhZ2VdLFxyXG4gICAgbWVzc2FnZUNvZGU6IEludCxcclxuICAgIG1lc3NhZ2U6IFN0cmluZyxcclxuICB9XHJcblxyXG4gIGlucHV0IE1lc3NhZ2VJbnB1dCB7XHJcbiAgICBUaWV1RGU6IFN0cmluZyEsXHJcbiAgICBOb2lEdW5nOiBTdHJpbmchLFxyXG4gICAgTmhvbU5ndW9pTmhhbjogSW50ISxcclxuICAgIFBodW9uZ1RodWNHdWk6IFN0cmluZyEsXHJcbiAgICBHdWlUYXRDYTogQm9vbGVhbiEsXHJcbiAgICBMaXN0U2VsZWN0ZWRJZDogW0ludF1cclxuICB9XHJcblxyXG4gIHR5cGUgRGF0YVNlbmRNZXNzIHtcclxuICAgIElkOiBJbnQsXHJcbiAgICBOYW1lOiBTdHJpbmcsXHJcbiAgICBQYXJlbnRJZDogSW50LFxyXG4gICAgTGV2ZWw6IEludCxcclxuICAgIE5ndW9pRHVuZ19JZDogSW50LFxyXG4gICAgU29OZ3VvaVRodW9jTmhvbVF1eWVuOiBJbnQsXHJcbiAgICBTZWxlY3RhYmxlOiBCb29sZWFuIFxyXG4gIH1cclxuXHJcbiAgdHlwZSBGaWxlVXBsb2FkTWVzIHtcclxuICAgIElkOiBJbnQsXHJcbiAgICBUZW5UYWlMaWV1OiBTdHJpbmdcclxuICB9XHJcblxyXG4gIHR5cGUgR2V0TWFzdGVyRGF0YU1lc3NhZ2VEaWFsb2dSZXNwb25zZSB7XHJcbiAgICBtZXNzYWdlT2JqZWN0OiBNZXNzYWdlLFxyXG4gICAgbGlzdERhdGFTZW5kTWVzczogW0RhdGFTZW5kTWVzc10sXHJcbiAgICBsaXN0RGF0YVBlcm1pc3Npb25Hcm91cDogW0RhdGFTZW5kTWVzc10sXHJcbiAgICBsaXN0S2V5czogW1N0cmluZ10sXHJcbiAgICBsaXN0UGFydGlhbDogW0ludF0sXHJcbiAgICBmaWxlVXBsb2FkTWVzOiBbRmlsZVVwbG9hZE1lc10sXHJcbiAgICBtZXNzYWdlQ29kZTogSW50LFxyXG4gICAgbWVzc2FnZTogU3RyaW5nLFxyXG4gIH1cclxuXHJcbiAgdHlwZSBDcmVhdGVNZXNzYWdlUmVzcG9uc2Uge1xyXG4gICAgSWQ6IEludCxcclxuICAgIG1lc3NhZ2VDb2RlOiBJbnQsXHJcbiAgICBtZXNzYWdlOiBTdHJpbmcsXHJcbiAgfVxyXG5cclxuICB0eXBlIEdldENvdW50TWVzc2FnZUJ5VXNlcklkIHtcclxuICAgIGNvdW50OiBJbnQsXHJcbiAgICBtZXNzYWdlQ29kZTogSW50LFxyXG4gICAgbWVzc2FnZTogU3RyaW5nLFxyXG4gIH1cclxuXHJcbiAgdHlwZSBNZXNzYWdlQ3VzdG9taXplIHtcclxuICAgIElkOiBJbnQsXHJcbiAgICBUaWV1RGU6IFN0cmluZyxcclxuICAgIE5vaUR1bmc6IFN0cmluZyxcclxuICAgIFNlbmREYXRlOiBUaW1lc3RhbXAsXHJcbiAgICBDcmVhdGVkTmFtZTogU3RyaW5nLFxyXG4gICAgRGFYZW06IEJvb2xlYW4sXHJcbiAgICBMaXN0RmlsZTogW0ZpbGVVcGxvYWRNZXNdXHJcbiAgfVxyXG5cclxuICB0eXBlIEdldExpc3RNZXNzYWdlQnlVc2VySWRSZXNwb25zZSB7XHJcbiAgICBsaXN0TWVzc2FnZTogW01lc3NhZ2VDdXN0b21pemVdLFxyXG4gICAgbWVzc2FnZUNvZGU6IEludCxcclxuICAgIG1lc3NhZ2U6IFN0cmluZyxcclxuICB9XHJcblxyXG4gIHR5cGUgZG93bmxvYWRGaWxlTWVzc1Jlc3BvbnNlIHtcclxuICAgIGJhc2U2NDogU3RyaW5nLFxyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgbWVzc2FnZUNvZGU6IEludCxcclxuICAgIG1lc3NhZ2U6IFN0cmluZyxcclxuICB9XHJcbiAgXHJcbiAgIyBST09UIFRZUEVcclxuICB0eXBlIFF1ZXJ5IHtcclxuICAgIGdldExpc3RNZXNzYWdlKEdldExpc3RNZXNzYWdlSW5wdXQ6IEdldExpc3RNZXNzYWdlSW5wdXQpOiBnZXRMaXN0TWVzc2FnZVJlc3BvbnNlLFxyXG4gICAgZ2V0TWFzdGVyRGF0YU1lc3NhZ2VEaWFsb2coSWQ6IEludCk6IEdldE1hc3RlckRhdGFNZXNzYWdlRGlhbG9nUmVzcG9uc2UsXHJcbiAgICBnZXRDb3VudE1lc3NhZ2VCeVVzZXJJZDogR2V0Q291bnRNZXNzYWdlQnlVc2VySWQsXHJcbiAgICBnZXRMaXN0TWVzc2FnZUJ5VXNlcklkIChLZXl3b3JkOiBTdHJpbmcpOiBHZXRMaXN0TWVzc2FnZUJ5VXNlcklkUmVzcG9uc2VcclxuICB9XHJcblxyXG4gIHR5cGUgTXV0YXRpb24ge1xyXG4gICAgY3JlYXRlTWVzc2FnZSAoTWVzc2FnZUlucHV0OiBNZXNzYWdlSW5wdXQhLCBmaWxlczogW1VwbG9hZF0pOiBDcmVhdGVNZXNzYWdlUmVzcG9uc2UsXHJcbiAgICB1cGRhdGVNZXNzYWdlICAoSWQ6IEludCEsIE1lc3NhZ2VJbnB1dDogTWVzc2FnZUlucHV0ISwgZmlsZXM6IFtVcGxvYWRdKTogQmFzZVJlc3BvbnNlLFxyXG4gICAgZGVsZXRlTWVzc2FnZSAoSWQ6IElEISk6IEJhc2VSZXNwb25zZSxcclxuICAgIHNlbmRNZXNzYWdlIChJZDogSW50ISk6IEJhc2VSZXNwb25zZSxcclxuICAgIGRlbGV0ZUZpbGVEaW5oS2VtTWVzc2FnZSAoSWQ6IEludCEpOiBCYXNlUmVzcG9uc2UsXHJcbiAgICBkb3dubG9hZEZpbGVNZXNzIChJZDogSW50ISk6IGRvd25sb2FkRmlsZU1lc3NSZXNwb25zZSxcclxuICAgIHhlbU1lc3NhZ2UgKElkOiBJbnQhKTogQmFzZVJlc3BvbnNlXHJcbiAgfVxyXG5gXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVEZWZzIl19",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "require",
        "gql",
        "typeDefs",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,eAAgBA,OAAO,CAAC,uBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,QAAQ,GAAGD,GAAH,wvFAAd;AAqHAE,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\tien-ich\\message\\",
      "sourcesContent": [
        "const { gql } = require('apollo-server-express');\r\n\r\nconst typeDefs = gql`\r\n  type Message {\r\n    Id: ID!,\r\n    TieuDe: String!,\r\n    NoiDung: String!,\r\n    NhomNguoiNhan: Int!,\r\n    PhuongThucGui: String!,\r\n    GuiTatCa: Boolean,\r\n    SendDate: Timestamp,\r\n    Status: Int,\r\n    CreatedDate: Timestamp,\r\n    StatusName: String\r\n  }\r\n\r\n  input GetListMessageInput {\r\n    FromCreatedDate: String,\r\n    ToCreatedDate: String,\r\n    FromSendDate: String,\r\n    ToSendDate: String,\r\n    ListStatus: [Int]\r\n  }\r\n\r\n  type getListMessageResponse {\r\n    listMessage: [Message],\r\n    messageCode: Int,\r\n    message: String,\r\n  }\r\n\r\n  input MessageInput {\r\n    TieuDe: String!,\r\n    NoiDung: String!,\r\n    NhomNguoiNhan: Int!,\r\n    PhuongThucGui: String!,\r\n    GuiTatCa: Boolean!,\r\n    ListSelectedId: [Int]\r\n  }\r\n\r\n  type DataSendMess {\r\n    Id: Int,\r\n    Name: String,\r\n    ParentId: Int,\r\n    Level: Int,\r\n    NguoiDung_Id: Int,\r\n    SoNguoiThuocNhomQuyen: Int,\r\n    Selectable: Boolean \r\n  }\r\n\r\n  type FileUploadMes {\r\n    Id: Int,\r\n    TenTaiLieu: String\r\n  }\r\n\r\n  type GetMasterDataMessageDialogResponse {\r\n    messageObject: Message,\r\n    listDataSendMess: [DataSendMess],\r\n    listDataPermissionGroup: [DataSendMess],\r\n    listKeys: [String],\r\n    listPartial: [Int],\r\n    fileUploadMes: [FileUploadMes],\r\n    messageCode: Int,\r\n    message: String,\r\n  }\r\n\r\n  type CreateMessageResponse {\r\n    Id: Int,\r\n    messageCode: Int,\r\n    message: String,\r\n  }\r\n\r\n  type GetCountMessageByUserId {\r\n    count: Int,\r\n    messageCode: Int,\r\n    message: String,\r\n  }\r\n\r\n  type MessageCustomize {\r\n    Id: Int,\r\n    TieuDe: String,\r\n    NoiDung: String,\r\n    SendDate: Timestamp,\r\n    CreatedName: String,\r\n    DaXem: Boolean,\r\n    ListFile: [FileUploadMes]\r\n  }\r\n\r\n  type GetListMessageByUserIdResponse {\r\n    listMessage: [MessageCustomize],\r\n    messageCode: Int,\r\n    message: String,\r\n  }\r\n\r\n  type downloadFileMessResponse {\r\n    base64: String,\r\n    type: String,\r\n    messageCode: Int,\r\n    message: String,\r\n  }\r\n  \r\n  # ROOT TYPE\r\n  type Query {\r\n    getListMessage(GetListMessageInput: GetListMessageInput): getListMessageResponse,\r\n    getMasterDataMessageDialog(Id: Int): GetMasterDataMessageDialogResponse,\r\n    getCountMessageByUserId: GetCountMessageByUserId,\r\n    getListMessageByUserId (Keyword: String): GetListMessageByUserIdResponse\r\n  }\r\n\r\n  type Mutation {\r\n    createMessage (MessageInput: MessageInput!, files: [Upload]): CreateMessageResponse,\r\n    updateMessage  (Id: Int!, MessageInput: MessageInput!, files: [Upload]): BaseResponse,\r\n    deleteMessage (Id: ID!): BaseResponse,\r\n    sendMessage (Id: Int!): BaseResponse,\r\n    deleteFileDinhKemMessage (Id: Int!): BaseResponse,\r\n    downloadFileMess (Id: Int!): downloadFileMessResponse,\r\n    xemMessage (Id: Int!): BaseResponse\r\n  }\r\n`\r\n\r\nmodule.exports = typeDefs"
      ]
    },
    "sourceType": "script",
    "mtime": 1652849056533
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\index.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path');\n\nvar _require = require('@graphql-tools/load-files'),\n    loadFilesSync = _require.loadFilesSync;\n\nvar _require2 = require('@graphql-tools/merge'),\n    mergeResolvers = _require2.mergeResolvers;\n\nvar types = loadFilesSync(path.join(__dirname, '.'), {\n  extensions: ['js'],\n  recursive: true\n}); //remove empty object in array\n\nvar newArray = types.filter(function (value) {\n  return Object.keys(value).length !== 0;\n});\nmodule.exports = mergeResolvers(newArray);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwibG9hZEZpbGVzU3luYyIsIm1lcmdlUmVzb2x2ZXJzIiwidHlwZXMiLCJqb2luIiwiX19kaXJuYW1lIiwiZXh0ZW5zaW9ucyIsInJlY3Vyc2l2ZSIsIm5ld0FycmF5IiwiZmlsdGVyIiwidmFsdWUiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLGVBQTBCQSxPQUFPLENBQUMsMkJBQUQsQ0FBakM7QUFBQSxJQUFRQyxhQUFSLFlBQVFBLGFBQVI7O0FBQ0EsZ0JBQTJCRCxPQUFPLENBQUMsc0JBQUQsQ0FBbEM7QUFBQSxJQUFRRSxjQUFSLGFBQVFBLGNBQVI7O0FBRUEsSUFBTUMsS0FBSyxHQUFHRixhQUFhLENBQUNGLElBQUksQ0FBQ0ssSUFBTCxDQUFVQyxTQUFWLEVBQXFCLEdBQXJCLENBQUQsRUFBNEI7QUFBRUMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBRCxDQUFkO0FBQXNCQyxFQUFBQSxTQUFTLEVBQUU7QUFBakMsQ0FBNUIsQ0FBM0IsQyxDQUVBOztBQUNBLElBQU1DLFFBQVEsR0FBR0wsS0FBSyxDQUFDTSxNQUFOLENBQWEsVUFBQUMsS0FBSztBQUFBLFNBQUlDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixLQUFaLEVBQW1CRyxNQUFuQixLQUE4QixDQUFsQztBQUFBLENBQWxCLENBQWpCO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsY0FBYyxDQUFDTSxRQUFELENBQS9CIiwic291cmNlUm9vdCI6IkQ6XFxNb3Zlc01hc3RlclxcQ29kZVxcQWxpc2FtTW92ZS1Nb3Zlc01hdHRlclxcc2VydmVyXFxzcmNcXGdyYXBocWxcXHJlc29sdmVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5jb25zdCB7IGxvYWRGaWxlc1N5bmMgfSA9IHJlcXVpcmUoJ0BncmFwaHFsLXRvb2xzL2xvYWQtZmlsZXMnKTtcclxuY29uc3QgeyBtZXJnZVJlc29sdmVycyB9ID0gcmVxdWlyZSgnQGdyYXBocWwtdG9vbHMvbWVyZ2UnKTtcclxuXHJcbmNvbnN0IHR5cGVzID0gbG9hZEZpbGVzU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLicpLCB7IGV4dGVuc2lvbnM6IFsnanMnXSwgcmVjdXJzaXZlOiB0cnVlIH0pXHJcblxyXG4vL3JlbW92ZSBlbXB0eSBvYmplY3QgaW4gYXJyYXlcclxuY29uc3QgbmV3QXJyYXkgPSB0eXBlcy5maWx0ZXIodmFsdWUgPT4gT2JqZWN0LmtleXModmFsdWUpLmxlbmd0aCAhPT0gMCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1lcmdlUmVzb2x2ZXJzKG5ld0FycmF5KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "path",
        "require",
        "loadFilesSync",
        "mergeResolvers",
        "types",
        "join",
        "__dirname",
        "extensions",
        "recursive",
        "newArray",
        "filter",
        "value",
        "Object",
        "keys",
        "length",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,eAA0BA,OAAO,CAAC,2BAAD,CAAjC;AAAA,IAAQC,aAAR,YAAQA,aAAR;;AACA,gBAA2BD,OAAO,CAAC,sBAAD,CAAlC;AAAA,IAAQE,cAAR,aAAQA,cAAR;;AAEA,IAAMC,KAAK,GAAGF,aAAa,CAACF,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,GAArB,CAAD,EAA4B;AAAEC,EAAAA,UAAU,EAAE,CAAC,IAAD,CAAd;AAAsBC,EAAAA,SAAS,EAAE;AAAjC,CAA5B,CAA3B,C,CAEA;;AACA,IAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa,UAAAC,KAAK;AAAA,SAAIC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,KAA8B,CAAlC;AAAA,CAAlB,CAAjB;AAEAC,MAAM,CAACC,OAAP,GAAiBb,cAAc,CAACM,QAAD,CAA/B",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\",
      "sourcesContent": [
        "const path = require('path');\r\nconst { loadFilesSync } = require('@graphql-tools/load-files');\r\nconst { mergeResolvers } = require('@graphql-tools/merge');\r\n\r\nconst types = loadFilesSync(path.join(__dirname, '.'), { extensions: ['js'], recursive: true })\r\n\r\n//remove empty object in array\r\nconst newArray = types.filter(value => Object.keys(value).length !== 0);\r\n\r\nmodule.exports = mergeResolvers(newArray);"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518326
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\auth\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\auth\\\\resolveAuth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\auth\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\auth\\resolveAuth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\auth\\resolveAuth.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\auth\\resolveAuth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\auth\\",
        "sourceFileName": "resolveAuth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar bcrypt = require('bcryptjs');\n\nvar jwt = require('jsonwebtoken');\n\nvar db = require('../../../data/knex-db');\n\nvar messages = require('../../../messages/auth');\n\nvar Timestamp = require('../../scalarType/Timestamp');\n\nvar JWTSECRET = process.env.JWTSECRET;\n\nvar sendEmail = require('../../../common/sendEmail');\n\nvar resolvers = {\n  Timestamp: Timestamp,\n  //QUERY\n  Query: {\n    login: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(parent, args, context) {\n        var user, isEqual;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return db.table('User').where('User_Email', args.email).first();\n\n              case 3:\n                user = _context.sent;\n\n                if (user) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: messages.login.error\n                });\n\n              case 6:\n                _context.next = 8;\n                return bcrypt.compare(args.password, user.User_Password);\n\n              case 8:\n                isEqual = _context.sent;\n\n                if (isEqual) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: messages.login.error\n                });\n\n              case 11:\n                user.token = jwt.sign({\n                  User_ID: user.User_ID,\n                  User_Email: user.User_Email,\n                  User_Name: user.User_Name,\n                  IsAdmin: user.IsAdmin,\n                  Is_Deleted: user.Is_Deleted,\n                  Moves_Company_ID: user.Moves_Company_ID,\n                  Moves_Charity_ID: user.Moves_Charity_ID\n                }, process.env.JWTSECRET, {\n                  expiresIn: 60 * (60 * 24) // 1 day\n\n                });\n                user.refreshToken = jwt.sign({\n                  User_ID: user.User_ID,\n                  User_Email: user.User_Email,\n                  User_Name: user.User_Name,\n                  IsAdmin: user.IsAdmin,\n                  Is_Deleted: user.Is_Deleted,\n                  Moves_Company_ID: user.Moves_Company_ID,\n                  Moves_Charity_ID: user.Moves_Charity_ID\n                }, process.env.JWTSECRET, {\n                  expiresIn: 60 * (60 * 24) * 3 // 3 day\n\n                });\n                user.tokenExpiration = 24;\n                return _context.abrupt(\"return\", {\n                  user: user,\n                  messageCode: 200,\n                  message: messages.login.success\n                });\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 17]]);\n      }));\n\n      function login(_x, _x2, _x3) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }(),\n    refreshToken: function () {\n      var _refreshToken = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(parent, args, context) {\n        var verificationResponse, user;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                verificationResponse = jwt.verify(args.refreshToken, JWTSECRET);\n\n                if (verificationResponse) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  messageCode: 400,\n                  message: messages.login.error\n                });\n\n              case 4:\n                _context2.next = 6;\n                return db.table('User').where('User_Email', verificationResponse.User_Email).first();\n\n              case 6:\n                user = _context2.sent;\n\n                if (user) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  messageCode: 400,\n                  message: messages.login.error\n                });\n\n              case 9:\n                user.token = jwt.sign({\n                  User_ID: user.User_ID,\n                  User_Email: user.User_Email,\n                  User_Name: user.User_Name,\n                  IsAdmin: user.IsAdmin,\n                  Is_Deleted: user.Is_Deleted,\n                  Moves_Company_ID: user.Moves_Company_ID,\n                  Moves_Charity_ID: user.Moves_Charity_ID\n                }, process.env.JWTSECRET, {\n                  expiresIn: 60 * (60 * 24) // 1 day\n\n                });\n                user.refreshToken = jwt.sign({\n                  User_ID: user.User_ID,\n                  User_Email: user.User_Email,\n                  User_Name: user.User_Name,\n                  IsAdmin: user.IsAdmin,\n                  Is_Deleted: user.Is_Deleted,\n                  Moves_Company_ID: user.Moves_Company_ID,\n                  Moves_Charity_ID: user.Moves_Charity_ID\n                }, process.env.JWTSECRET, {\n                  expiresIn: 60 * (60 * 24) * 3 // 3 day\n\n                });\n                user.tokenExpiration = 24;\n                return _context2.abrupt(\"return\", {\n                  user: user,\n                  messageCode: 200,\n                  message: messages.login.success\n                });\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 15]]);\n      }));\n\n      function refreshToken(_x4, _x5, _x6) {\n        return _refreshToken.apply(this, arguments);\n      }\n\n      return refreshToken;\n    }()\n  },\n  Mutation: {\n    signResetPassWord: function () {\n      var _signResetPassWord = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(parent, args, context) {\n        var user, tokenReset, url;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return db.table('User').where('User_Email', args.Email).first();\n\n              case 3:\n                user = _context3.sent;\n\n                if (user) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'If the email address entered is found to match a Moves Matter account, you will be sent a password reset link via email.'\n                });\n\n              case 6:\n                tokenReset = jwt.sign({\n                  User_Email: args.Email\n                }, 'secret-reset-email', {\n                  expiresIn: 60 * 60 * 24\n                } //60 * 60 * 24 = 24h\n                );\n                _context3.next = 9;\n                return db.table('User').where({\n                  User_Email: args.Email\n                }).update({\n                  Token_Forgot_Password: tokenReset,\n                  Token_Forgot_Date: new Date()\n                });\n\n              case 9:\n                url = \"\".concat(args.url, \";id=\").concat(tokenReset);\n                _context3.next = 12;\n                return sendEmail.sendEmail(args.Email, 'Reset password', templateResetPassword(url), [], 'stream')[\"catch\"](function (err) {\n                  throw new Error(err);\n                });\n\n              case 12:\n                return _context3.abrupt(\"return\", {\n                  messageCode: 200,\n                  message: 'If the email address entered is found to match a Moves Matter account, you will be sent a password reset link via email.'\n                });\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 15]]);\n      }));\n\n      function signResetPassWord(_x7, _x8, _x9) {\n        return _signResetPassWord.apply(this, arguments);\n      }\n\n      return signResetPassWord;\n    }(),\n    checkCodeResetPassword: function () {\n      var _checkCodeResetPassword = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(parent, args, context) {\n        var user;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return db.table('User').where('Token_Forgot_Password', args.hashCode).first();\n\n              case 3:\n                user = _context4.sent;\n\n                if (user) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'This link does not exist'\n                });\n\n              case 6:\n                _context4.next = 8;\n                return jwt.verify(args.hashCode, 'secret-reset-email');\n\n              case 8:\n                return _context4.abrupt(\"return\", {\n                  messageCode: 200,\n                  message: 'Success'\n                });\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'This link has expired'\n                });\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 11]]);\n      }));\n\n      function checkCodeResetPassword(_x10, _x11, _x12) {\n        return _checkCodeResetPassword.apply(this, arguments);\n      }\n\n      return checkCodeResetPassword;\n    }(),\n    changeResetPassword: function () {\n      var _changeResetPassword = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(parent, args, context) {\n        var tokenEmail, hashedPassword;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return jwt.verify(args.hashCode, 'secret-reset-email');\n\n              case 3:\n                tokenEmail = _context5.sent;\n                _context5.next = 6;\n                return bcrypt.hash(args.Password, 12);\n\n              case 6:\n                hashedPassword = _context5.sent;\n                _context5.next = 9;\n                return db.table('User').where({\n                  User_Email: tokenEmail.User_Email\n                }).update({\n                  User_Password: hashedPassword,\n                  Token_Forgot_Password: null,\n                  Token_Forgot_Date: null\n                });\n\n              case 9:\n                return _context5.abrupt(\"return\", {\n                  messageCode: 200,\n                  message: 'Change password success'\n                });\n\n              case 12:\n                _context5.prev = 12;\n                _context5.t0 = _context5[\"catch\"](0);\n                return _context5.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'Expires Token'\n                });\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 12]]);\n      }));\n\n      function changeResetPassword(_x13, _x14, _x15) {\n        return _changeResetPassword.apply(this, arguments);\n      }\n\n      return changeResetPassword;\n    }()\n  }\n};\n\nfunction templateResetPassword() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return \"<div>\\n    <p>A request for a new password for the Moves Matter web app has been received. If this was not you, simply ignore this email. If this was you, please click on the link below to reset your password:</p>\\n    <a href=\\\"\".concat(url, \"\\\">Link</a>\\n    <p>Please note, this link will expire in 24 hours. Please log in using the same method as above.</p>\\n    </div>\");\n}\n\nmodule.exports = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolveAuth.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "jwt",
        "db",
        "messages",
        "Timestamp",
        "JWTSECRET",
        "process",
        "env",
        "sendEmail",
        "resolvers",
        "Query",
        "login",
        "parent",
        "args",
        "context",
        "table",
        "where",
        "email",
        "first",
        "user",
        "messageCode",
        "message",
        "error",
        "compare",
        "password",
        "User_Password",
        "isEqual",
        "token",
        "sign",
        "User_ID",
        "User_Email",
        "User_Name",
        "IsAdmin",
        "Is_Deleted",
        "Moves_Company_ID",
        "Moves_Charity_ID",
        "expiresIn",
        "refreshToken",
        "tokenExpiration",
        "success",
        "verificationResponse",
        "verify",
        "Mutation",
        "signResetPassWord",
        "Email",
        "tokenReset",
        "update",
        "Token_Forgot_Password",
        "Token_Forgot_Date",
        "Date",
        "url",
        "templateResetPassword",
        "err",
        "Error",
        "checkCodeResetPassword",
        "hashCode",
        "changeResetPassword",
        "tokenEmail",
        "hash",
        "Password",
        "hashedPassword",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,uBAAD,CAAlB;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAxB;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,4BAAD,CAAzB;;AACA,IAAMK,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYF,SAA9B;;AACA,IAAMG,SAAS,GAAGR,OAAO,CAAC,2BAAD,CAAzB;;AAGA,IAAMS,SAAS,GAAG;AAChBL,EAAAA,SAAS,EAATA,SADgB;AAEhB;AACAM,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK;AAAA,iGAAE,iBAAOC,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEgBZ,EAAE,CAACa,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,YAAvB,EAAqCH,IAAI,CAACI,KAA1C,EAAiDC,KAAjD,EAFhB;;AAAA;AAEGC,gBAAAA,IAFH;;AAAA,oBAGEA,IAHF;AAAA;AAAA;AAAA;;AAAA,iDAIM;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAElB,QAAQ,CAACQ,KAAT,CAAeW;AAFnB,iBAJN;;AAAA;AAAA;AAAA,uBAUmBvB,MAAM,CAACwB,OAAP,CAAeV,IAAI,CAACW,QAApB,EAA8BL,IAAI,CAACM,aAAnC,CAVnB;;AAAA;AAUGC,gBAAAA,OAVH;;AAAA,oBAWEA,OAXF;AAAA;AAAA;AAAA;;AAAA,iDAYM;AACLN,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAElB,QAAQ,CAACQ,KAAT,CAAeW;AAFnB,iBAZN;;AAAA;AAkBHH,gBAAAA,IAAI,CAACQ,KAAL,GAAa1B,GAAG,CAAC2B,IAAJ,CACX;AACEC,kBAAAA,OAAO,EAAEV,IAAI,CAACU,OADhB;AAEEC,kBAAAA,UAAU,EAAEX,IAAI,CAACW,UAFnB;AAGEC,kBAAAA,SAAS,EAAEZ,IAAI,CAACY,SAHlB;AAIEC,kBAAAA,OAAO,EAAEb,IAAI,CAACa,OAJhB;AAKEC,kBAAAA,UAAU,EAAEd,IAAI,CAACc,UALnB;AAMEC,kBAAAA,gBAAgB,EAAEf,IAAI,CAACe,gBANzB;AAOEC,kBAAAA,gBAAgB,EAAEhB,IAAI,CAACgB;AAPzB,iBADW,EAUX7B,OAAO,CAACC,GAAR,CAAYF,SAVD,EAWX;AACE+B,kBAAAA,SAAS,EAAE,MAAM,KAAK,EAAX,CADb,CAC4B;;AAD5B,iBAXW,CAAb;AAgBAjB,gBAAAA,IAAI,CAACkB,YAAL,GAAoBpC,GAAG,CAAC2B,IAAJ,CAClB;AACEC,kBAAAA,OAAO,EAAEV,IAAI,CAACU,OADhB;AAEEC,kBAAAA,UAAU,EAAEX,IAAI,CAACW,UAFnB;AAGEC,kBAAAA,SAAS,EAAEZ,IAAI,CAACY,SAHlB;AAIEC,kBAAAA,OAAO,EAAEb,IAAI,CAACa,OAJhB;AAKEC,kBAAAA,UAAU,EAAEd,IAAI,CAACc,UALnB;AAMEC,kBAAAA,gBAAgB,EAAEf,IAAI,CAACe,gBANzB;AAOEC,kBAAAA,gBAAgB,EAAEhB,IAAI,CAACgB;AAPzB,iBADkB,EAUlB7B,OAAO,CAACC,GAAR,CAAYF,SAVM,EAWlB;AACE+B,kBAAAA,SAAS,EAAE,MAAM,KAAK,EAAX,IAAiB,CAD9B,CACgC;;AADhC,iBAXkB,CAApB;AAgBAjB,gBAAAA,IAAI,CAACmB,eAAL,GAAuB,EAAvB;AAlDG,iDAoDI;AACLnB,kBAAAA,IAAI,EAAJA,IADK;AAELC,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAElB,QAAQ,CAACQ,KAAT,CAAe4B;AAHnB,iBApDJ;;AAAA;AAAA;AAAA;AAAA,iDA2DI;AACLlB,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBA3DJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADA;AAkELiB,IAAAA,YAAY;AAAA,wGAAE,kBAAOzB,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJ0B,gBAAAA,oBAFI,GAEmBvC,GAAG,CAACwC,MAAJ,CAAW5B,IAAI,CAACwB,YAAhB,EAA8BhC,SAA9B,CAFnB;;AAAA,oBAGLmC,oBAHK;AAAA;AAAA;AAAA;;AAAA,kDAID;AACLpB,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAElB,QAAQ,CAACQ,KAAT,CAAeW;AAFnB,iBAJC;;AAAA;AAAA;AAAA,uBAUSpB,EAAE,CAACa,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,YAAvB,EAAqCwB,oBAAoB,CAACV,UAA1D,EAAsEZ,KAAtE,EAVT;;AAAA;AAUJC,gBAAAA,IAVI;;AAAA,oBAWLA,IAXK;AAAA;AAAA;AAAA;;AAAA,kDAYD;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAElB,QAAQ,CAACQ,KAAT,CAAeW;AAFnB,iBAZC;;AAAA;AAiBVH,gBAAAA,IAAI,CAACQ,KAAL,GAAa1B,GAAG,CAAC2B,IAAJ,CACX;AACEC,kBAAAA,OAAO,EAAEV,IAAI,CAACU,OADhB;AAEEC,kBAAAA,UAAU,EAAEX,IAAI,CAACW,UAFnB;AAGEC,kBAAAA,SAAS,EAAEZ,IAAI,CAACY,SAHlB;AAIEC,kBAAAA,OAAO,EAAEb,IAAI,CAACa,OAJhB;AAKEC,kBAAAA,UAAU,EAAEd,IAAI,CAACc,UALnB;AAMEC,kBAAAA,gBAAgB,EAAEf,IAAI,CAACe,gBANzB;AAOEC,kBAAAA,gBAAgB,EAAEhB,IAAI,CAACgB;AAPzB,iBADW,EAUX7B,OAAO,CAACC,GAAR,CAAYF,SAVD,EAWX;AACE+B,kBAAAA,SAAS,EAAE,MAAM,KAAK,EAAX,CADb,CAC4B;;AAD5B,iBAXW,CAAb;AAgBAjB,gBAAAA,IAAI,CAACkB,YAAL,GAAoBpC,GAAG,CAAC2B,IAAJ,CAClB;AACEC,kBAAAA,OAAO,EAAEV,IAAI,CAACU,OADhB;AAEEC,kBAAAA,UAAU,EAAEX,IAAI,CAACW,UAFnB;AAGEC,kBAAAA,SAAS,EAAEZ,IAAI,CAACY,SAHlB;AAIEC,kBAAAA,OAAO,EAAEb,IAAI,CAACa,OAJhB;AAKEC,kBAAAA,UAAU,EAAEd,IAAI,CAACc,UALnB;AAMEC,kBAAAA,gBAAgB,EAAEf,IAAI,CAACe,gBANzB;AAOEC,kBAAAA,gBAAgB,EAAEhB,IAAI,CAACgB;AAPzB,iBADkB,EAUlB7B,OAAO,CAACC,GAAR,CAAYF,SAVM,EAWlB;AACE+B,kBAAAA,SAAS,EAAE,MAAM,KAAK,EAAX,IAAiB,CAD9B,CACgC;;AADhC,iBAXkB,CAApB;AAeAjB,gBAAAA,IAAI,CAACmB,eAAL,GAAuB,EAAvB;AAhDU,kDAkDH;AACLnB,kBAAAA,IAAI,EAAJA,IADK;AAELC,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAElB,QAAQ,CAACQ,KAAT,CAAe4B;AAHnB,iBAlDG;;AAAA;AAAA;AAAA;AAAA,kDAyDH;AACLlB,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBAzDG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAlEP,GAHS;AAqIhBsB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB;AAAA,6GAAE,kBAAO/B,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEIZ,EAAE,CAACa,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,YAAvB,EAAqCH,IAAI,CAAC+B,KAA1C,EAAiD1B,KAAjD,EAFJ;;AAAA;AAETC,gBAAAA,IAFS;;AAAA,oBAGVA,IAHU;AAAA;AAAA;AAAA;;AAAA,kDAIN;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAJM;;AAAA;AAUTwB,gBAAAA,UAVS,GAUI5C,GAAG,CAAC2B,IAAJ,CACjB;AACEE,kBAAAA,UAAU,EAAEjB,IAAI,CAAC+B;AADnB,iBADiB,EAIjB,oBAJiB,EAKjB;AAAER,kBAAAA,SAAS,EAAE,KAAK,EAAL,GAAU;AAAvB,iBALiB,CAKW;AALX,iBAVJ;AAAA;AAAA,uBAkBTlC,EAAE,CAACa,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB;AAAEc,kBAAAA,UAAU,EAAEjB,IAAI,CAAC+B;AAAnB,iBAAvB,EAAmDE,MAAnD,CAA0D;AAC9DC,kBAAAA,qBAAqB,EAAEF,UADuC;AAE9DG,kBAAAA,iBAAiB,EAAE,IAAIC,IAAJ;AAF2C,iBAA1D,CAlBS;;AAAA;AAuBTC,gBAAAA,GAvBS,aAuBArC,IAAI,CAACqC,GAvBL,iBAuBeL,UAvBf;AAAA;AAAA,uBAyBTrC,SAAS,CAACA,SAAV,CAAoBK,IAAI,CAAC+B,KAAzB,EAAgC,gBAAhC,EAAkDO,qBAAqB,CAACD,GAAD,CAAvE,EAA8E,EAA9E,EAAkF,QAAlF,WACG,UAAAE,GAAG,EAAI;AACZ,wBAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD,iBAHG,CAzBS;;AAAA;AAAA,kDA8BR;AACLhC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBA9BQ;;AAAA;AAAA;AAAA;AAAA,kDAoCR;AACLA,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBApCQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADT;AA2CRkC,IAAAA,sBAAsB;AAAA,kHAAE,kBAAO1C,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEHZ,EAAE,CAACa,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,uBAAvB,EAAgDH,IAAI,CAAC0C,QAArD,EAA+DrC,KAA/D,EAFG;;AAAA;AAEhBC,gBAAAA,IAFgB;;AAAA,oBAIfA,IAJe;AAAA;AAAA;AAAA;;AAAA,kDAKX;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBALW;;AAAA;AAAA;AAAA,uBAWdpB,GAAG,CAACwC,MAAJ,CAAW5B,IAAI,CAAC0C,QAAhB,EAA0B,oBAA1B,CAXc;;AAAA;AAAA,kDAab;AACLnC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAba;;AAAA;AAAA;AAAA;AAAA,kDAmBb;AACLD,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAnBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA3Cd;AAoERmC,IAAAA,mBAAmB;AAAA,+GAAE,kBAAO5C,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEMb,GAAG,CAACwC,MAAJ,CAAW5B,IAAI,CAAC0C,QAAhB,EAA0B,oBAA1B,CAFN;;AAAA;AAEbE,gBAAAA,UAFa;AAAA;AAAA,uBAGY1D,MAAM,CAAC2D,IAAP,CAAY7C,IAAI,CAAC8C,QAAjB,EAA2B,EAA3B,CAHZ;;AAAA;AAGXC,gBAAAA,cAHW;AAAA;AAAA,uBAMX1D,EAAE,CAACa,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB;AAAEc,kBAAAA,UAAU,EAAE2B,UAAU,CAAC3B;AAAzB,iBAAvB,EAA8DgB,MAA9D,CAAqE;AACzErB,kBAAAA,aAAa,EAAEmC,cAD0D;AAEzEb,kBAAAA,qBAAqB,EAAE,IAFkD;AAGzEC,kBAAAA,iBAAiB,EAAE;AAHsD,iBAArE,CANW;;AAAA;AAAA,kDAYV;AACL5B,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAZU;;AAAA;AAAA;AAAA;AAAA,kDAkBV;AACLD,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAlBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AApEX;AArIM,CAAlB;;AAoOA,SAAS8B,qBAAT,GAA2C;AAAA,MAAZD,GAAY,uEAAN,IAAM;AACzC,wPAEaA,GAFb;AAKD;;AAEDW,MAAM,CAACC,OAAP,GAAiBrD,SAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\auth\\",
      "sourcesContent": [
        "const bcrypt = require('bcryptjs');\r\nconst jwt = require('jsonwebtoken');\r\nconst db = require('../../../data/knex-db');\r\nconst messages = require('../../../messages/auth');\r\nconst Timestamp = require('../../scalarType/Timestamp');\r\nconst JWTSECRET = process.env.JWTSECRET;\r\nconst sendEmail = require('../../../common/sendEmail');\r\n\r\n\r\nconst resolvers = {\r\n  Timestamp,\r\n  //QUERY\r\n  Query: {\r\n    login: async (parent, args, context) => {\r\n      try {\r\n        const user = await db.table('User').where('User_Email', args.email).first();\r\n        if (!user) {\r\n          return {\r\n            messageCode: 404,\r\n            message: messages.login.error,\r\n          };\r\n        }\r\n        \r\n        const isEqual = await bcrypt.compare(args.password, user.User_Password);\r\n        if (!isEqual) {\r\n          return {\r\n            messageCode: 404,\r\n            message: messages.login.error,\r\n          };\r\n        }\r\n\r\n        user.token = jwt.sign(\r\n          {\r\n            User_ID: user.User_ID,\r\n            User_Email: user.User_Email,\r\n            User_Name: user.User_Name,\r\n            IsAdmin: user.IsAdmin,\r\n            Is_Deleted: user.Is_Deleted,\r\n            Moves_Company_ID: user.Moves_Company_ID,\r\n            Moves_Charity_ID: user.Moves_Charity_ID,\r\n          },\r\n          process.env.JWTSECRET,\r\n          {\r\n            expiresIn: 60 * (60 * 24) // 1 day\r\n          }\r\n        );\r\n\r\n        user.refreshToken = jwt.sign(\r\n          {\r\n            User_ID: user.User_ID,\r\n            User_Email: user.User_Email,\r\n            User_Name: user.User_Name,\r\n            IsAdmin: user.IsAdmin,\r\n            Is_Deleted: user.Is_Deleted,\r\n            Moves_Company_ID: user.Moves_Company_ID,\r\n            Moves_Charity_ID: user.Moves_Charity_ID,\r\n          },\r\n          process.env.JWTSECRET,\r\n          {\r\n            expiresIn: 60 * (60 * 24) * 3 // 3 day\r\n          }\r\n        );\r\n\r\n        user.tokenExpiration = 24;\r\n\r\n        return {\r\n          user,\r\n          messageCode: 200,\r\n          message: messages.login.success,\r\n        };\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    },\r\n    refreshToken: async (parent, args, context) => {\r\n      try {\r\n        const verificationResponse = jwt.verify(args.refreshToken, JWTSECRET);\r\n        if (!verificationResponse) {\r\n          return {\r\n            messageCode: 400,\r\n            message: messages.login.error,\r\n          };\r\n        }\r\n        // @ts-ignore\r\n        const user = await db.table('User').where('User_Email', verificationResponse.User_Email).first();\r\n        if (!user) {\r\n          return {\r\n            messageCode: 400,\r\n            message: messages.login.error,\r\n          };\r\n        }\r\n        user.token = jwt.sign(\r\n          {\r\n            User_ID: user.User_ID,\r\n            User_Email: user.User_Email,\r\n            User_Name: user.User_Name,\r\n            IsAdmin: user.IsAdmin,\r\n            Is_Deleted: user.Is_Deleted,\r\n            Moves_Company_ID: user.Moves_Company_ID,\r\n            Moves_Charity_ID: user.Moves_Charity_ID,\r\n          },\r\n          process.env.JWTSECRET,\r\n          {\r\n            expiresIn: 60 * (60 * 24) // 1 day\r\n          }\r\n        );\r\n\r\n        user.refreshToken = jwt.sign(\r\n          {\r\n            User_ID: user.User_ID,\r\n            User_Email: user.User_Email,\r\n            User_Name: user.User_Name,\r\n            IsAdmin: user.IsAdmin,\r\n            Is_Deleted: user.Is_Deleted,\r\n            Moves_Company_ID: user.Moves_Company_ID,\r\n            Moves_Charity_ID: user.Moves_Charity_ID,\r\n          },\r\n          process.env.JWTSECRET,\r\n          {\r\n            expiresIn: 60 * (60 * 24) * 3 // 3 day\r\n          }\r\n        );\r\n        user.tokenExpiration = 24;\r\n\r\n        return {\r\n          user,\r\n          messageCode: 200,\r\n          message: messages.login.success,\r\n        };\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    }\r\n  },\r\n  Mutation: {\r\n    signResetPassWord: async (parent, args, context) => {\r\n      try {\r\n        const user = await db.table('User').where('User_Email', args.Email).first();\r\n        if (!user) {\r\n          return {\r\n            messageCode: 404,\r\n            message: 'If the email address entered is found to match a Moves Matter account, you will be sent a password reset link via email.',\r\n          };\r\n        }\r\n\r\n        const tokenReset = jwt.sign(\r\n          {\r\n            User_Email: args.Email\r\n          },\r\n          'secret-reset-email',\r\n          { expiresIn: 60 * 60 * 24 } //60 * 60 * 24 = 24h\r\n        );\r\n\r\n        await db.table('User').where({ User_Email: args.Email }).update({\r\n          Token_Forgot_Password: tokenReset,\r\n          Token_Forgot_Date: new Date()\r\n        });\r\n\r\n        const url = `${args.url};id=${tokenReset}`;\r\n\r\n        await sendEmail.sendEmail(args.Email, 'Reset password', templateResetPassword(url), [], 'stream')\r\n          .catch(err => {\r\n            throw new Error(err);\r\n          })\r\n\r\n        return {\r\n          messageCode: 200,\r\n          message: 'If the email address entered is found to match a Moves Matter account, you will be sent a password reset link via email.',\r\n        };\r\n      }\r\n      catch (err) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    },\r\n    checkCodeResetPassword: async (parent, args, context) => {\r\n      try {\r\n        let user = await db.table('User').where('Token_Forgot_Password', args.hashCode).first();\r\n\r\n        if (!user) {\r\n          return {\r\n            messageCode: 404,\r\n            message: 'This link does not exist',\r\n          };\r\n        }\r\n\r\n        await jwt.verify(args.hashCode, 'secret-reset-email');\r\n        \r\n        return {\r\n          messageCode: 200,\r\n          message: 'Success',\r\n        };\r\n      }\r\n      catch (err) {\r\n        return {\r\n          messageCode: 500,\r\n          message: 'This link has expired',\r\n        };\r\n      }\r\n    },\r\n    changeResetPassword: async (parent, args, context) => {\r\n      try {\r\n        var tokenEmail = await jwt.verify(args.hashCode, 'secret-reset-email')\r\n        const hashedPassword = await bcrypt.hash(args.Password, 12);\r\n\r\n        // @ts-ignore\r\n        await db.table('User').where({ User_Email: tokenEmail.User_Email }).update({\r\n          User_Password: hashedPassword,\r\n          Token_Forgot_Password: null,\r\n          Token_Forgot_Date: null\r\n        });\r\n\r\n        return {\r\n          messageCode: 200,\r\n          message: 'Change password success',\r\n        };\r\n      }\r\n      catch (err) {\r\n        return {\r\n          messageCode: 500,\r\n          message: 'Expires Token',\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction templateResetPassword(url = null) {\r\n  return `<div>\r\n    <p>A request for a new password for the Moves Matter web app has been received. If this was not you, simply ignore this email. If this was you, please click on the link below to reset your password:</p>\r\n    <a href=\"${url}\">Link</a>\r\n    <p>Please note, this link will expire in 24 hours. Please log in using the same method as above.</p>\r\n    </div>`;\r\n}\r\n\r\nmodule.exports = resolvers;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1652955566542
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\data\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\data\\\\knex-db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\data\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\data\\knex-db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\data\\knex-db.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\data\\knex-db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\data\\",
        "sourceFileName": "knex-db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar knext = require('knex');\n\nvar knextfile = require('../knexfile'); // @ts-ignore\n\n\nvar db = knext(knextfile.development);\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXgtZGIuanMiXSwibmFtZXMiOlsia25leHQiLCJyZXF1aXJlIiwia25leHRmaWxlIiwiZGIiLCJkZXZlbG9wbWVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFyQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQXpCLEMsQ0FFQTs7O0FBQ0EsSUFBTUUsRUFBRSxHQUFHSCxLQUFLLENBQUNFLFNBQVMsQ0FBQ0UsV0FBWCxDQUFoQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILEVBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxNb3Zlc01hc3RlclxcQ29kZVxcQWxpc2FtTW92ZS1Nb3Zlc01hdHRlclxcc2VydmVyXFxzcmNcXGRhdGFcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGtuZXh0ID0gcmVxdWlyZSgna25leCcpO1xyXG5jb25zdCBrbmV4dGZpbGUgPSByZXF1aXJlKCcuLi9rbmV4ZmlsZScpO1xyXG5cclxuLy8gQHRzLWlnbm9yZVxyXG5jb25zdCBkYiA9IGtuZXh0KGtuZXh0ZmlsZS5kZXZlbG9wbWVudCk7XHJcbm1vZHVsZS5leHBvcnRzID0gZGI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "knex-db.js"
      ],
      "names": [
        "knext",
        "require",
        "knextfile",
        "db",
        "development",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,MAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB,C,CAEA;;;AACA,IAAME,EAAE,GAAGH,KAAK,CAACE,SAAS,CAACE,WAAX,CAAhB;AACAC,MAAM,CAACC,OAAP,GAAiBH,EAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\data\\",
      "sourcesContent": [
        "const knext = require('knex');\r\nconst knextfile = require('../knexfile');\r\n\r\n// @ts-ignore\r\nconst db = knext(knextfile.development);\r\nmodule.exports = db;"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518285
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\knexfile.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\knexfile.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\knexfile.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\knexfile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\",
        "sourceFileName": "knexfile.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// Update with your config settings.\nmodule.exports = {\n  development: {\n    client: 'pg',\n    connection: {\n      host: 'localhost',\n      database: 'moves_matter',\n      user: 'postgres',\n      password: 'postgres',\n      port: 5432\n    }\n  } // production: {\n  //   client: 'postgresql',\n  //   connection: {\n  //     database: 'my_db',\n  //     user:     'username',\n  //     password: 'password'\n  //   },\n  //   pool: {\n  //     min: 2,\n  //     max: 10\n  //   },\n  //   migrations: {\n  //     tableName: 'knex_migrations'\n  //   }\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhmaWxlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJkZXZlbG9wbWVudCIsImNsaWVudCIsImNvbm5lY3Rpb24iLCJob3N0IiwiZGF0YWJhc2UiLCJ1c2VyIiwicGFzc3dvcmQiLCJwb3J0Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmQyxFQUFBQSxXQUFXLEVBQUU7QUFDWEMsSUFBQUEsTUFBTSxFQUFFLElBREc7QUFFWEMsSUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLE1BQUFBLElBQUksRUFBRSxXQURJO0FBRVZDLE1BQUFBLFFBQVEsRUFBRSxjQUZBO0FBR1ZDLE1BQUFBLElBQUksRUFBRSxVQUhJO0FBSVZDLE1BQUFBLFFBQVEsRUFBRSxVQUpBO0FBS1ZDLE1BQUFBLElBQUksRUFBRTtBQUxJO0FBRkQsR0FERSxDQVlmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUExQmUsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVXBkYXRlIHdpdGggeW91ciBjb25maWcgc2V0dGluZ3MuXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZXZlbG9wbWVudDoge1xuICAgIGNsaWVudDogJ3BnJyxcbiAgICBjb25uZWN0aW9uOiB7XG4gICAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgICAgIGRhdGFiYXNlOiAnbW92ZXNfbWF0dGVyJyxcbiAgICAgIHVzZXI6ICdwb3N0Z3JlcycsXG4gICAgICBwYXNzd29yZDogJ3Bvc3RncmVzJyxcbiAgICAgIHBvcnQ6IDU0MzJcbiAgICB9LFxuICB9XG5cbiAgLy8gcHJvZHVjdGlvbjoge1xuICAvLyAgIGNsaWVudDogJ3Bvc3RncmVzcWwnLFxuICAvLyAgIGNvbm5lY3Rpb246IHtcbiAgLy8gICAgIGRhdGFiYXNlOiAnbXlfZGInLFxuICAvLyAgICAgdXNlcjogICAgICd1c2VybmFtZScsXG4gIC8vICAgICBwYXNzd29yZDogJ3Bhc3N3b3JkJ1xuICAvLyAgIH0sXG4gIC8vICAgcG9vbDoge1xuICAvLyAgICAgbWluOiAyLFxuICAvLyAgICAgbWF4OiAxMFxuICAvLyAgIH0sXG4gIC8vICAgbWlncmF0aW9uczoge1xuICAvLyAgICAgdGFibGVOYW1lOiAna25leF9taWdyYXRpb25zJ1xuICAvLyAgIH1cbiAgLy8gfVxuXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "knexfile.js"
      ],
      "names": [
        "module",
        "exports",
        "development",
        "client",
        "connection",
        "host",
        "database",
        "user",
        "password",
        "port"
      ],
      "mappings": ";;AAAA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,IADG;AAEXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,WADI;AAEVC,MAAAA,QAAQ,EAAE,cAFA;AAGVC,MAAAA,IAAI,EAAE,UAHI;AAIVC,MAAAA,QAAQ,EAAE,UAJA;AAKVC,MAAAA,IAAI,EAAE;AALI;AAFD,GADE,CAYf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1Be,CAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\",
      "sourcesContent": [
        "// Update with your config settings.\n\nmodule.exports = {\n  development: {\n    client: 'pg',\n    connection: {\n      host: 'localhost',\n      database: 'moves_matter',\n      user: 'postgres',\n      password: 'postgres',\n      port: 5432\n    },\n  }\n\n  // production: {\n  //   client: 'postgresql',\n  //   connection: {\n  //     database: 'my_db',\n  //     user:     'username',\n  //     password: 'password'\n  //   },\n  //   pool: {\n  //     min: 2,\n  //     max: 10\n  //   },\n  //   migrations: {\n  //     tableName: 'knex_migrations'\n  //   }\n  // }\n\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1652762669075
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\messages\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\messages\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\auth.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\",
        "sourceFileName": "auth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  login: {\n    success: 'login success',\n    error: 'username or password is incorrect'\n  },\n  success: 'success',\n  error: 'error',\n  exception: 'an error occurred, please try again later',\n  exists: 'exists',\n  does_not_exist: 'does not exists',\n  using: 'account being used by another user'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImxvZ2luIiwic3VjY2VzcyIsImVycm9yIiwiZXhjZXB0aW9uIiwiZXhpc3RzIiwiZG9lc19ub3RfZXhpc3QiLCJ1c2luZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLEtBQUssRUFBRTtBQUNIQyxJQUFBQSxPQUFPLEVBQUUsZUFETjtBQUVIQyxJQUFBQSxLQUFLLEVBQUU7QUFGSixHQURNO0FBS2JELEVBQUFBLE9BQU8sRUFBRSxTQUxJO0FBTWJDLEVBQUFBLEtBQUssRUFBRSxPQU5NO0FBT2JDLEVBQUFBLFNBQVMsRUFBRSwyQ0FQRTtBQVFiQyxFQUFBQSxNQUFNLEVBQUUsUUFSSztBQVNiQyxFQUFBQSxjQUFjLEVBQUUsaUJBVEg7QUFVYkMsRUFBQUEsS0FBSyxFQUFFO0FBVk0sQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE1vdmVzTWFzdGVyXFxDb2RlXFxBbGlzYW1Nb3ZlLU1vdmVzTWF0dGVyXFxzZXJ2ZXJcXHNyY1xcbWVzc2FnZXNcXCIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgbG9naW46IHtcclxuICAgICAgICBzdWNjZXNzOiAnbG9naW4gc3VjY2VzcycsXHJcbiAgICAgICAgZXJyb3I6ICd1c2VybmFtZSBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3QnLFxyXG4gICAgfSxcclxuICAgIHN1Y2Nlc3M6ICdzdWNjZXNzJyxcclxuICAgIGVycm9yOiAnZXJyb3InLFxyXG4gICAgZXhjZXB0aW9uOiAnYW4gZXJyb3Igb2NjdXJyZWQsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXInLFxyXG4gICAgZXhpc3RzOiAnZXhpc3RzJyxcclxuICAgIGRvZXNfbm90X2V4aXN0OiAnZG9lcyBub3QgZXhpc3RzJyxcclxuICAgIHVzaW5nOiAnYWNjb3VudCBiZWluZyB1c2VkIGJ5IGFub3RoZXIgdXNlcicsXHJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "module",
        "exports",
        "login",
        "success",
        "error",
        "exception",
        "exists",
        "does_not_exist",
        "using"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE,eADN;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GADM;AAKbD,EAAAA,OAAO,EAAE,SALI;AAMbC,EAAAA,KAAK,EAAE,OANM;AAObC,EAAAA,SAAS,EAAE,2CAPE;AAQbC,EAAAA,MAAM,EAAE,QARK;AASbC,EAAAA,cAAc,EAAE,iBATH;AAUbC,EAAAA,KAAK,EAAE;AAVM,CAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\",
      "sourcesContent": [
        "module.exports = {\r\n    login: {\r\n        success: 'login success',\r\n        error: 'username or password is incorrect',\r\n    },\r\n    success: 'success',\r\n    error: 'error',\r\n    exception: 'an error occurred, please try again later',\r\n    exists: 'exists',\r\n    does_not_exist: 'does not exists',\r\n    using: 'account being used by another user',\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1652849056516
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\scalarType\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\scalarType\\\\Timestamp.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\scalarType\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\scalarType\\Timestamp.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\scalarType\\Timestamp.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\scalarType\\Timestamp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\scalarType\\",
        "sourceFileName": "Timestamp.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('graphql'),\n    GraphQLScalarType = _require.GraphQLScalarType,\n    Kind = _require.Kind;\n\nvar Timestamp = new GraphQLScalarType({\n  name: 'Timestamp',\n  description: 'Date custom scalar type',\n  serialize: function serialize(date) {\n    return date instanceof Date ? date.getTime() : null;\n  },\n  parseValue: function parseValue(date) {\n    try {\n      return new Date(date);\n    } catch (error) {\n      return null;\n    }\n  },\n  parseLiteral: function parseLiteral(ast) {\n    if (ast.kind === Kind.INT) {\n      return new Date(parseInt(ast.value, 10));\n    } else if (ast.kind === Kind.STRING) {\n      return this.parseValue(ast.value);\n    } else {\n      return null;\n    }\n  }\n});\nmodule.exports = Timestamp;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpbWVzdGFtcC5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiR3JhcGhRTFNjYWxhclR5cGUiLCJLaW5kIiwiVGltZXN0YW1wIiwibmFtZSIsImRlc2NyaXB0aW9uIiwic2VyaWFsaXplIiwiZGF0ZSIsIkRhdGUiLCJnZXRUaW1lIiwicGFyc2VWYWx1ZSIsImVycm9yIiwicGFyc2VMaXRlcmFsIiwiYXN0Iiwia2luZCIsIklOVCIsInBhcnNlSW50IiwidmFsdWUiLCJTVFJJTkciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLGVBQW9DQSxPQUFPLENBQUMsU0FBRCxDQUEzQztBQUFBLElBQVFDLGlCQUFSLFlBQVFBLGlCQUFSO0FBQUEsSUFBMkJDLElBQTNCLFlBQTJCQSxJQUEzQjs7QUFFQSxJQUFNQyxTQUFTLEdBQUcsSUFBSUYsaUJBQUosQ0FBc0I7QUFDdENHLEVBQUFBLElBQUksRUFBRSxXQURnQztBQUV0Q0MsRUFBQUEsV0FBVyxFQUFFLHlCQUZ5QjtBQUd0Q0MsRUFBQUEsU0FIc0MscUJBRzVCQyxJQUg0QixFQUd0QjtBQUNkLFdBQVFBLElBQUksWUFBWUMsSUFBakIsR0FBeUJELElBQUksQ0FBQ0UsT0FBTCxFQUF6QixHQUEwQyxJQUFqRDtBQUNELEdBTHFDO0FBTXRDQyxFQUFBQSxVQU5zQyxzQkFNM0JILElBTjJCLEVBTXJCO0FBQ2YsUUFBYztBQUFFLGFBQU8sSUFBSUMsSUFBSixDQUFTRCxJQUFULENBQVA7QUFBd0IsS0FBeEMsQ0FDQSxPQUFPSSxLQUFQLEVBQWM7QUFBRSxhQUFPLElBQVA7QUFBYztBQUMvQixHQVRxQztBQVV0Q0MsRUFBQUEsWUFWc0Msd0JBVXpCQyxHQVZ5QixFQVVwQjtBQUNoQixRQUFJQSxHQUFHLENBQUNDLElBQUosS0FBYVosSUFBSSxDQUFDYSxHQUF0QixFQUEyQjtBQUN6QixhQUFPLElBQUlQLElBQUosQ0FBU1EsUUFBUSxDQUFDSCxHQUFHLENBQUNJLEtBQUwsRUFBWSxFQUFaLENBQWpCLENBQVA7QUFDRCxLQUZELE1BR0ssSUFBSUosR0FBRyxDQUFDQyxJQUFKLEtBQWFaLElBQUksQ0FBQ2dCLE1BQXRCLEVBQThCO0FBQ2pDLGFBQU8sS0FBS1IsVUFBTCxDQUFnQkcsR0FBRyxDQUFDSSxLQUFwQixDQUFQO0FBQ0QsS0FGSSxNQUdBO0FBQ0gsYUFBTyxJQUFQO0FBQ0Q7QUFDRjtBQXBCcUMsQ0FBdEIsQ0FBbEI7QUF1QkFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpCLFNBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxNb3Zlc01hc3RlclxcQ29kZVxcQWxpc2FtTW92ZS1Nb3Zlc01hdHRlclxcc2VydmVyXFxzcmNcXGdyYXBocWxcXHNjYWxhclR5cGVcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgR3JhcGhRTFNjYWxhclR5cGUsIEtpbmQgfSA9IHJlcXVpcmUoJ2dyYXBocWwnKTtcclxuXHJcbmNvbnN0IFRpbWVzdGFtcCA9IG5ldyBHcmFwaFFMU2NhbGFyVHlwZSh7XHJcbiAgbmFtZTogJ1RpbWVzdGFtcCcsXHJcbiAgZGVzY3JpcHRpb246ICdEYXRlIGN1c3RvbSBzY2FsYXIgdHlwZScsXHJcbiAgc2VyaWFsaXplKGRhdGUpIHtcclxuICAgIHJldHVybiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpID8gZGF0ZS5nZXRUaW1lKCkgOiBudWxsXHJcbiAgfSxcclxuICBwYXJzZVZhbHVlKGRhdGUpIHtcclxuICAgIHRyeSAgICAgICAgICAgeyByZXR1cm4gbmV3IERhdGUoZGF0ZSk7IH1cclxuICAgIGNhdGNoIChlcnJvcikgeyByZXR1cm4gbnVsbDsgfVxyXG4gIH0sXHJcbiAgcGFyc2VMaXRlcmFsKGFzdCkge1xyXG4gICAgaWYgKGFzdC5raW5kID09PSBLaW5kLklOVCkge1xyXG4gICAgICByZXR1cm4gbmV3IERhdGUocGFyc2VJbnQoYXN0LnZhbHVlLCAxMCkpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoYXN0LmtpbmQgPT09IEtpbmQuU1RSSU5HKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnBhcnNlVmFsdWUoYXN0LnZhbHVlKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICB9LFxyXG59KVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBUaW1lc3RhbXA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Timestamp.js"
      ],
      "names": [
        "require",
        "GraphQLScalarType",
        "Kind",
        "Timestamp",
        "name",
        "description",
        "serialize",
        "date",
        "Date",
        "getTime",
        "parseValue",
        "error",
        "parseLiteral",
        "ast",
        "kind",
        "INT",
        "parseInt",
        "value",
        "STRING",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,eAAoCA,OAAO,CAAC,SAAD,CAA3C;AAAA,IAAQC,iBAAR,YAAQA,iBAAR;AAAA,IAA2BC,IAA3B,YAA2BA,IAA3B;;AAEA,IAAMC,SAAS,GAAG,IAAIF,iBAAJ,CAAsB;AACtCG,EAAAA,IAAI,EAAE,WADgC;AAEtCC,EAAAA,WAAW,EAAE,yBAFyB;AAGtCC,EAAAA,SAHsC,qBAG5BC,IAH4B,EAGtB;AACd,WAAQA,IAAI,YAAYC,IAAjB,GAAyBD,IAAI,CAACE,OAAL,EAAzB,GAA0C,IAAjD;AACD,GALqC;AAMtCC,EAAAA,UANsC,sBAM3BH,IAN2B,EAMrB;AACf,QAAc;AAAE,aAAO,IAAIC,IAAJ,CAASD,IAAT,CAAP;AAAwB,KAAxC,CACA,OAAOI,KAAP,EAAc;AAAE,aAAO,IAAP;AAAc;AAC/B,GATqC;AAUtCC,EAAAA,YAVsC,wBAUzBC,GAVyB,EAUpB;AAChB,QAAIA,GAAG,CAACC,IAAJ,KAAaZ,IAAI,CAACa,GAAtB,EAA2B;AACzB,aAAO,IAAIP,IAAJ,CAASQ,QAAQ,CAACH,GAAG,CAACI,KAAL,EAAY,EAAZ,CAAjB,CAAP;AACD,KAFD,MAGK,IAAIJ,GAAG,CAACC,IAAJ,KAAaZ,IAAI,CAACgB,MAAtB,EAA8B;AACjC,aAAO,KAAKR,UAAL,CAAgBG,GAAG,CAACI,KAApB,CAAP;AACD,KAFI,MAGA;AACH,aAAO,IAAP;AACD;AACF;AApBqC,CAAtB,CAAlB;AAuBAE,MAAM,CAACC,OAAP,GAAiBjB,SAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\scalarType\\",
      "sourcesContent": [
        "const { GraphQLScalarType, Kind } = require('graphql');\r\n\r\nconst Timestamp = new GraphQLScalarType({\r\n  name: 'Timestamp',\r\n  description: 'Date custom scalar type',\r\n  serialize(date) {\r\n    return (date instanceof Date) ? date.getTime() : null\r\n  },\r\n  parseValue(date) {\r\n    try           { return new Date(date); }\r\n    catch (error) { return null; }\r\n  },\r\n  parseLiteral(ast) {\r\n    if (ast.kind === Kind.INT) {\r\n      return new Date(parseInt(ast.value, 10));\r\n    }\r\n    else if (ast.kind === Kind.STRING) {\r\n      return this.parseValue(ast.value);\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  },\r\n})\r\n\r\nmodule.exports = Timestamp;"
      ]
    },
    "sourceType": "script",
    "mtime": 1652780952038
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\common\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\common\\\\sendEmail.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\sendEmail.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\sendEmail.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\sendEmail.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\",
        "sourceFileName": "sendEmail.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar nodemailer = require(\"nodemailer\");\n\nvar db = require('../data/knex-db');\n\nvar fs = require('fs');\n\nvar path = require('path'); // async..await is not allowed in global scope, must use a wrapper\n\n\nfunction sendEmail(_x, _x2, _x3, _x4, _x5) {\n  return _sendEmail.apply(this, arguments);\n}\n\nfunction _sendEmail() {\n  _sendEmail = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(sendTo, subject, body, _attachments, type) {\n    var host, port, secure, account, pass, receipt_default, email_receipt_account, transporter, attachments, info, _info;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return db.table('System_Parameter').where('Key', 'EMAIL_HOST').select('Value').first();\n\n          case 2:\n            host = _context.sent;\n            _context.next = 5;\n            return db.table('System_Parameter').where('Key', 'EMAIL_PORT').select('Value').first();\n\n          case 5:\n            port = _context.sent;\n            _context.next = 8;\n            return db.table('System_Parameter').where('Key', 'EMAIL_SECURE').select('BoolValue').first();\n\n          case 8:\n            secure = _context.sent;\n            _context.next = 11;\n            return db.table('System_Parameter').where('Key', 'EMAIL_ACCOUNT').select('Value').first();\n\n          case 11:\n            account = _context.sent;\n            _context.next = 14;\n            return db.table('System_Parameter').where('Key', 'EMAIL_PASS').select('Value').first();\n\n          case 14:\n            pass = _context.sent;\n            _context.next = 17;\n            return db.table('System_Parameter').where('Key', 'EMAIL_RECEIPT_DEFAUT').select('BoolValue').first();\n\n          case 17:\n            receipt_default = _context.sent;\n            _context.next = 20;\n            return db.table('System_Parameter').where('Key', 'EMAIL_RECEIPT_ACCOUNT').select('Value').first();\n\n          case 20:\n            email_receipt_account = _context.sent;\n\n            if (!(!host || !port || !secure || !account || !pass || !receipt_default || !email_receipt_account)) {\n              _context.next = 23;\n              break;\n            }\n\n            throw new Error(\"setting email not found\");\n\n          case 23:\n            // create reusable transporter object using the default SMTP transport\n            transporter = nodemailer.createTransport({\n              host: host.Value,\n              port: Number.parseInt(port.Value),\n              secure: secure.BoolValue,\n              // true for 465, false for other ports\n              auth: {\n                user: account.Value,\n                pass: pass.Value\n              },\n              tls: {\n                // do not fail on invalid certs\n                rejectUnauthorized: false\n              }\n            });\n            attachments = _attachments.map(function (item) {\n              return Object.assign({}, item);\n            });\n            /*\r\n              type = stream/base64\r\n            */\n\n            if (type == 'stream' && attachments.length > 0) {\n              attachments.forEach(function (item) {\n                item.content = fs.createReadStream(path.join(__dirname, \"../upload/\".concat(item.content)));\n              });\n            } //Nếu sử dụng email nhận mặc định (để test)\n\n\n            if (!receipt_default.BoolValue) {\n              _context.next = 32;\n              break;\n            }\n\n            _context.next = 29;\n            return transporter.sendMail({\n              from: account.Value,\n              // sender address\n              to: email_receipt_account.Value,\n              subject: subject,\n              // Subject line\n              text: '<p>Send to: ' + sendTo + '</p>' + '</br>' + body,\n              // plain text body\n              html: '<p>Send to: ' + sendTo + '</p>' + '</br>' + body,\n              // html body\n              attachments: attachments\n            });\n\n          case 29:\n            info = _context.sent;\n            _context.next = 35;\n            break;\n\n          case 32:\n            _context.next = 34;\n            return transporter.sendMail({\n              from: account.Value,\n              // sender address\n              to: sendTo,\n              //\"abc@gmail.com, javIdol@gmail.com\"\n              subject: subject,\n              // Subject line\n              text: body,\n              // plain text body\n              html: body,\n              // html body\n              attachments: attachments\n            });\n\n          case 34:\n            _info = _context.sent;\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sendEmail.apply(this, arguments);\n}\n\nmodule.exports.sendEmail = sendEmail;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sendEmail.js"
      ],
      "names": [
        "nodemailer",
        "require",
        "db",
        "fs",
        "path",
        "sendEmail",
        "sendTo",
        "subject",
        "body",
        "_attachments",
        "type",
        "table",
        "where",
        "select",
        "first",
        "host",
        "port",
        "secure",
        "account",
        "pass",
        "receipt_default",
        "email_receipt_account",
        "Error",
        "transporter",
        "createTransport",
        "Value",
        "Number",
        "parseInt",
        "BoolValue",
        "auth",
        "user",
        "tls",
        "rejectUnauthorized",
        "attachments",
        "map",
        "item",
        "Object",
        "assign",
        "length",
        "forEach",
        "content",
        "createReadStream",
        "join",
        "__dirname",
        "sendMail",
        "from",
        "to",
        "text",
        "html",
        "info",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;SACeI,S;;;;;6FAAf,iBAAyBC,MAAzB,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,YAAhD,EAA8DC,IAA9D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBR,EAAE,CAACS,KAAH,CAAS,kBAAT,EACdC,KADc,CACR,KADQ,EACD,YADC,EACaC,MADb,CACoB,OADpB,EAC6BC,KAD7B,EAFnB;;AAAA;AAEMC,YAAAA,IAFN;AAAA;AAAA,mBAImBb,EAAE,CAACS,KAAH,CAAS,kBAAT,EACdC,KADc,CACR,KADQ,EACD,YADC,EACaC,MADb,CACoB,OADpB,EAC6BC,KAD7B,EAJnB;;AAAA;AAIME,YAAAA,IAJN;AAAA;AAAA,mBAMqBd,EAAE,CAACS,KAAH,CAAS,kBAAT,EAChBC,KADgB,CACV,KADU,EACH,cADG,EACaC,MADb,CACoB,WADpB,EACiCC,KADjC,EANrB;;AAAA;AAMMG,YAAAA,MANN;AAAA;AAAA,mBAQsBf,EAAE,CAACS,KAAH,CAAS,kBAAT,EACjBC,KADiB,CACX,KADW,EACJ,eADI,EACaC,MADb,CACoB,OADpB,EAC6BC,KAD7B,EARtB;;AAAA;AAQMI,YAAAA,OARN;AAAA;AAAA,mBAUmBhB,EAAE,CAACS,KAAH,CAAS,kBAAT,EACdC,KADc,CACR,KADQ,EACD,YADC,EACaC,MADb,CACoB,OADpB,EAC6BC,KAD7B,EAVnB;;AAAA;AAUMK,YAAAA,IAVN;AAAA;AAAA,mBAY8BjB,EAAE,CAACS,KAAH,CAAS,kBAAT,EACzBC,KADyB,CACnB,KADmB,EACZ,sBADY,EACYC,MADZ,CACmB,WADnB,EACgCC,KADhC,EAZ9B;;AAAA;AAYMM,YAAAA,eAZN;AAAA;AAAA,mBAcoClB,EAAE,CAACS,KAAH,CAAS,kBAAT,EAC/BC,KAD+B,CACzB,KADyB,EAClB,uBADkB,EACOC,MADP,CACc,OADd,EACuBC,KADvB,EAdpC;;AAAA;AAcMO,YAAAA,qBAdN;;AAAA,kBAiBM,CAACN,IAAD,IAAS,CAACC,IAAV,IAAkB,CAACC,MAAnB,IAA6B,CAACC,OAA9B,IAAyC,CAACC,IAA1C,IAAkD,CAACC,eAAnD,IAAsE,CAACC,qBAjB7E;AAAA;AAAA;AAAA;;AAAA,kBAkBU,IAAIC,KAAJ,CAAU,yBAAV,CAlBV;;AAAA;AAoBE;AACIC,YAAAA,WArBN,GAqBoBvB,UAAU,CAACwB,eAAX,CAA2B;AAC3CT,cAAAA,IAAI,EAAEA,IAAI,CAACU,KADgC;AAE3CT,cAAAA,IAAI,EAAEU,MAAM,CAACC,QAAP,CAAgBX,IAAI,CAACS,KAArB,CAFqC;AAG3CR,cAAAA,MAAM,EAAEA,MAAM,CAACW,SAH4B;AAGjB;AAC1BC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAEZ,OAAO,CAACO,KADV;AAEJN,gBAAAA,IAAI,EAAEA,IAAI,CAACM;AAFP,eAJqC;AAQ3CM,cAAAA,GAAG,EAAE;AACH;AACAC,gBAAAA,kBAAkB,EAAE;AAFjB;AARsC,aAA3B,CArBpB;AAmCMC,YAAAA,WAnCN,GAmCoBxB,YAAY,CAACyB,GAAb,CAAiB,UAACC,IAAD,EAAU;AAC3C,qBAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,CAAP;AACD,aAFiB,CAnCpB;AAuCE;AACF;AACA;;AACE,gBAAIzB,IAAI,IAAI,QAAR,IAAoBuB,WAAW,CAACK,MAAZ,GAAqB,CAA7C,EAAgD;AAC9CL,cAAAA,WAAW,CAACM,OAAZ,CAAoB,UAAAJ,IAAI,EAAI;AAC1BA,gBAAAA,IAAI,CAACK,OAAL,GAAerC,EAAE,CAACsC,gBAAH,CAAoBrC,IAAI,CAACsC,IAAL,CAAUC,SAAV,sBAAkCR,IAAI,CAACK,OAAvC,EAApB,CAAf;AACD,eAFD;AAGD,aA9CH,CAgDE;;;AAhDF,iBAiDMpB,eAAe,CAACQ,SAjDtB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkDqBL,WAAW,CAACqB,QAAZ,CAAqB;AACpCC,cAAAA,IAAI,EAAE3B,OAAO,CAACO,KADsB;AACf;AACrBqB,cAAAA,EAAE,EAAEzB,qBAAqB,CAACI,KAFU;AAGpClB,cAAAA,OAAO,EAAEA,OAH2B;AAGlB;AAClBwC,cAAAA,IAAI,EAAE,iBAAiBzC,MAAjB,GAA0B,MAA1B,GAAmC,OAAnC,GAA6CE,IAJf;AAIqB;AACzDwC,cAAAA,IAAI,EAAE,iBAAiB1C,MAAjB,GAA0B,MAA1B,GAAmC,OAAnC,GAA6CE,IALf;AAKqB;AACzDyB,cAAAA,WAAW,EAAEA;AANuB,aAArB,CAlDrB;;AAAA;AAkDQgB,YAAAA,IAlDR;AAAA;AAAA;;AAAA;AAAA;AAAA,mBA6DqB1B,WAAW,CAACqB,QAAZ,CAAqB;AACpCC,cAAAA,IAAI,EAAE3B,OAAO,CAACO,KADsB;AACf;AACrBqB,cAAAA,EAAE,EAAExC,MAFgC;AAExB;AACZC,cAAAA,OAAO,EAAEA,OAH2B;AAGlB;AAClBwC,cAAAA,IAAI,EAAEvC,IAJ8B;AAIxB;AACZwC,cAAAA,IAAI,EAAExC,IAL8B;AAKxB;AACZyB,cAAAA,WAAW,EAAEA;AANuB,aAArB,CA7DrB;;AAAA;AA6DQgB,YAAAA,KA7DR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAwEAC,MAAM,CAACC,OAAP,CAAe9C,SAAf,GAA2BA,SAA3B",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\",
      "sourcesContent": [
        "const nodemailer = require(\"nodemailer\");\r\nconst db = require('../data/knex-db');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// async..await is not allowed in global scope, must use a wrapper\r\nasync function sendEmail(sendTo, subject, body, _attachments, type) {\r\n  // get setting\r\n  let host = await db.table('System_Parameter')\r\n    .where('Key', 'EMAIL_HOST').select('Value').first();\r\n  let port = await db.table('System_Parameter')\r\n    .where('Key', 'EMAIL_PORT').select('Value').first();\r\n  let secure = await db.table('System_Parameter')\r\n    .where('Key', 'EMAIL_SECURE').select('BoolValue').first();\r\n  let account = await db.table('System_Parameter')\r\n    .where('Key', 'EMAIL_ACCOUNT').select('Value').first();\r\n  let pass = await db.table('System_Parameter')\r\n    .where('Key', 'EMAIL_PASS').select('Value').first();\r\n  let receipt_default = await db.table('System_Parameter')\r\n    .where('Key', 'EMAIL_RECEIPT_DEFAUT').select('BoolValue').first();\r\n  let email_receipt_account = await db.table('System_Parameter')\r\n    .where('Key', 'EMAIL_RECEIPT_ACCOUNT').select('Value').first();\r\n\r\n  if (!host || !port || !secure || !account || !pass || !receipt_default || !email_receipt_account)\r\n    throw new Error(\"setting email not found\");\r\n\r\n  // create reusable transporter object using the default SMTP transport\r\n  let transporter = nodemailer.createTransport({\r\n    host: host.Value,\r\n    port: Number.parseInt(port.Value),\r\n    secure: secure.BoolValue, // true for 465, false for other ports\r\n    auth: {\r\n      user: account.Value,\r\n      pass: pass.Value,\r\n    },\r\n    tls: {\r\n      // do not fail on invalid certs\r\n      rejectUnauthorized: false,\r\n    },\r\n  });\r\n\r\n  let attachments = _attachments.map((item) => {\r\n    return Object.assign({}, item);\r\n  });\r\n\r\n  /*\r\n    type = stream/base64\r\n  */\r\n  if (type == 'stream' && attachments.length > 0) {\r\n    attachments.forEach(item => {\r\n      item.content = fs.createReadStream(path.join(__dirname, `../upload/${item.content}`))\r\n    });\r\n  }\r\n\r\n  //Nếu sử dụng email nhận mặc định (để test)\r\n  if (receipt_default.BoolValue) {\r\n    let info = await transporter.sendMail({\r\n      from: account.Value, // sender address\r\n      to: email_receipt_account.Value,\r\n      subject: subject, // Subject line\r\n      text: '<p>Send to: ' + sendTo + '</p>' + '</br>' + body, // plain text body\r\n      html: '<p>Send to: ' + sendTo + '</p>' + '</br>' + body, // html body\r\n      attachments: attachments\r\n    });\r\n  }\r\n  //Nếu gửi trực tiếp đến email\r\n  else {\r\n    let info = await transporter.sendMail({\r\n      from: account.Value, // sender address\r\n      to: sendTo, //\"abc@gmail.com, javIdol@gmail.com\"\r\n      subject: subject, // Subject line\r\n      text: body, // plain text body\r\n      html: body, // html body\r\n      attachments: attachments\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports.sendEmail = sendEmail;"
      ]
    },
    "sourceType": "script",
    "mtime": 1653280805065
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\charity\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\charity\\\\resolveCharity.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\charity\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\charity\\resolveCharity.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\charity\\resolveCharity.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\charity\\resolveCharity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\charity\\",
        "sourceFileName": "resolveCharity.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar db = require('../../../data/knex-db');\n\nvar messages = require('../../../messages/charity');\n\nvar Timestamp = require('../../scalarType/Timestamp');\n\nvar _require = require('cross-fetch'),\n    Headers = _require.Headers;\n\nvar request = require('request');\n\nglobal.Headers = global.Headers || Headers;\nvar resolvers = {\n  Timestamp: Timestamp,\n  Query: {},\n  Mutation: {\n    createCharity: function () {\n      var _createCharity = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(parent, args, context) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return db.transaction( /*#__PURE__*/function () {\n                  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(trx) {\n                    var bodyData, check, charityUser, charityNumber, Moves_Charity_ID;\n                    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            bodyData = args.bodyData;\n                            _context2.next = 3;\n                            return doRequest('https://api.charitycommission.gov.uk/register/api/allcharitydetails/' + bodyData.Charity_Commission_No + '/0');\n\n                          case 3:\n                            check = _context2.sent;\n\n                            if (!(check != 404)) {\n                              _context2.next = 21;\n                              break;\n                            }\n\n                            _context2.next = 7;\n                            return trx.table('Charity').where('Charity_Name', bodyData.Charity_Name).first();\n\n                          case 7:\n                            charityUser = _context2.sent;\n                            _context2.next = 10;\n                            return trx.table('Charity').where('Charity_Commission_No', bodyData.Charity_Commission_No).first();\n\n                          case 10:\n                            charityNumber = _context2.sent;\n\n                            if (!(charityUser && charityNumber)) {\n                              _context2.next = 13;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", {\n                              messageCode: 404,\n                              message: 'There is a Charity of this name / number already registered on Moves. Please contact Moves Matter to discuss'\n                            });\n\n                          case 13:\n                            Moves_Charity_ID = null;\n                            _context2.next = 16;\n                            return trx.table('Charity').insert({\n                              Charity_Name: bodyData.Charity_Name,\n                              Charity_Commission_No: bodyData.Charity_Commission_No,\n                              Contact_Name: bodyData.Contact_Name,\n                              Contact_Email: bodyData.Contact_Email,\n                              Contact_Phone_Number: bodyData.Contact_Phone_Number\n                            }).returning('Moves_Charity_ID').then( /*#__PURE__*/function () {\n                              var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(rst) {\n                                return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                                  while (1) {\n                                    switch (_context.prev = _context.next) {\n                                      case 0:\n                                        Moves_Charity_ID = rst[0];\n\n                                      case 1:\n                                      case \"end\":\n                                        return _context.stop();\n                                    }\n                                  }\n                                }, _callee);\n                              }));\n\n                              return function (_x5) {\n                                return _ref2.apply(this, arguments);\n                              };\n                            }());\n\n                          case 16:\n                            if (Moves_Charity_ID) {\n                              _context2.next = 18;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", {\n                              messageCode: 500,\n                              message: messages.error\n                            });\n\n                          case 18:\n                            return _context2.abrupt(\"return\", {\n                              messageCode: 200,\n                              message: 'Thank you for your application to register with Moves Matter. We will carry out the necessary checks and get back to you at this email address. Here is your Moves reference number'\n                            });\n\n                          case 21:\n                            return _context2.abrupt(\"return\", {\n                              messageCode: 404,\n                              message: 'Charity not found on Charity Commission database. Please check Charity Name / Number'\n                            });\n\n                          case 22:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                result = _context3.sent;\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: _context3.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function createCharity(_x, _x2, _x3) {\n        return _createCharity.apply(this, arguments);\n      }\n\n      return createCharity;\n    }()\n  }\n};\n\nfunction doRequest(url) {\n  var option = {\n    url: url,\n    headers: {\n      'Ocp-Apim-Subscription-Key': 'a590ab9cb31849ecbd1cf492e4834795',\n      'Cache-Control': 'no-cache'\n    }\n  };\n  return new Promise(function (resolve, reject) {\n    request(option, function (error, res, body) {\n      if (res.statusCode == 200) resolve(body);else resolve(res.statusCode);\n    });\n  });\n}\n\nmodule.exports = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolveCharity.js"
      ],
      "names": [
        "db",
        "require",
        "messages",
        "Timestamp",
        "Headers",
        "request",
        "global",
        "resolvers",
        "Query",
        "Mutation",
        "createCharity",
        "parent",
        "args",
        "context",
        "transaction",
        "trx",
        "bodyData",
        "doRequest",
        "Charity_Commission_No",
        "check",
        "table",
        "where",
        "Charity_Name",
        "first",
        "charityUser",
        "charityNumber",
        "messageCode",
        "message",
        "Moves_Charity_ID",
        "insert",
        "Contact_Name",
        "Contact_Email",
        "Contact_Phone_Number",
        "returning",
        "then",
        "rst",
        "error",
        "result",
        "url",
        "option",
        "headers",
        "Promise",
        "resolve",
        "reject",
        "res",
        "body",
        "statusCode",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,uBAAD,CAAlB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,4BAAD,CAAzB;;AACA,eAAoBA,OAAO,CAAC,aAAD,CAA3B;AAAA,IAAQG,OAAR,YAAQA,OAAR;;AACA,IAAMC,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAvB;;AACAK,MAAM,CAACF,OAAP,GAAiBE,MAAM,CAACF,OAAP,IAAkBA,OAAnC;AAGA,IAAMG,SAAS,GAAG;AACdJ,EAAAA,SAAS,EAATA,SADc;AAGdK,EAAAA,KAAK,EAAE,EAHO;AAMdC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa;AAAA,yGAAE,kBAAOC,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEYb,EAAE,CAACc,WAAH;AAAA,2GAAe,kBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,4BAAAA,QADwB,GACbJ,IAAI,CAACI,QADQ;AAAA;AAAA,mCAGZC,SAAS,CAAC,yEAAyED,QAAQ,CAACE,qBAAlF,GAA0G,IAA3G,CAHG;;AAAA;AAG1BC,4BAAAA,KAH0B;;AAAA,kCAI1BA,KAAK,IAAI,GAJiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAKAJ,GAAG,CAACK,KAAJ,CAAU,SAAV,EAAqBC,KAArB,CAA2B,cAA3B,EAA2CL,QAAQ,CAACM,YAApD,EAAkEC,KAAlE,EALA;;AAAA;AAKpBC,4BAAAA,WALoB;AAAA;AAAA,mCAMET,GAAG,CAACK,KAAJ,CAAU,SAAV,EAAqBC,KAArB,CAA2B,uBAA3B,EAAoDL,QAAQ,CAACE,qBAA7D,EAAoFK,KAApF,EANF;;AAAA;AAMpBE,4BAAAA,aANoB;;AAAA,kCAOtBD,WAAW,IAAIC,aAPO;AAAA;AAAA;AAAA;;AAAA,8DAQf;AACHC,8BAAAA,WAAW,EAAE,GADV;AAEHC,8BAAAA,OAAO,EAAE;AAFN,6BARe;;AAAA;AActBC,4BAAAA,gBAdsB,GAcH,IAdG;AAAA;AAAA,mCAepBb,GAAG,CAACK,KAAJ,CAAU,SAAV,EACDS,MADC,CACM;AACJP,8BAAAA,YAAY,EAAEN,QAAQ,CAACM,YADnB;AAEJJ,8BAAAA,qBAAqB,EAAEF,QAAQ,CAACE,qBAF5B;AAGJY,8BAAAA,YAAY,EAAEd,QAAQ,CAACc,YAHnB;AAIJC,8BAAAA,aAAa,EAAEf,QAAQ,CAACe,aAJpB;AAKJC,8BAAAA,oBAAoB,EAAEhB,QAAQ,CAACgB;AAL3B,6BADN,EAOCC,SAPD,CAOW,kBAPX,EAO+BC,IAP/B;AAAA,wHAOoC,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAClCP,wCAAAA,gBAAgB,GAAGO,GAAG,CAAC,CAAD,CAAtB;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAPpC;;AAAA;AAAA;AAAA;AAAA,gCAfoB;;AAAA;AAAA,gCA0BrBP,gBA1BqB;AAAA;AAAA;AAAA;;AAAA,8DA2Bf;AACHF,8BAAAA,WAAW,EAAE,GADV;AAEHC,8BAAAA,OAAO,EAAEzB,QAAQ,CAACkC;AAFf,6BA3Be;;AAAA;AAAA,8DAgCnB;AACHV,8BAAAA,WAAW,EAAE,GADV;AAEHC,8BAAAA,OAAO,EAAE;AAFN,6BAhCmB;;AAAA;AAAA,8DAsCnB;AACHD,8BAAAA,WAAW,EAAE,GADV;AAEHC,8BAAAA,OAAO,EAAE;AAFN,6BAtCmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAf;;AAAA;AAAA;AAAA;AAAA,oBAFZ;;AAAA;AAEHU,gBAAAA,MAFG;AAAA,kDA+CAA,MA/CA;;AAAA;AAAA;AAAA;AAAA,kDAkDA;AACHX,kBAAAA,WAAW,EAAE,GADV;AAEHC,kBAAAA,OAAO;AAFJ,iBAlDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADP;AANI,CAAlB;;AAmEA,SAASV,SAAT,CAAmBqB,GAAnB,EAAwB;AACpB,MAAIC,MAAM,GAAG;AACTD,IAAAA,GAAG,EAAEA,GADI;AAETE,IAAAA,OAAO,EAAE;AACL,mCAA6B,kCADxB;AAEL,uBAAiB;AAFZ;AAFA,GAAb;AAOA,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CtC,IAAAA,OAAO,CAACkC,MAAD,EAAS,UAAUH,KAAV,EAAiBQ,GAAjB,EAAsBC,IAAtB,EAA4B;AACxC,UAAID,GAAG,CAACE,UAAJ,IAAkB,GAAtB,EACIJ,OAAO,CAACG,IAAD,CAAP,CADJ,KAGIH,OAAO,CAACE,GAAG,CAACE,UAAL,CAAP;AACP,KALM,CAAP;AAMH,GAPM,CAAP;AAQH;;AAEDC,MAAM,CAACC,OAAP,GAAiBzC,SAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\charity\\",
      "sourcesContent": [
        "const db = require('../../../data/knex-db');\r\nconst messages = require('../../../messages/charity');\r\nconst Timestamp = require('../../scalarType/Timestamp');\r\nconst { Headers } = require('cross-fetch');\r\nconst request = require('request');\r\nglobal.Headers = global.Headers || Headers;\r\n\r\n\r\nconst resolvers = {\r\n    Timestamp,\r\n\r\n    Query: {\r\n    },\r\n\r\n    Mutation: {\r\n        createCharity: async (parent, args, context) => {\r\n            try {\r\n                let result = await db.transaction(async trx => {\r\n                    const bodyData = args.bodyData;\r\n\r\n                    let check = await doRequest('https://api.charitycommission.gov.uk/register/api/allcharitydetails/' + bodyData.Charity_Commission_No + '/0');\r\n                    if (check != 404) {\r\n                        const charityUser = await trx.table('Charity').where('Charity_Name', bodyData.Charity_Name).first();\r\n                        const charityNumber = await trx.table('Charity').where('Charity_Commission_No', bodyData.Charity_Commission_No).first();\r\n                        if (charityUser && charityNumber) {\r\n                            return {\r\n                                messageCode: 404,\r\n                                message: 'There is a Charity of this name / number already registered on Moves. Please contact Moves Matter to discuss'\r\n                            }\r\n                        }\r\n\r\n                        let Moves_Charity_ID = null;\r\n                        await trx.table('Charity')\r\n                            .insert({\r\n                                Charity_Name: bodyData.Charity_Name,\r\n                                Charity_Commission_No: bodyData.Charity_Commission_No,\r\n                                Contact_Name: bodyData.Contact_Name,\r\n                                Contact_Email: bodyData.Contact_Email, \r\n                                Contact_Phone_Number: bodyData.Contact_Phone_Number\r\n                            }).returning('Moves_Charity_ID').then(async (rst) => {\r\n                                Moves_Charity_ID = rst[0]\r\n                            })\r\n\r\n                        if (!Moves_Charity_ID) {\r\n                            return {\r\n                                messageCode: 500,\r\n                                message: messages.error\r\n                            }\r\n                        }\r\n                        return {\r\n                            messageCode: 200,\r\n                            message: 'Thank you for your application to register with Moves Matter. We will carry out the necessary checks and get back to you at this email address. Here is your Moves reference number'\r\n                        }\r\n                    }\r\n                    else {\r\n                        return {\r\n                            messageCode: 404,\r\n                            message: 'Charity not found on Charity Commission database. Please check Charity Name / Number'\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return result;\r\n            }\r\n            catch (error) {\r\n                return {\r\n                    messageCode: 500,\r\n                    message: error\r\n                }\r\n            }\r\n        },\r\n\r\n    },\r\n}\r\n\r\nfunction doRequest(url) {\r\n    let option = {\r\n        url: url,\r\n        headers: {\r\n            'Ocp-Apim-Subscription-Key': 'a590ab9cb31849ecbd1cf492e4834795',\r\n            'Cache-Control': 'no-cache',\r\n        }\r\n    };\r\n    return new Promise(function (resolve, reject) {\r\n        request(option, function (error, res, body) {\r\n            if (res.statusCode == 200)\r\n                resolve(body);\r\n            else\r\n                resolve(res.statusCode);\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = resolvers;"
      ]
    },
    "sourceType": "script",
    "mtime": 1653280762194
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\messages\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\messages\\\\charity.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\charity.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\charity.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\charity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\",
        "sourceFileName": "charity.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  login: {\n    success: 'Login successful!',\n    error: 'Login failed!'\n  },\n  charity: {\n    error: 'Charity not found on Charity Commission database. Please check Charity Name / Number',\n    charityError: 'Charity name does not match on Charity Commission database. Please check Charity Name / Number'\n  },\n  error: 'Internal Server Error',\n  success: 'Success'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXJpdHkuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImxvZ2luIiwic3VjY2VzcyIsImVycm9yIiwiY2hhcml0eSIsImNoYXJpdHlFcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLEtBQUssRUFBRTtBQUNIQyxJQUFBQSxPQUFPLEVBQUUsbUJBRE47QUFFSEMsSUFBQUEsS0FBSyxFQUFFO0FBRkosR0FETTtBQUtiQyxFQUFBQSxPQUFPLEVBQUU7QUFDTEQsSUFBQUEsS0FBSyxFQUFFLHNGQURGO0FBRUxFLElBQUFBLFlBQVksRUFBRTtBQUZULEdBTEk7QUFTYkYsRUFBQUEsS0FBSyxFQUFFLHVCQVRNO0FBVWJELEVBQUFBLE9BQU8sRUFBRTtBQVZJLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxNb3Zlc01hc3RlclxcQ29kZVxcQWxpc2FtTW92ZS1Nb3Zlc01hdHRlclxcc2VydmVyXFxzcmNcXG1lc3NhZ2VzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGxvZ2luOiB7XHJcbiAgICAgICAgc3VjY2VzczogJ0xvZ2luIHN1Y2Nlc3NmdWwhJyxcclxuICAgICAgICBlcnJvcjogJ0xvZ2luIGZhaWxlZCEnLFxyXG4gICAgfSxcclxuICAgIGNoYXJpdHk6IHtcclxuICAgICAgICBlcnJvcjogJ0NoYXJpdHkgbm90IGZvdW5kIG9uIENoYXJpdHkgQ29tbWlzc2lvbiBkYXRhYmFzZS4gUGxlYXNlIGNoZWNrIENoYXJpdHkgTmFtZSAvIE51bWJlcicsXHJcbiAgICAgICAgY2hhcml0eUVycm9yOiAnQ2hhcml0eSBuYW1lIGRvZXMgbm90IG1hdGNoIG9uIENoYXJpdHkgQ29tbWlzc2lvbiBkYXRhYmFzZS4gUGxlYXNlIGNoZWNrIENoYXJpdHkgTmFtZSAvIE51bWJlcidcclxuICAgIH0sXHJcbiAgICBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicsXHJcbiAgICBzdWNjZXNzOiAnU3VjY2VzcycsXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "charity.js"
      ],
      "names": [
        "module",
        "exports",
        "login",
        "success",
        "error",
        "charity",
        "charityError"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE,mBADN;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GADM;AAKbC,EAAAA,OAAO,EAAE;AACLD,IAAAA,KAAK,EAAE,sFADF;AAELE,IAAAA,YAAY,EAAE;AAFT,GALI;AASbF,EAAAA,KAAK,EAAE,uBATM;AAUbD,EAAAA,OAAO,EAAE;AAVI,CAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\messages\\",
      "sourcesContent": [
        "module.exports = {\r\n    login: {\r\n        success: 'Login successful!',\r\n        error: 'Login failed!',\r\n    },\r\n    charity: {\r\n        error: 'Charity not found on Charity Commission database. Please check Charity Name / Number',\r\n        charityError: 'Charity name does not match on Charity Commission database. Please check Charity Name / Number'\r\n    },\r\n    error: 'Internal Server Error',\r\n    success: 'Success',\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1653043746275
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\scalarTypeSubscribe\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\scalarTypeSubscribe\\\\scalarType.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\scalarTypeSubscribe\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\scalarTypeSubscribe\\scalarType.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\scalarTypeSubscribe\\scalarType.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\scalarTypeSubscribe\\scalarType.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\scalarTypeSubscribe\\",
        "sourceFileName": "scalarType.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Timestamp = require('../../scalarType/Timestamp');\n\nvar _require = require('graphql-upload'),\n    GraphQLUpload = _require.GraphQLUpload;\n\nvar resolvers = {\n  Timestamp: Timestamp,\n  Upload: GraphQLUpload\n};\nmodule.exports = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjYWxhclR5cGUuanMiXSwibmFtZXMiOlsiVGltZXN0YW1wIiwicmVxdWlyZSIsIkdyYXBoUUxVcGxvYWQiLCJyZXNvbHZlcnMiLCJVcGxvYWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQXpCOztBQUNBLGVBQTBCQSxPQUFPLENBQUMsZ0JBQUQsQ0FBakM7QUFBQSxJQUFRQyxhQUFSLFlBQVFBLGFBQVI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHO0FBQ2hCSCxFQUFBQSxTQUFTLEVBQVRBLFNBRGdCO0FBRWhCSSxFQUFBQSxNQUFNLEVBQUVGO0FBRlEsQ0FBbEI7QUFLQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxTQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTW92ZXNNYXN0ZXJcXENvZGVcXEFsaXNhbU1vdmUtTW92ZXNNYXR0ZXJcXHNlcnZlclxcc3JjXFxncmFwaHFsXFxyZXNvbHZlc1xcc2NhbGFyVHlwZVN1YnNjcmliZVxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVGltZXN0YW1wID0gcmVxdWlyZSgnLi4vLi4vc2NhbGFyVHlwZS9UaW1lc3RhbXAnKTtcclxuY29uc3QgeyBHcmFwaFFMVXBsb2FkIH0gPSByZXF1aXJlKCdncmFwaHFsLXVwbG9hZCcpO1xyXG5cclxuY29uc3QgcmVzb2x2ZXJzID0geyBcclxuICBUaW1lc3RhbXAsXHJcbiAgVXBsb2FkOiBHcmFwaFFMVXBsb2FkLFxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJlc29sdmVycyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "scalarType.js"
      ],
      "names": [
        "Timestamp",
        "require",
        "GraphQLUpload",
        "resolvers",
        "Upload",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,4BAAD,CAAzB;;AACA,eAA0BA,OAAO,CAAC,gBAAD,CAAjC;AAAA,IAAQC,aAAR,YAAQA,aAAR;;AAEA,IAAMC,SAAS,GAAG;AAChBH,EAAAA,SAAS,EAATA,SADgB;AAEhBI,EAAAA,MAAM,EAAEF;AAFQ,CAAlB;AAKAG,MAAM,CAACC,OAAP,GAAiBH,SAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\scalarTypeSubscribe\\",
      "sourcesContent": [
        "const Timestamp = require('../../scalarType/Timestamp');\r\nconst { GraphQLUpload } = require('graphql-upload');\r\n\r\nconst resolvers = { \r\n  Timestamp,\r\n  Upload: GraphQLUpload,\r\n}\r\n\r\nmodule.exports = resolvers"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518328
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\tien-ich\\\\message\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\tien-ich\\\\message\\\\resolveMessage.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\tien-ich\\message\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\tien-ich\\message\\resolveMessage.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\tien-ich\\message\\resolveMessage.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\tien-ich\\message\\resolveMessage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\tien-ich\\message\\",
        "sourceFileName": "resolveMessage.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar db = require('../../../../data/knex-db');\n\nvar authenticated = require('../../../../middleware/authenticated-guard');\n\nvar sendEmail = require('../../../../common/sendEmail');\n\nvar _require = require('../../../../common/handleFile'),\n    saveFile = _require.saveFile,\n    deleteFile = _require.deleteFile,\n    downloadFile = _require.downloadFile;\n\nvar _require2 = require('../../../subscription/const-subscription'),\n    MESSAGE_COUNT = _require2.MESSAGE_COUNT;\n\nvar _require3 = require('graphql-subscriptions'),\n    PubSub = _require3.PubSub,\n    withFilter = _require3.withFilter;\n\nvar pubsub = new PubSub();\nvar resolvers = {\n  //QUERY\n  Query: {\n    getListMessage: authenticated( /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(parent, args, context) {\n        var userId, FromCreatedDate, ToCreatedDate, FromSendDate, ToSendDate, ListStatus, result;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                userId = context.currentUser.id;\n                FromCreatedDate = args.GetListMessageInput.FromCreatedDate;\n                ToCreatedDate = args.GetListMessageInput.ToCreatedDate;\n                FromSendDate = args.GetListMessageInput.FromSendDate;\n                ToSendDate = args.GetListMessageInput.ToSendDate;\n                ListStatus = args.GetListMessageInput.ListStatus;\n                _context.next = 9;\n                return db.select().table('Message').orderBy('CreatedDate', 'desc').where(function (builder) {\n                  builder.where('CreatedBy', userId);\n                  if (FromCreatedDate) builder.whereRaw('??::date >= ?::date', ['CreatedDate', FromCreatedDate]);\n                  if (ToCreatedDate) builder.whereRaw('??::date <= ?::date', ['CreatedDate', ToCreatedDate]);\n                  if (FromSendDate) builder.whereRaw('??::date >= ?::date', ['SendDate', FromSendDate]);\n                  if (ToSendDate) builder.whereRaw('??::date <= ?::date', ['SendDate', ToSendDate]);\n                  if (ListStatus.length > 0) builder.whereIn('Status', ListStatus);\n                });\n\n              case 9:\n                result = _context.sent;\n                result.forEach(function (item) {\n                  item.StatusName = item.Status == 0 ? \"Lưu nháp\" : \"Đã gửi\";\n                });\n                return _context.abrupt(\"return\", {\n                  listMessage: result,\n                  messageCode: 200,\n                  message: 'message.get_list_message.success'\n                });\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  listMessage: [],\n                  messageCode: 500,\n                  message: _context.t0.toString()\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }()),\n    getMasterDataMessageDialog: authenticated( /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(parent, args, context) {\n        var messageObject, fileUploadMes, list_don_vi, list_nguoi_dung, list_data_send_mess, maxId, list_nhom_quyen, list_phan_quyen, list_data_permission_group, listKeys, listPartial, message, _listNguoiDungId, listNguoiDungId, listNode, list_nhom_quyen_id, listFileDinhKem;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                messageObject = {\n                  Id: 0,\n                  TieuDe: \"\",\n                  NoiDung: \"\",\n                  NhomNguoiNhan: 1,\n                  PhuongThucGui: \"\",\n                  GuiTatCa: null,\n                  SendDate: null,\n                  Status: null,\n                  CreatedDate: null,\n                  StatusName: null\n                }; //List file đính kèm\n\n                fileUploadMes = []; //Lấy list đơn vị\n\n                _context2.next = 5;\n                return db.table('DonVi').whereIn('Level', [0, 1]).select('Id', 'TenDonVi', 'ParentId').orderBy('Id');\n\n              case 5:\n                list_don_vi = _context2.sent;\n                _context2.next = 8;\n                return db.table('NguoiDung').select('Id', 'HoTen', 'DonVi_Id');\n\n              case 8:\n                list_nguoi_dung = _context2.sent;\n                list_data_send_mess = [];\n                list_don_vi.forEach(function (item) {\n                  var data_send_mess = {\n                    Id: item.Id,\n                    Name: item.TenDonVi,\n                    ParentId: null,\n                    Level: 0,\n                    NguoiDung_Id: null,\n                    SoNguoiThuocNhomQuyen: 0,\n                    Selectable: true\n                  };\n                  list_data_send_mess.push(data_send_mess);\n                });\n                maxId = Math.max.apply(Math, (0, _toConsumableArray2[\"default\"])(list_data_send_mess.map(function (x) {\n                  return x.Id;\n                })));\n                list_nguoi_dung.forEach(function (item) {\n                  var data_send_mess = {\n                    Id: ++maxId,\n                    Name: item.HoTen,\n                    ParentId: item.DonVi_Id,\n                    Level: 1,\n                    NguoiDung_Id: item.Id,\n                    SoNguoiThuocNhomQuyen: 0,\n                    Selectable: true\n                  };\n                  list_data_send_mess.push(data_send_mess);\n                }); //Lấy list nhóm quyền\n\n                _context2.next = 15;\n                return db.table('NhomQuyen').select('Id', 'TenNhomQuyen');\n\n              case 15:\n                list_nhom_quyen = _context2.sent;\n                _context2.next = 18;\n                return db.table('PhanQuyen').select('NguoiDung_Id', 'NhomQuyen_Id');\n\n              case 18:\n                list_phan_quyen = _context2.sent;\n                list_data_permission_group = [];\n                list_nhom_quyen.forEach(function (item) {\n                  //Lấy số người thuộc nhóm quyền\n                  var count_user = list_phan_quyen.filter(function (x) {\n                    return x.NhomQuyen_Id == item.Id;\n                  }).length;\n                  var selectable = true; //count_user == 0 ? false : true;\n\n                  var data_send_mess = {\n                    Id: item.Id,\n                    Name: item.TenNhomQuyen,\n                    ParentId: null,\n                    Level: 0,\n                    NguoiDung_Id: null,\n                    SoNguoiThuocNhomQuyen: count_user,\n                    Selectable: selectable\n                  };\n                  list_data_permission_group.push(data_send_mess);\n                }); //Nếu là lấy lại thông tin Message\n\n                listKeys = [];\n                listPartial = [];\n\n                if (!args.Id) {\n                  _context2.next = 53;\n                  break;\n                }\n\n                _context2.next = 26;\n                return db.table('Message').where('Id', args.Id).first();\n\n              case 26:\n                message = _context2.sent;\n                messageObject.Id = message.Id;\n                messageObject.TieuDe = message.TieuDe;\n                messageObject.NoiDung = message.NoiDung;\n                messageObject.NhomNguoiNhan = message.NhomNguoiNhan;\n                messageObject.PhuongThucGui = message.PhuongThucGui;\n                messageObject.GuiTatCa = message.GuiTatCa;\n                messageObject.Status = message.Status;\n                messageObject.StatusName = message.Status == 0 ? \"Lưu nháp\" : \"Đã gửi\"; //Lấy list selected và list PartialSelected nếu là Nhóm người nhận là Theo người dùng\n\n                if (!(messageObject.NhomNguoiNhan == 1)) {\n                  _context2.next = 45;\n                  break;\n                }\n\n                _context2.next = 38;\n                return db.table('Message_NguoiDung').where('Message_Id', message.Id).select('NguoiDung_Id');\n\n              case 38:\n                _listNguoiDungId = _context2.sent;\n                listNguoiDungId = _listNguoiDungId === null || _listNguoiDungId === void 0 ? void 0 : _listNguoiDungId.map(function (x) {\n                  return x.NguoiDung_Id;\n                });\n                listKeys = list_data_send_mess.filter(function (x) {\n                  return listNguoiDungId.includes(x.NguoiDung_Id);\n                }).map(function (x) {\n                  return x.Id.toString();\n                });\n                listNode = list_data_send_mess.filter(function (x) {\n                  return x.Level == 0;\n                });\n                listNode.forEach(function (item) {\n                  var countChild = list_data_send_mess.filter(function (x) {\n                    return x.ParentId == item.Id;\n                  }).length;\n                  var count = list_data_send_mess.filter(function (x) {\n                    return x.ParentId == item.Id;\n                  }).filter(function (x) {\n                    return listKeys.includes(x.Id.toString());\n                  }).length; //Nếu tất cả node con đều đc chọn\n\n                  if (countChild == count && countChild != 0) {\n                    listKeys.push(item.Id.toString());\n                  } //Nếu có ít nhất 1 node con đc chọn\n                  else if (count > 0) {\n                    listPartial.push(item.Id);\n                  } //Nếu không có node con nào đc chọn\n                  else if (count == 0) {\n                    var listChildId = list_data_send_mess.filter(function (x) {\n                      return x.ParentId == item.Id;\n                    }).map(function (x) {\n                      return x.Id;\n                    });\n                    var exists = false;\n                    listChildId.forEach(function (child) {\n                      if (listPartial.includes(child)) exists = true;\n                    }); //Nếu có ít nhất 1 node con là partial\n\n                    if (exists) listPartial.push(item.Id);\n                  }\n                });\n                _context2.next = 49;\n                break;\n\n              case 45:\n                _context2.next = 47;\n                return db.table('Message_NhomQuyen').where('Message_Id', message.Id).select('NhomQuyen_Id');\n\n              case 47:\n                list_nhom_quyen_id = _context2.sent;\n                listKeys = list_nhom_quyen_id.map(function (x) {\n                  return x.NhomQuyen_Id.toString();\n                });\n\n              case 49:\n                _context2.next = 51;\n                return db.table('FileDinhKemMesssage').where('Message_Id', args.Id).select('Id', 'TenTaiLieu');\n\n              case 51:\n                listFileDinhKem = _context2.sent;\n                listFileDinhKem.forEach(function (item) {\n                  var index = item.TenTaiLieu.lastIndexOf('.');\n                  var fileName = item.TenTaiLieu.substring(0, index);\n                  var fileType = item.TenTaiLieu.substring(index + 1);\n                  var indexSpecial = fileName.lastIndexOf('_');\n                  fileName = fileName.substring(0, indexSpecial) + '.' + fileType;\n                  var fileDinhKem = {\n                    Id: item.Id,\n                    TenTaiLieu: fileName\n                  };\n                  fileUploadMes.push(fileDinhKem);\n                });\n\n              case 53:\n                return _context2.abrupt(\"return\", {\n                  messageObject: messageObject,\n                  listDataSendMess: list_data_send_mess,\n                  listDataPermissionGroup: list_data_permission_group,\n                  listKeys: listKeys,\n                  listPartial: listPartial,\n                  fileUploadMes: fileUploadMes,\n                  messageCode: 200,\n                  message: 'message.get_master_data_message_dialog.success'\n                });\n\n              case 56:\n                _context2.prev = 56;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", {\n                  listMessage: [],\n                  messageCode: 500,\n                  message: _context2.t0.toString()\n                });\n\n              case 59:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 56]]);\n      }));\n\n      return function (_x4, _x5, _x6) {\n        return _ref2.apply(this, arguments);\n      };\n    }()),\n    getCountMessageByUserId: authenticated( /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(parent, args, context) {\n        var userId, count;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                userId = context.currentUser.id;\n                _context3.next = 4;\n                return db.table('Message_NguoiDung').innerJoin('Message', 'Message_NguoiDung.Message_Id', '=', 'Message.Id').where(function (builder) {\n                  builder.where('Message_NguoiDung.NguoiDung_Id', userId);\n                  builder.where('Message_NguoiDung.DaXem', false);\n                  builder.where('Message_NguoiDung.Status', 1);\n                  builder.where('Message.Type', 0);\n                }).count('Message_NguoiDung.Id');\n\n              case 4:\n                count = _context3.sent;\n                return _context3.abrupt(\"return\", {\n                  count: Number.parseInt(count[0].count),\n                  messageCode: 200,\n                  message: 'message.count_mes_by_user.success'\n                });\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: _context3.t0.toString()\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 8]]);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref3.apply(this, arguments);\n      };\n    }()),\n    getListMessageByUserId: authenticated( /*#__PURE__*/function () {\n      var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(parent, args, context) {\n        var Keyword, userId, _listMessage, listFile, listCreatedBy, listNguoiDung, listMessage;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                Keyword = args.Keyword;\n                userId = context.currentUser.id;\n                _context4.next = 5;\n                return db.select('Message_NguoiDung.Id', 'Message.Id AS Message_Id', 'Message.TieuDe', 'Message.NoiDung', 'Message.SendDate', 'Message.CreatedBy', 'Message_NguoiDung.DaXem').orderBy('Message.SendDate', 'desc').from('Message_NguoiDung').innerJoin('Message', 'Message_NguoiDung.Message_Id', 'Message.Id').where(function (builder) {\n                  builder.where('Message_NguoiDung.NguoiDung_Id', userId);\n                  builder.where('Message_NguoiDung.Status', 1);\n                  builder.where('Message.Type', 0);\n\n                  if (Keyword) {\n                    builder.where('TieuDe', 'like', \"%\".concat(Keyword.trim(), \"%\")).orWhere('NoiDung', 'like', \"%\".concat(Keyword.trim(), \"%\"));\n                  }\n                });\n\n              case 5:\n                _listMessage = _context4.sent;\n                _context4.next = 8;\n                return db.table('FileDinhKemMesssage').select('Id', 'TenTaiLieu', 'Message_Id').whereIn('Message_Id', _listMessage.map(function (x) {\n                  return x.Message_Id;\n                }));\n\n              case 8:\n                listFile = _context4.sent;\n\n                if (listFile.length > 0) {\n                  _listMessage.forEach(function (item) {\n                    var files = listFile.filter(function (x) {\n                      return x.Message_Id == item.Message_Id;\n                    });\n                    files.forEach(function (file) {\n                      var index = file.TenTaiLieu.lastIndexOf('.');\n                      var fileName = file.TenTaiLieu.substring(0, index);\n                      var fileType = file.TenTaiLieu.substring(index + 1);\n                      var indexSpecial = fileName.lastIndexOf('_');\n                      file.TenTaiLieu = fileName.substring(0, indexSpecial) + '.' + fileType;\n                    });\n                    item.fileUploadMes = files;\n                  });\n                } //Lấy list người tạo message\n\n\n                listCreatedBy = _listMessage.map(function (x) {\n                  return x.CreatedBy;\n                });\n                _context4.next = 13;\n                return db.table('NguoiDung').select('Id', 'HoTen').whereIn('Id', listCreatedBy);\n\n              case 13:\n                listNguoiDung = _context4.sent;\n                listMessage = [];\n\n                _listMessage.forEach(function (item) {\n                  var _listNguoiDung$find;\n\n                  var newItem = {\n                    Id: item.Id,\n                    TieuDe: item.TieuDe,\n                    NoiDung: item.NoiDung,\n                    SendDate: item.SendDate,\n                    CreatedName: (_listNguoiDung$find = listNguoiDung.find(function (x) {\n                      return x.Id == item.CreatedBy;\n                    })) === null || _listNguoiDung$find === void 0 ? void 0 : _listNguoiDung$find.HoTen,\n                    DaXem: item.DaXem,\n                    ListFile: item.fileUploadMes ? item.fileUploadMes : []\n                  };\n                  listMessage.push(newItem);\n                });\n\n                return _context4.abrupt(\"return\", {\n                  listMessage: listMessage,\n                  messageCode: 200,\n                  message: 'message.get_list_mess_by_user.success'\n                });\n\n              case 19:\n                _context4.prev = 19;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: _context4.t0.toString()\n                });\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 19]]);\n      }));\n\n      return function (_x10, _x11, _x12) {\n        return _ref4.apply(this, arguments);\n      };\n    }())\n  },\n  //MUTATION\n  Mutation: {\n    createMessage: authenticated( /*#__PURE__*/function () {\n      var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(parent, args, context) {\n        var userId, trx_result;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                userId = context.currentUser.id;\n                _context6.next = 4;\n                return db.transaction( /*#__PURE__*/function () {\n                  var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(trx) {\n                    var messageInput, result, Message_Id, _messageInput$ListSel, listMessage_NguoiDung, createMessage_NguoiDung, _messageInput$ListSel2, listMessage_NhomQuyen, createMessage_NhomQuyen, thuMuc, thuMucId, listFileDinhKem, _iterator, _step, file, _yield$file, filename, mimetype, createReadStream, fileDinhKem;\n\n                    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            messageInput = args.MessageInput; //Tạo Message\n\n                            _context5.next = 3;\n                            return trx.table('Message').returning(['Id']).insert({\n                              TieuDe: messageInput.TieuDe,\n                              NoiDung: messageInput.NoiDung,\n                              NhomNguoiNhan: messageInput.NhomNguoiNhan,\n                              PhuongThucGui: messageInput.PhuongThucGui,\n                              GuiTatCa: messageInput.GuiTatCa,\n                              Status: 0,\n                              //Lưu nháp\n                              CreatedBy: userId\n                            });\n\n                          case 3:\n                            result = _context5.sent;\n                            Message_Id = result[0].Id; //Theo người dùng\n\n                            if (!(messageInput.NhomNguoiNhan == 1)) {\n                              _context5.next = 14;\n                              break;\n                            }\n\n                            //Thêm vào bảng mapping\n                            listMessage_NguoiDung = [];\n                            (_messageInput$ListSel = messageInput.ListSelectedId) === null || _messageInput$ListSel === void 0 ? void 0 : _messageInput$ListSel.forEach(function (item) {\n                              var message_nguoiDung = {\n                                Message_Id: Message_Id,\n                                NguoiDung_Id: item,\n                                Status: 0\n                              };\n                              listMessage_NguoiDung.push(message_nguoiDung);\n                            });\n\n                            if (!(listMessage_NguoiDung.length > 0)) {\n                              _context5.next = 12;\n                              break;\n                            }\n\n                            _context5.next = 11;\n                            return trx.table('Message_NguoiDung').insert(listMessage_NguoiDung);\n\n                          case 11:\n                            createMessage_NguoiDung = _context5.sent;\n\n                          case 12:\n                            _context5.next = 21;\n                            break;\n\n                          case 14:\n                            if (!(messageInput.NhomNguoiNhan == 2)) {\n                              _context5.next = 21;\n                              break;\n                            }\n\n                            //Thêm vào bảng mapping\n                            listMessage_NhomQuyen = [];\n                            (_messageInput$ListSel2 = messageInput.ListSelectedId) === null || _messageInput$ListSel2 === void 0 ? void 0 : _messageInput$ListSel2.forEach(function (item) {\n                              var message_nhomQuyen = {\n                                Message_Id: Message_Id,\n                                NhomQuyen_Id: item\n                              };\n                              listMessage_NhomQuyen.push(message_nhomQuyen);\n                            });\n\n                            if (!(listMessage_NhomQuyen.length > 0)) {\n                              _context5.next = 21;\n                              break;\n                            }\n\n                            _context5.next = 20;\n                            return trx.table('Message_NhomQuyen').insert(listMessage_NhomQuyen);\n\n                          case 20:\n                            createMessage_NhomQuyen = _context5.sent;\n\n                          case 21:\n                            _context5.next = 23;\n                            return trx.table('ThuMuc').where('Id', 1).first();\n\n                          case 23:\n                            thuMuc = _context5.sent;\n                            thuMucId = thuMuc.Id;\n                            listFileDinhKem = [];\n                            _iterator = _createForOfIteratorHelper(args.files);\n                            _context5.prev = 27;\n\n                            _iterator.s();\n\n                          case 29:\n                            if ((_step = _iterator.n()).done) {\n                              _context5.next = 41;\n                              break;\n                            }\n\n                            file = _step.value;\n                            _context5.next = 33;\n                            return file;\n\n                          case 33:\n                            _yield$file = _context5.sent;\n                            filename = _yield$file.filename;\n                            mimetype = _yield$file.mimetype;\n                            createReadStream = _yield$file.createReadStream;\n                            fileDinhKem = {\n                              TenTaiLieu: filename,\n                              ThuMuc_Id: thuMucId,\n                              Message_Id: Message_Id\n                            };\n                            listFileDinhKem.push(fileDinhKem);\n\n                          case 39:\n                            _context5.next = 29;\n                            break;\n\n                          case 41:\n                            _context5.next = 46;\n                            break;\n\n                          case 43:\n                            _context5.prev = 43;\n                            _context5.t0 = _context5[\"catch\"](27);\n\n                            _iterator.e(_context5.t0);\n\n                          case 46:\n                            _context5.prev = 46;\n\n                            _iterator.f();\n\n                            return _context5.finish(46);\n\n                          case 49:\n                            if (!(listFileDinhKem.length > 0)) {\n                              _context5.next = 52;\n                              break;\n                            }\n\n                            _context5.next = 52;\n                            return trx.table('FileDinhKemMesssage').insert(listFileDinhKem);\n\n                          case 52:\n                            _context5.next = 54;\n                            return saveFile(args.files, thuMuc.TenThuMuc);\n\n                          case 54:\n                            return _context5.abrupt(\"return\", {\n                              Id: Message_Id,\n                              messageCode: 200,\n                              message: 'message.tao_moi.success'\n                            });\n\n                          case 55:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5, null, [[27, 43, 46, 49]]);\n                  }));\n\n                  return function (_x16) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                trx_result = _context6.sent;\n                return _context6.abrupt(\"return\", trx_result);\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.log(_context6.t0);\n                return _context6.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'message.tao_moi.error'\n                });\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 8]]);\n      }));\n\n      return function (_x13, _x14, _x15) {\n        return _ref5.apply(this, arguments);\n      };\n    }()),\n    updateMessage: authenticated( /*#__PURE__*/function () {\n      var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(parent, args, context) {\n        var trx_result;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return db.transaction( /*#__PURE__*/function () {\n                  var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(trx) {\n                    var messageInput, result, _messageInput$ListSel3, del, listMessage_NguoiDung, createMessage_NguoiDung, _messageInput$ListSel4, _del, listMessage_NhomQuyen, createMessage_NhomQuyen, thuMuc, thuMucId, listFileDinhKem, _iterator2, _step2, file, _yield$file2, filename, mimetype, createReadStream, fileDinhKem;\n\n                    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            messageInput = args.MessageInput; //Update Message\n\n                            _context7.next = 3;\n                            return trx.table('Message').where('Id', args.Id).update({\n                              TieuDe: messageInput.TieuDe,\n                              NoiDung: messageInput.NoiDung,\n                              NhomNguoiNhan: messageInput.NhomNguoiNhan,\n                              PhuongThucGui: messageInput.PhuongThucGui,\n                              GuiTatCa: messageInput.GuiTatCa\n                            });\n\n                          case 3:\n                            result = _context7.sent;\n\n                            if (!(messageInput.NhomNguoiNhan == 1)) {\n                              _context7.next = 16;\n                              break;\n                            }\n\n                            _context7.next = 7;\n                            return trx.table('Message_NguoiDung').where('Message_Id', args.Id).del();\n\n                          case 7:\n                            del = _context7.sent;\n                            //Thêm vào bảng mapping\n                            listMessage_NguoiDung = [];\n                            (_messageInput$ListSel3 = messageInput.ListSelectedId) === null || _messageInput$ListSel3 === void 0 ? void 0 : _messageInput$ListSel3.forEach(function (item) {\n                              var message_nguoiDung = {\n                                Message_Id: args.Id,\n                                NguoiDung_Id: item,\n                                Status: 0\n                              };\n                              listMessage_NguoiDung.push(message_nguoiDung);\n                            });\n\n                            if (!(listMessage_NguoiDung.length > 0)) {\n                              _context7.next = 14;\n                              break;\n                            }\n\n                            _context7.next = 13;\n                            return trx.table('Message_NguoiDung').insert(listMessage_NguoiDung);\n\n                          case 13:\n                            createMessage_NguoiDung = _context7.sent;\n\n                          case 14:\n                            _context7.next = 26;\n                            break;\n\n                          case 16:\n                            if (!(messageInput.NhomNguoiNhan == 2)) {\n                              _context7.next = 26;\n                              break;\n                            }\n\n                            _context7.next = 19;\n                            return trx.table('Message_NhomQuyen').where('Message_Id', args.Id).del();\n\n                          case 19:\n                            _del = _context7.sent;\n                            //Thêm vào bảng mapping\n                            listMessage_NhomQuyen = [];\n                            (_messageInput$ListSel4 = messageInput.ListSelectedId) === null || _messageInput$ListSel4 === void 0 ? void 0 : _messageInput$ListSel4.forEach(function (item) {\n                              var message_nhomQuyen = {\n                                Message_Id: args.Id,\n                                NhomQuyen_Id: item\n                              };\n                              listMessage_NhomQuyen.push(message_nhomQuyen);\n                            });\n\n                            if (!(listMessage_NhomQuyen.length > 0)) {\n                              _context7.next = 26;\n                              break;\n                            }\n\n                            _context7.next = 25;\n                            return trx.table('Message_NhomQuyen').insert(listMessage_NhomQuyen);\n\n                          case 25:\n                            createMessage_NhomQuyen = _context7.sent;\n\n                          case 26:\n                            _context7.next = 28;\n                            return trx.table('ThuMuc').where('Id', 1).first();\n\n                          case 28:\n                            thuMuc = _context7.sent;\n                            thuMucId = thuMuc.Id;\n                            listFileDinhKem = [];\n                            _iterator2 = _createForOfIteratorHelper(args.files);\n                            _context7.prev = 32;\n\n                            _iterator2.s();\n\n                          case 34:\n                            if ((_step2 = _iterator2.n()).done) {\n                              _context7.next = 46;\n                              break;\n                            }\n\n                            file = _step2.value;\n                            _context7.next = 38;\n                            return file;\n\n                          case 38:\n                            _yield$file2 = _context7.sent;\n                            filename = _yield$file2.filename;\n                            mimetype = _yield$file2.mimetype;\n                            createReadStream = _yield$file2.createReadStream;\n                            fileDinhKem = {\n                              TenTaiLieu: filename,\n                              ThuMuc_Id: thuMucId,\n                              Message_Id: args.Id\n                            };\n                            listFileDinhKem.push(fileDinhKem);\n\n                          case 44:\n                            _context7.next = 34;\n                            break;\n\n                          case 46:\n                            _context7.next = 51;\n                            break;\n\n                          case 48:\n                            _context7.prev = 48;\n                            _context7.t0 = _context7[\"catch\"](32);\n\n                            _iterator2.e(_context7.t0);\n\n                          case 51:\n                            _context7.prev = 51;\n\n                            _iterator2.f();\n\n                            return _context7.finish(51);\n\n                          case 54:\n                            if (!(listFileDinhKem.length > 0)) {\n                              _context7.next = 57;\n                              break;\n                            }\n\n                            _context7.next = 57;\n                            return trx.table('FileDinhKemMesssage').insert(listFileDinhKem);\n\n                          case 57:\n                            _context7.next = 59;\n                            return saveFile(args.files, thuMuc.TenThuMuc);\n\n                          case 59:\n                            return _context7.abrupt(\"return\", {\n                              messageCode: 200,\n                              message: 'message.cap_nhat.success'\n                            });\n\n                          case 60:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7, null, [[32, 48, 51, 54]]);\n                  }));\n\n                  return function (_x20) {\n                    return _ref8.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                trx_result = _context8.sent;\n                return _context8.abrupt(\"return\", trx_result);\n\n              case 7:\n                _context8.prev = 7;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.log(_context8.t0);\n                return _context8.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'message.cap_nhat.error'\n                });\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 7]]);\n      }));\n\n      return function (_x17, _x18, _x19) {\n        return _ref7.apply(this, arguments);\n      };\n    }()),\n    deleteMessage: authenticated( /*#__PURE__*/function () {\n      var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(parent, args, context) {\n        var trx_result;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return db.transaction( /*#__PURE__*/function () {\n                  var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(trx) {\n                    var _message, list_message_nguoiDung, list_message_nhomQuyen, folder, list_file_dinh_kem, del_file, del;\n\n                    return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                      while (1) {\n                        switch (_context9.prev = _context9.next) {\n                          case 0:\n                            _context9.next = 2;\n                            return trx.table('Message').where('Id', args.Id).first();\n\n                          case 2:\n                            _message = _context9.sent;\n\n                            if (!(_message.Status == 1)) {\n                              _context9.next = 5;\n                              break;\n                            }\n\n                            throw new Error('message.xoa.error_tin_nhan_da_gui');\n\n                          case 5:\n                            _context9.next = 7;\n                            return trx.table('Message_NguoiDung').where('Message_Id', _message.Id).del();\n\n                          case 7:\n                            list_message_nguoiDung = _context9.sent;\n                            _context9.next = 10;\n                            return trx.table('Message_NhomQuyen').where('Message_Id', _message.Id).del();\n\n                          case 10:\n                            list_message_nhomQuyen = _context9.sent;\n                            _context9.next = 13;\n                            return trx.table('ThuMuc').where('Id', 1).first();\n\n                          case 13:\n                            folder = _context9.sent;\n                            _context9.next = 16;\n                            return trx.table('FileDinhKemMesssage').where('Message_Id', args.Id).then(function (files) {\n                              if (files.length > 0) {\n                                var listUrl = []; //Xóa file vật lý\n\n                                //Xóa file vật lý\n                                var _iterator3 = _createForOfIteratorHelper(files),\n                                    _step3;\n\n                                try {\n                                  //Xóa file vật lý\n                                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                                    var file = _step3.value;\n                                    var url = folder.Path + '/' + file.TenTaiLieu;\n                                    listUrl.push(url);\n                                  }\n                                } catch (err) {\n                                  _iterator3.e(err);\n                                } finally {\n                                  _iterator3.f();\n                                }\n\n                                deleteFile(listUrl);\n                              }\n                            });\n\n                          case 16:\n                            list_file_dinh_kem = _context9.sent;\n                            _context9.next = 19;\n                            return trx.table('FileDinhKemMesssage').where('Message_Id', args.Id).del();\n\n                          case 19:\n                            del_file = _context9.sent;\n                            _context9.next = 22;\n                            return trx.table('Message').where('Id', args.Id).del();\n\n                          case 22:\n                            del = _context9.sent;\n                            return _context9.abrupt(\"return\", {\n                              messageCode: 200,\n                              message: 'message.xoa.success'\n                            });\n\n                          case 24:\n                          case \"end\":\n                            return _context9.stop();\n                        }\n                      }\n                    }, _callee9);\n                  }));\n\n                  return function (_x24) {\n                    return _ref10.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                trx_result = _context10.sent;\n                return _context10.abrupt(\"return\", trx_result);\n\n              case 7:\n                _context10.prev = 7;\n                _context10.t0 = _context10[\"catch\"](0);\n                console.log(_context10.t0);\n                return _context10.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'message.xoa.error'\n                });\n\n              case 11:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 7]]);\n      }));\n\n      return function (_x21, _x22, _x23) {\n        return _ref9.apply(this, arguments);\n      };\n    }()),\n    sendMessage: authenticated( /*#__PURE__*/function () {\n      var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(parent, args, context) {\n        var userId, trx_result;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                userId = context.currentUser.id;\n                _context12.next = 4;\n                return db.transaction( /*#__PURE__*/function () {\n                  var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(trx) {\n                    var _message, list_phuong_thuc, update_mess_status, list_nguoi_dung_id, update_mess_mapping, list_email, convertTitle, folder, listFileDinhKem, attachments, count, list_nhom_quyen_id, list_nguoi_dung, _list_nguoi_dung_id, list_message_nguoiDung, _list_email, _convertTitle, _folder, _listFileDinhKem, _attachments;\n\n                    return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n                      while (1) {\n                        switch (_context11.prev = _context11.next) {\n                          case 0:\n                            _context11.next = 2;\n                            return trx.table('Message').where('Id', args.Id).first();\n\n                          case 2:\n                            _message = _context11.sent;\n\n                            if (_message) {\n                              _context11.next = 5;\n                              break;\n                            }\n\n                            throw new Error('message.send_message.error_message_not_found');\n\n                          case 5:\n                            list_phuong_thuc = _message.PhuongThucGui.split(','); //Cập nhật trạng thái message\n\n                            _context11.next = 8;\n                            return trx.table('Message').where('Id', args.Id).update({\n                              Status: 1,\n                              SendDate: new Date()\n                            });\n\n                          case 8:\n                            update_mess_status = _context11.sent;\n\n                            if (!(_message.NhomNguoiNhan == 1)) {\n                              _context11.next = 38;\n                              break;\n                            }\n\n                            _context11.next = 12;\n                            return trx.table('Message_NguoiDung').where('Message_Id', args.Id).select('NguoiDung_Id').pluck('NguoiDung_Id');\n\n                          case 12:\n                            list_nguoi_dung_id = _context11.sent;\n\n                            if (!(list_nguoi_dung_id.length === 0)) {\n                              _context11.next = 15;\n                              break;\n                            }\n\n                            throw new Error('message.send_message.error_user_not_found');\n\n                          case 15:\n                            if (!list_phuong_thuc.includes('GTHT')) {\n                              _context11.next = 20;\n                              break;\n                            }\n\n                            _context11.next = 18;\n                            return trx.table('Message_NguoiDung').where('Message_Id', args.Id).update({\n                              Status: 1\n                            });\n\n                          case 18:\n                            update_mess_mapping = _context11.sent;\n                            //Thông báo cho client\n                            pubsub.publish(MESSAGE_COUNT, {\n                              RefreshMessageCount: true\n                            });\n\n                          case 20:\n                            if (!list_phuong_thuc.includes('GE')) {\n                              _context11.next = 36;\n                              break;\n                            }\n\n                            _context11.next = 23;\n                            return trx.table('NguoiDung').whereIn('Id', list_nguoi_dung_id).select('Email').pluck('Email');\n\n                          case 23:\n                            list_email = _context11.sent;\n                            convertTitle = _message.TieuDe + ' - Người gửi: ' + context.currentUser.HoTen; //Lấy list file đính kèm\n\n                            _context11.next = 27;\n                            return trx.table('ThuMuc').where('Id', 1).andWhere('Type', 0).first();\n\n                          case 27:\n                            folder = _context11.sent;\n\n                            if (folder) {\n                              _context11.next = 30;\n                              break;\n                            }\n\n                            throw new Error('message.send_message.error_folder_not_found');\n\n                          case 30:\n                            _context11.next = 32;\n                            return trx.table('FileDinhKemMesssage').where('Message_Id', args.Id).select('TenTaiLieu').pluck('TenTaiLieu');\n\n                          case 32:\n                            listFileDinhKem = _context11.sent;\n                            //convert attachments\n                            attachments = [];\n                            listFileDinhKem.forEach(function (item) {\n                              var attachment = {\n                                filename: item,\n                                content: \"\".concat(folder.TenThuMuc, \"/\").concat(item)\n                              };\n                              attachments.push(attachment);\n                            });\n                            sendEmail.sendEmail(list_email.join(','), convertTitle, _message.NoiDung, attachments, 'stream')[\"catch\"](console.error);\n\n                          case 36:\n                            _context11.next = 75;\n                            break;\n\n                          case 38:\n                            if (!(_message.NhomNguoiNhan == 2)) {\n                              _context11.next = 75;\n                              break;\n                            }\n\n                            _context11.next = 41;\n                            return trx.table('Message_NhomQuyen').where('Message_Id', args.Id).count('Id');\n\n                          case 41:\n                            count = _context11.sent;\n\n                            if (!(Number.parseInt(count[0].count) === 0)) {\n                              _context11.next = 44;\n                              break;\n                            }\n\n                            throw new Error('message.send_message.error_permission_not_found');\n\n                          case 44:\n                            _context11.next = 46;\n                            return trx.table('Message_NhomQuyen').where('Message_Id', args.Id).select('NhomQuyen_Id').pluck('NhomQuyen_Id');\n\n                          case 46:\n                            list_nhom_quyen_id = _context11.sent;\n                            _context11.next = 49;\n                            return trx.table('PhanQuyen').whereIn('NhomQuyen_Id', list_nhom_quyen_id).select('NguoiDung_Id').distinct();\n\n                          case 49:\n                            list_nguoi_dung = _context11.sent;\n\n                            if (!(list_nguoi_dung.length == 0)) {\n                              _context11.next = 52;\n                              break;\n                            }\n\n                            throw new Error('message.send_message.error_user_not_found');\n\n                          case 52:\n                            if (!list_phuong_thuc.includes('GTHT')) {\n                              _context11.next = 59;\n                              break;\n                            }\n\n                            //Thêm người dùng vào bảng mapping\n                            _list_nguoi_dung_id = list_nguoi_dung.map(function (x) {\n                              return x.NguoiDung_Id;\n                            });\n                            list_message_nguoiDung = [];\n\n                            _list_nguoi_dung_id.forEach(function (item) {\n                              var message_nguoiDung = {\n                                Message_Id: args.Id,\n                                NguoiDung_Id: item,\n                                Status: 1\n                              };\n                              list_message_nguoiDung.push(message_nguoiDung);\n                            });\n\n                            _context11.next = 58;\n                            return trx.table('Message_NguoiDung').insert(list_message_nguoiDung);\n\n                          case 58:\n                            //Thông báo cho client\n                            pubsub.publish(MESSAGE_COUNT, {\n                              RefreshMessageCount: true\n                            });\n\n                          case 59:\n                            if (!list_phuong_thuc.includes('GE')) {\n                              _context11.next = 75;\n                              break;\n                            }\n\n                            _context11.next = 62;\n                            return trx.table('NguoiDung').whereIn('Id', [1]).select('Email').pluck('Email');\n\n                          case 62:\n                            _list_email = _context11.sent;\n                            _convertTitle = _message.TieuDe + ' - Người gửi: ' + context.currentUser.HoTen; //Lấy list file đính kèm\n\n                            _context11.next = 66;\n                            return trx.table('ThuMuc').where('Id', 1).andWhere('Type', 0).first();\n\n                          case 66:\n                            _folder = _context11.sent;\n\n                            if (_folder) {\n                              _context11.next = 69;\n                              break;\n                            }\n\n                            throw new Error('message.send_message.error_folder_not_found');\n\n                          case 69:\n                            _context11.next = 71;\n                            return trx.table('FileDinhKemMesssage').where('Message_Id', args.Id).select('TenTaiLieu').pluck('TenTaiLieu');\n\n                          case 71:\n                            _listFileDinhKem = _context11.sent;\n                            //convert attachments\n                            _attachments = [];\n\n                            _listFileDinhKem.forEach(function (item) {\n                              var attachment = {\n                                filename: item,\n                                content: \"\".concat(_folder.TenThuMuc, \"/\").concat(item)\n                              };\n\n                              _attachments.push(attachment);\n                            });\n\n                            sendEmail.sendEmail(_list_email.join(','), _convertTitle, _message.NoiDung, _attachments, 'stream')[\"catch\"](console.error);\n\n                          case 75:\n                            return _context11.abrupt(\"return\", {\n                              messageCode: 200,\n                              message: 'message.send_message.success'\n                            });\n\n                          case 76:\n                          case \"end\":\n                            return _context11.stop();\n                        }\n                      }\n                    }, _callee11);\n                  }));\n\n                  return function (_x28) {\n                    return _ref12.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                trx_result = _context12.sent;\n                return _context12.abrupt(\"return\", trx_result);\n\n              case 8:\n                _context12.prev = 8;\n                _context12.t0 = _context12[\"catch\"](0);\n                return _context12.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: _context12.t0.toString()\n                });\n\n              case 11:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[0, 8]]);\n      }));\n\n      return function (_x25, _x26, _x27) {\n        return _ref11.apply(this, arguments);\n      };\n    }()),\n    deleteFileDinhKemMessage: authenticated( /*#__PURE__*/function () {\n      var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(parent, args, context) {\n        var fileDinhKem, _message, trx_result;\n\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                _context14.next = 3;\n                return db.table('FileDinhKemMesssage').where('Id', args.Id).first();\n\n              case 3:\n                fileDinhKem = _context14.sent;\n\n                if (fileDinhKem) {\n                  _context14.next = 6;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'message.delete_file_dinh_kem.error'\n                });\n\n              case 6:\n                _context14.next = 8;\n                return db.table('Message').where('Id', fileDinhKem.Message_Id).first();\n\n              case 8:\n                _message = _context14.sent;\n\n                if (!(_message.Status == 1)) {\n                  _context14.next = 11;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'message.delete_file_dinh_kem.error_tin_nhan_da_gui'\n                });\n\n              case 11:\n                _context14.next = 13;\n                return db.transaction( /*#__PURE__*/function () {\n                  var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(trx) {\n                    var del, folder;\n                    return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                      while (1) {\n                        switch (_context13.prev = _context13.next) {\n                          case 0:\n                            _context13.next = 2;\n                            return trx.table('FileDinhKemMesssage').where('Id', args.Id).first().del();\n\n                          case 2:\n                            del = _context13.sent;\n                            _context13.next = 5;\n                            return trx.table('ThuMuc').where('Id', fileDinhKem.ThuMuc_Id).first();\n\n                          case 5:\n                            folder = _context13.sent;\n                            deleteFile([folder.Path + '/' + fileDinhKem.TenTaiLieu]);\n                            return _context13.abrupt(\"return\", {\n                              messageCode: 200,\n                              message: 'message.delete_file_dinh_kem.success'\n                            });\n\n                          case 8:\n                          case \"end\":\n                            return _context13.stop();\n                        }\n                      }\n                    }, _callee13);\n                  }));\n\n                  return function (_x32) {\n                    return _ref14.apply(this, arguments);\n                  };\n                }());\n\n              case 13:\n                trx_result = _context14.sent;\n                return _context14.abrupt(\"return\", trx_result);\n\n              case 17:\n                _context14.prev = 17;\n                _context14.t0 = _context14[\"catch\"](0);\n                return _context14.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: _context14.t0.toString()\n                });\n\n              case 20:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, null, [[0, 17]]);\n      }));\n\n      return function (_x29, _x30, _x31) {\n        return _ref13.apply(this, arguments);\n      };\n    }()),\n    downloadFileMess: authenticated( /*#__PURE__*/function () {\n      var _ref15 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(parent, args, context) {\n        var fileDinhKem, folder, _downloadFile, base64, type;\n\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.prev = 0;\n                _context15.next = 3;\n                return db.table('FileDinhKemMesssage').where('Id', args.Id).first();\n\n              case 3:\n                fileDinhKem = _context15.sent;\n                _context15.next = 6;\n                return db.table('ThuMuc').where('Id', fileDinhKem.ThuMuc_Id).first();\n\n              case 6:\n                folder = _context15.sent;\n\n                if (fileDinhKem) {\n                  _context15.next = 9;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: 'message.downloadFile.error_file_not_found'\n                });\n\n              case 9:\n                _downloadFile = downloadFile(folder.Path + '/' + fileDinhKem.TenTaiLieu), base64 = _downloadFile.base64, type = _downloadFile.type;\n                return _context15.abrupt(\"return\", {\n                  base64: base64,\n                  type: type,\n                  messageCode: 200,\n                  message: 'message.downloadFile.success'\n                });\n\n              case 13:\n                _context15.prev = 13;\n                _context15.t0 = _context15[\"catch\"](0);\n                return _context15.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: _context15.t0.toString()\n                });\n\n              case 16:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, null, [[0, 13]]);\n      }));\n\n      return function (_x33, _x34, _x35) {\n        return _ref15.apply(this, arguments);\n      };\n    }()),\n    xemMessage: authenticated( /*#__PURE__*/function () {\n      var _ref16 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(parent, args, context) {\n        var userId, _updateMessage;\n\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.prev = 0;\n                userId = context.currentUser.id;\n                _context16.next = 4;\n                return db.table('Message_NguoiDung').where('Id', args.Id).update({\n                  DaXem: true\n                });\n\n              case 4:\n                _updateMessage = _context16.sent;\n                //Thông báo cho client\n                pubsub.publish(MESSAGE_COUNT, {\n                  RefreshMessageCount: true\n                });\n                return _context16.abrupt(\"return\", {\n                  messageCode: 200,\n                  message: 'message.xemMessage.success'\n                });\n\n              case 9:\n                _context16.prev = 9;\n                _context16.t0 = _context16[\"catch\"](0);\n                return _context16.abrupt(\"return\", {\n                  messageCode: 500,\n                  message: _context16.t0.toString()\n                });\n\n              case 12:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, null, [[0, 9]]);\n      }));\n\n      return function (_x36, _x37, _x38) {\n        return _ref16.apply(this, arguments);\n      };\n    }())\n  },\n  //SUBSCRIPTIONS\n  Subscription: {\n    RefreshMessageCount: {\n      // More on pubsub below\n      subscribe: withFilter(function () {\n        return pubsub.asyncIterator(MESSAGE_COUNT);\n      }, function (payload, variables) {\n        // Only push an update if the comment is on\n        // the correct repository for this operation\n        return true;\n      })\n    }\n  }\n};\nmodule.exports = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolveMessage.js"
      ],
      "names": [
        "db",
        "require",
        "authenticated",
        "sendEmail",
        "saveFile",
        "deleteFile",
        "downloadFile",
        "MESSAGE_COUNT",
        "PubSub",
        "withFilter",
        "pubsub",
        "resolvers",
        "Query",
        "getListMessage",
        "parent",
        "args",
        "context",
        "userId",
        "currentUser",
        "id",
        "FromCreatedDate",
        "GetListMessageInput",
        "ToCreatedDate",
        "FromSendDate",
        "ToSendDate",
        "ListStatus",
        "select",
        "table",
        "orderBy",
        "where",
        "builder",
        "whereRaw",
        "length",
        "whereIn",
        "result",
        "forEach",
        "item",
        "StatusName",
        "Status",
        "listMessage",
        "messageCode",
        "message",
        "toString",
        "getMasterDataMessageDialog",
        "messageObject",
        "Id",
        "TieuDe",
        "NoiDung",
        "NhomNguoiNhan",
        "PhuongThucGui",
        "GuiTatCa",
        "SendDate",
        "CreatedDate",
        "fileUploadMes",
        "list_don_vi",
        "list_nguoi_dung",
        "list_data_send_mess",
        "data_send_mess",
        "Name",
        "TenDonVi",
        "ParentId",
        "Level",
        "NguoiDung_Id",
        "SoNguoiThuocNhomQuyen",
        "Selectable",
        "push",
        "maxId",
        "Math",
        "max",
        "map",
        "x",
        "HoTen",
        "DonVi_Id",
        "list_nhom_quyen",
        "list_phan_quyen",
        "list_data_permission_group",
        "count_user",
        "filter",
        "NhomQuyen_Id",
        "selectable",
        "TenNhomQuyen",
        "listKeys",
        "listPartial",
        "first",
        "_listNguoiDungId",
        "listNguoiDungId",
        "includes",
        "listNode",
        "countChild",
        "count",
        "listChildId",
        "exists",
        "child",
        "list_nhom_quyen_id",
        "listFileDinhKem",
        "index",
        "TenTaiLieu",
        "lastIndexOf",
        "fileName",
        "substring",
        "fileType",
        "indexSpecial",
        "fileDinhKem",
        "listDataSendMess",
        "listDataPermissionGroup",
        "getCountMessageByUserId",
        "innerJoin",
        "Number",
        "parseInt",
        "getListMessageByUserId",
        "Keyword",
        "from",
        "trim",
        "orWhere",
        "_listMessage",
        "Message_Id",
        "listFile",
        "files",
        "file",
        "listCreatedBy",
        "CreatedBy",
        "listNguoiDung",
        "newItem",
        "CreatedName",
        "find",
        "DaXem",
        "ListFile",
        "Mutation",
        "createMessage",
        "transaction",
        "trx",
        "messageInput",
        "MessageInput",
        "returning",
        "insert",
        "listMessage_NguoiDung",
        "ListSelectedId",
        "message_nguoiDung",
        "createMessage_NguoiDung",
        "listMessage_NhomQuyen",
        "message_nhomQuyen",
        "createMessage_NhomQuyen",
        "thuMuc",
        "thuMucId",
        "filename",
        "mimetype",
        "createReadStream",
        "ThuMuc_Id",
        "TenThuMuc",
        "trx_result",
        "console",
        "log",
        "updateMessage",
        "update",
        "del",
        "deleteMessage",
        "_message",
        "Error",
        "list_message_nguoiDung",
        "list_message_nhomQuyen",
        "folder",
        "then",
        "listUrl",
        "url",
        "Path",
        "list_file_dinh_kem",
        "del_file",
        "sendMessage",
        "list_phuong_thuc",
        "split",
        "Date",
        "update_mess_status",
        "pluck",
        "list_nguoi_dung_id",
        "update_mess_mapping",
        "publish",
        "RefreshMessageCount",
        "list_email",
        "convertTitle",
        "andWhere",
        "attachments",
        "attachment",
        "content",
        "join",
        "error",
        "distinct",
        "deleteFileDinhKemMessage",
        "downloadFileMess",
        "base64",
        "type",
        "xemMessage",
        "_updateMessage",
        "Subscription",
        "subscribe",
        "asyncIterator",
        "payload",
        "variables",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,0BAAD,CAAlB;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,4CAAD,CAA7B;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,8BAAD,CAAzB;;AACA,eAA+CA,OAAO,CAAC,+BAAD,CAAtD;AAAA,IAAQG,QAAR,YAAQA,QAAR;AAAA,IAAkBC,UAAlB,YAAkBA,UAAlB;AAAA,IAA8BC,YAA9B,YAA8BA,YAA9B;;AACA,gBAA0BL,OAAO,CAAC,0CAAD,CAAjC;AAAA,IAAQM,aAAR,aAAQA,aAAR;;AACA,gBAA+BN,OAAO,CAAC,uBAAD,CAAtC;AAAA,IAAQO,MAAR,aAAQA,MAAR;AAAA,IAAgBC,UAAhB,aAAgBA,UAAhB;;AACA,IAAMC,MAAM,GAAG,IAAIF,MAAJ,EAAf;AAEA,IAAMG,SAAS,GAAG;AAChB;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,cAAc,EAAEX,aAAa;AAAA,+FAAC,iBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGtBC,gBAAAA,MAHsB,GAGbD,OAAO,CAACE,WAAR,CAAoBC,EAHP;AAItBC,gBAAAA,eAJsB,GAIJL,IAAI,CAACM,mBAAL,CAAyBD,eAJrB;AAKtBE,gBAAAA,aALsB,GAKNP,IAAI,CAACM,mBAAL,CAAyBC,aALnB;AAMtBC,gBAAAA,YANsB,GAMPR,IAAI,CAACM,mBAAL,CAAyBE,YANlB;AAOtBC,gBAAAA,UAPsB,GAOTT,IAAI,CAACM,mBAAL,CAAyBG,UAPhB;AAQtBC,gBAAAA,UARsB,GAQTV,IAAI,CAACM,mBAAL,CAAyBI,UARhB;AAAA;AAAA,uBAUPzB,EAAE,CAAC0B,MAAH,GAAYC,KAAZ,CAAkB,SAAlB,EAChBC,OADgB,CACR,aADQ,EACO,MADP,EAEhBC,KAFgB,CAEV,UAAAC,OAAO,EAAI;AAChBA,kBAAAA,OAAO,CAACD,KAAR,CAAc,WAAd,EAA2BZ,MAA3B;AAEA,sBAAIG,eAAJ,EACEU,OAAO,CAACC,QAAR,CAAiB,qBAAjB,EAAwC,CAAC,aAAD,EAAgBX,eAAhB,CAAxC;AAEF,sBAAIE,aAAJ,EACEQ,OAAO,CAACC,QAAR,CAAiB,qBAAjB,EAAwC,CAAC,aAAD,EAAgBT,aAAhB,CAAxC;AAEF,sBAAIC,YAAJ,EACEO,OAAO,CAACC,QAAR,CAAiB,qBAAjB,EAAwC,CAAC,UAAD,EAAaR,YAAb,CAAxC;AAEF,sBAAIC,UAAJ,EACEM,OAAO,CAACC,QAAR,CAAiB,qBAAjB,EAAwC,CAAC,UAAD,EAAaP,UAAb,CAAxC;AAEF,sBAAIC,UAAU,CAACO,MAAX,GAAoB,CAAxB,EACEF,OAAO,CAACG,OAAR,CAAgB,QAAhB,EAA0BR,UAA1B;AACH,iBAnBgB,CAVO;;AAAA;AAUtBS,gBAAAA,MAVsB;AA+B1BA,gBAAAA,MAAM,CAACC,OAAP,CAAe,UAAAC,IAAI,EAAI;AACrBA,kBAAAA,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACE,MAAL,IAAe,CAAf,GAAmB,UAAnB,GAAgC,QAAlD;AACD,iBAFD;AA/B0B,iDAmCnB;AACLC,kBAAAA,WAAW,EAAEL,MADR;AAELM,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAE;AAHJ,iBAnCmB;;AAAA;AAAA;AAAA;AAAA,iDA2CnB;AACLF,kBAAAA,WAAW,EAAE,EADR;AAELC,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAE,YAAEC,QAAF;AAHJ,iBA3CmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QADxB;AAmDLC,IAAAA,0BAA0B,EAAEzC,aAAa;AAAA,gGAAC,kBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGlC4B,gBAAAA,aAHkC,GAGlB;AAClBC,kBAAAA,EAAE,EAAE,CADc;AAElBC,kBAAAA,MAAM,EAAE,EAFU;AAGlBC,kBAAAA,OAAO,EAAE,EAHS;AAIlBC,kBAAAA,aAAa,EAAE,CAJG;AAKlBC,kBAAAA,aAAa,EAAE,EALG;AAMlBC,kBAAAA,QAAQ,EAAE,IANQ;AAOlBC,kBAAAA,QAAQ,EAAE,IAPQ;AAQlBb,kBAAAA,MAAM,EAAE,IARU;AASlBc,kBAAAA,WAAW,EAAE,IATK;AAUlBf,kBAAAA,UAAU,EAAE;AAVM,iBAHkB,EAgBtC;;AACIgB,gBAAAA,aAjBkC,GAiBlB,EAjBkB,EAmBtC;;AAnBsC;AAAA,uBAoBdrD,EAAE,CAAC2B,KAAH,CAAS,OAAT,EACrBM,OADqB,CACb,OADa,EACJ,CAAC,CAAD,EAAI,CAAJ,CADI,EAErBP,MAFqB,CAEd,IAFc,EAER,UAFQ,EAEI,UAFJ,EAEgBE,OAFhB,CAEwB,IAFxB,CApBc;;AAAA;AAoBlC0B,gBAAAA,WApBkC;AAAA;AAAA,uBAyBVtD,EAAE,CAAC2B,KAAH,CAAS,WAAT,EAAsBD,MAAtB,CAA6B,IAA7B,EAAmC,OAAnC,EAA4C,UAA5C,CAzBU;;AAAA;AAyBlC6B,gBAAAA,eAzBkC;AA2BlCC,gBAAAA,mBA3BkC,GA2BZ,EA3BY;AA4BtCF,gBAAAA,WAAW,CAACnB,OAAZ,CAAoB,UAAAC,IAAI,EAAI;AAC1B,sBAAIqB,cAAc,GAAG;AACnBZ,oBAAAA,EAAE,EAAET,IAAI,CAACS,EADU;AAEnBa,oBAAAA,IAAI,EAAEtB,IAAI,CAACuB,QAFQ;AAGnBC,oBAAAA,QAAQ,EAAE,IAHS;AAInBC,oBAAAA,KAAK,EAAE,CAJY;AAKnBC,oBAAAA,YAAY,EAAE,IALK;AAMnBC,oBAAAA,qBAAqB,EAAE,CANJ;AAOnBC,oBAAAA,UAAU,EAAE;AAPO,mBAArB;AASAR,kBAAAA,mBAAmB,CAACS,IAApB,CAAyBR,cAAzB;AACD,iBAXD;AAaIS,gBAAAA,KAzCkC,GAyC1BC,IAAI,CAACC,GAAL,OAAAD,IAAI,sCAAQX,mBAAmB,CAACa,GAApB,CAAwB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACzB,EAAN;AAAA,iBAAzB,CAAR,EAzCsB;AA0CtCU,gBAAAA,eAAe,CAACpB,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC9B,sBAAIqB,cAAc,GAAG;AACnBZ,oBAAAA,EAAE,EAAE,EAAEqB,KADa;AAEnBR,oBAAAA,IAAI,EAAEtB,IAAI,CAACmC,KAFQ;AAGnBX,oBAAAA,QAAQ,EAAExB,IAAI,CAACoC,QAHI;AAInBX,oBAAAA,KAAK,EAAE,CAJY;AAKnBC,oBAAAA,YAAY,EAAE1B,IAAI,CAACS,EALA;AAMnBkB,oBAAAA,qBAAqB,EAAE,CANJ;AAOnBC,oBAAAA,UAAU,EAAE;AAPO,mBAArB;AASAR,kBAAAA,mBAAmB,CAACS,IAApB,CAAyBR,cAAzB;AACD,iBAXD,EA1CsC,CAuDtC;;AAvDsC;AAAA,uBAwDVzD,EAAE,CAAC2B,KAAH,CAAS,WAAT,EAAsBD,MAAtB,CAA6B,IAA7B,EAAmC,cAAnC,CAxDU;;AAAA;AAwDlC+C,gBAAAA,eAxDkC;AAAA;AAAA,uBAyDVzE,EAAE,CAAC2B,KAAH,CAAS,WAAT,EAAsBD,MAAtB,CAA6B,cAA7B,EAA6C,cAA7C,CAzDU;;AAAA;AAyDlCgD,gBAAAA,eAzDkC;AA2DlCC,gBAAAA,0BA3DkC,GA2DL,EA3DK;AA4DtCF,gBAAAA,eAAe,CAACtC,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC9B;AACA,sBAAIwC,UAAU,GAAGF,eAAe,CAACG,MAAhB,CAAuB,UAAAP,CAAC;AAAA,2BAAIA,CAAC,CAACQ,YAAF,IAAkB1C,IAAI,CAACS,EAA3B;AAAA,mBAAxB,EAAuDb,MAAxE;AACA,sBAAI+C,UAAU,GAAG,IAAjB,CAH8B,CAGP;;AAEvB,sBAAItB,cAAc,GAAG;AACnBZ,oBAAAA,EAAE,EAAET,IAAI,CAACS,EADU;AAEnBa,oBAAAA,IAAI,EAAEtB,IAAI,CAAC4C,YAFQ;AAGnBpB,oBAAAA,QAAQ,EAAE,IAHS;AAInBC,oBAAAA,KAAK,EAAE,CAJY;AAKnBC,oBAAAA,YAAY,EAAE,IALK;AAMnBC,oBAAAA,qBAAqB,EAAEa,UANJ;AAOnBZ,oBAAAA,UAAU,EAAEe;AAPO,mBAArB;AASAJ,kBAAAA,0BAA0B,CAACV,IAA3B,CAAgCR,cAAhC;AACD,iBAfD,EA5DsC,CA6EtC;;AACIwB,gBAAAA,QA9EkC,GA8EvB,EA9EuB;AA+ElCC,gBAAAA,WA/EkC,GA+EpB,EA/EoB;;AAAA,qBAgFlCnE,IAAI,CAAC8B,EAhF6B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAiFhB7C,EAAE,CAAC2B,KAAH,CAAS,SAAT,EAAoBE,KAApB,CAA0B,IAA1B,EAAgCd,IAAI,CAAC8B,EAArC,EAAyCsC,KAAzC,EAjFgB;;AAAA;AAiFhC1C,gBAAAA,OAjFgC;AAmFpCG,gBAAAA,aAAa,CAACC,EAAd,GAAmBJ,OAAO,CAACI,EAA3B;AACAD,gBAAAA,aAAa,CAACE,MAAd,GAAuBL,OAAO,CAACK,MAA/B;AACAF,gBAAAA,aAAa,CAACG,OAAd,GAAwBN,OAAO,CAACM,OAAhC;AACAH,gBAAAA,aAAa,CAACI,aAAd,GAA8BP,OAAO,CAACO,aAAtC;AACAJ,gBAAAA,aAAa,CAACK,aAAd,GAA8BR,OAAO,CAACQ,aAAtC;AACAL,gBAAAA,aAAa,CAACM,QAAd,GAAyBT,OAAO,CAACS,QAAjC;AACAN,gBAAAA,aAAa,CAACN,MAAd,GAAuBG,OAAO,CAACH,MAA/B;AACAM,gBAAAA,aAAa,CAACP,UAAd,GAA2BI,OAAO,CAACH,MAAR,IAAkB,CAAlB,GAAsB,UAAtB,GAAmC,QAA9D,CA1FoC,CA4FpC;;AA5FoC,sBA6FhCM,aAAa,CAACI,aAAd,IAA+B,CA7FC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA+FLhD,EAAE,CAAC2B,KAAH,CAAS,mBAAT,EAC1BE,KAD0B,CACpB,YADoB,EACNY,OAAO,CAACI,EADF,EAE1BnB,MAF0B,CAEnB,cAFmB,CA/FK;;AAAA;AA+F9B0D,gBAAAA,gBA/F8B;AAkG9BC,gBAAAA,eAlG8B,GAkGZD,gBAlGY,aAkGZA,gBAlGY,uBAkGZA,gBAAgB,CAAEf,GAAlB,CAAsB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACR,YAAN;AAAA,iBAAvB,CAlGY;AAmGlCmB,gBAAAA,QAAQ,GAAGzB,mBAAmB,CAACqB,MAApB,CAA2B,UAAAP,CAAC;AAAA,yBAAIe,eAAe,CACvDC,QADwC,CAC/BhB,CAAC,CAACR,YAD6B,CAAJ;AAAA,iBAA5B,EACkBO,GADlB,CACsB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACzB,EAAF,CAAKH,QAAL,EAAJ;AAAA,iBADvB,CAAX;AAGI6C,gBAAAA,QAtG8B,GAsGnB/B,mBAAmB,CAACqB,MAApB,CAA2B,UAAAP,CAAC;AAAA,yBAAIA,CAAC,CAACT,KAAF,IAAW,CAAf;AAAA,iBAA5B,CAtGmB;AAuGlC0B,gBAAAA,QAAQ,CAACpD,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACvB,sBAAIoD,UAAU,GAAGhC,mBAAmB,CAACqB,MAApB,CAA2B,UAAAP,CAAC;AAAA,2BAAIA,CAAC,CAACV,QAAF,IAAcxB,IAAI,CAACS,EAAvB;AAAA,mBAA5B,EAAuDb,MAAxE;AACA,sBAAIyD,KAAK,GAAGjC,mBAAmB,CAACqB,MAApB,CAA2B,UAAAP,CAAC;AAAA,2BAAIA,CAAC,CAACV,QAAF,IAAcxB,IAAI,CAACS,EAAvB;AAAA,mBAA5B,EACTgC,MADS,CACF,UAAAP,CAAC;AAAA,2BAAIW,QAAQ,CAACK,QAAT,CAAkBhB,CAAC,CAACzB,EAAF,CAAKH,QAAL,EAAlB,CAAJ;AAAA,mBADC,EACuCV,MADnD,CAFuB,CAKvB;;AACA,sBAAIwD,UAAU,IAAIC,KAAd,IAAuBD,UAAU,IAAI,CAAzC,EAA4C;AAC1CP,oBAAAA,QAAQ,CAAChB,IAAT,CAAc7B,IAAI,CAACS,EAAL,CAAQH,QAAR,EAAd;AACD,mBAFD,CAGA;AAHA,uBAIK,IAAI+C,KAAK,GAAG,CAAZ,EAAe;AAClBP,oBAAAA,WAAW,CAACjB,IAAZ,CAAiB7B,IAAI,CAACS,EAAtB;AACD,mBAFI,CAGL;AAHK,uBAIA,IAAI4C,KAAK,IAAI,CAAb,EAAgB;AACnB,wBAAIC,WAAW,GAAGlC,mBAAmB,CAACqB,MAApB,CAA2B,UAAAP,CAAC;AAAA,6BAAIA,CAAC,CAACV,QAAF,IAAcxB,IAAI,CAACS,EAAvB;AAAA,qBAA5B,EAAuDwB,GAAvD,CAA2D,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACzB,EAAN;AAAA,qBAA5D,CAAlB;AACA,wBAAI8C,MAAM,GAAG,KAAb;AACAD,oBAAAA,WAAW,CAACvD,OAAZ,CAAoB,UAAAyD,KAAK,EAAI;AAC3B,0BAAIV,WAAW,CAACI,QAAZ,CAAqBM,KAArB,CAAJ,EAAiCD,MAAM,GAAG,IAAT;AAClC,qBAFD,EAHmB,CAOnB;;AACA,wBAAIA,MAAJ,EAAYT,WAAW,CAACjB,IAAZ,CAAiB7B,IAAI,CAACS,EAAtB;AACb;AACF,iBAxBD;AAvGkC;AAAA;;AAAA;AAAA;AAAA,uBAmIH7C,EAAE,CAAC2B,KAAH,CAAS,mBAAT,EAC5BE,KAD4B,CACtB,YADsB,EACRY,OAAO,CAACI,EADA,EACInB,MADJ,CACW,cADX,CAnIG;;AAAA;AAmI9BmE,gBAAAA,kBAnI8B;AAqIlCZ,gBAAAA,QAAQ,GAAGY,kBAAkB,CAACxB,GAAnB,CAAuB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACQ,YAAF,CAAepC,QAAf,EAAJ;AAAA,iBAAxB,CAAX;;AArIkC;AAAA;AAAA,uBAwIR1C,EAAE,CAAC2B,KAAH,CAAS,qBAAT,EACzBE,KADyB,CACnB,YADmB,EACLd,IAAI,CAAC8B,EADA,EAEzBnB,MAFyB,CAElB,IAFkB,EAEZ,YAFY,CAxIQ;;AAAA;AAwIhCoE,gBAAAA,eAxIgC;AA4IpCA,gBAAAA,eAAe,CAAC3D,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC9B,sBAAI2D,KAAK,GAAG3D,IAAI,CAAC4D,UAAL,CAAgBC,WAAhB,CAA4B,GAA5B,CAAZ;AACA,sBAAIC,QAAQ,GAAG9D,IAAI,CAAC4D,UAAL,CAAgBG,SAAhB,CAA0B,CAA1B,EAA6BJ,KAA7B,CAAf;AACA,sBAAIK,QAAQ,GAAGhE,IAAI,CAAC4D,UAAL,CAAgBG,SAAhB,CAA0BJ,KAAK,GAAG,CAAlC,CAAf;AACA,sBAAIM,YAAY,GAAGH,QAAQ,CAACD,WAAT,CAAqB,GAArB,CAAnB;AACAC,kBAAAA,QAAQ,GAAGA,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsBE,YAAtB,IAAsC,GAAtC,GAA4CD,QAAvD;AAEA,sBAAIE,WAAW,GAAG;AAChBzD,oBAAAA,EAAE,EAAET,IAAI,CAACS,EADO;AAEhBmD,oBAAAA,UAAU,EAAEE;AAFI,mBAAlB;AAIA7C,kBAAAA,aAAa,CAACY,IAAd,CAAmBqC,WAAnB;AACD,iBAZD;;AA5IoC;AAAA,kDA2J/B;AACL1D,kBAAAA,aAAa,EAAEA,aADV;AAEL2D,kBAAAA,gBAAgB,EAAE/C,mBAFb;AAGLgD,kBAAAA,uBAAuB,EAAE7B,0BAHpB;AAILM,kBAAAA,QAAQ,EAAEA,QAJL;AAKLC,kBAAAA,WAAW,EAAEA,WALR;AAML7B,kBAAAA,aAAa,EAAEA,aANV;AAOLb,kBAAAA,WAAW,EAAE,GAPR;AAQLC,kBAAAA,OAAO,EAAE;AARJ,iBA3J+B;;AAAA;AAAA;AAAA;AAAA,kDAwK/B;AACLF,kBAAAA,WAAW,EAAE,EADR;AAELC,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAE,aAAEC,QAAF;AAHJ,iBAxK+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QAnDpC;AAkOL+D,IAAAA,uBAAuB,EAAEvG,aAAa;AAAA,gGAAC,kBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE/BC,gBAAAA,MAF+B,GAEtBD,OAAO,CAACE,WAAR,CAAoBC,EAFE;AAAA;AAAA,uBAGjBnB,EAAE,CAAC2B,KAAH,CAAS,mBAAT,EACf+E,SADe,CACL,SADK,EACM,8BADN,EACsC,GADtC,EAC2C,YAD3C,EAEf7E,KAFe,CAET,UAAAC,OAAO,EAAI;AAChBA,kBAAAA,OAAO,CAACD,KAAR,CAAc,gCAAd,EAAgDZ,MAAhD;AAEAa,kBAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyC,KAAzC;AAEAC,kBAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0C,CAA1C;AAEAC,kBAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8B,CAA9B;AACD,iBAVe,EAWf4D,KAXe,CAWT,sBAXS,CAHiB;;AAAA;AAG/BA,gBAAAA,KAH+B;AAAA,kDAgB5B;AACLA,kBAAAA,KAAK,EAAEkB,MAAM,CAACC,QAAP,CAAgBnB,KAAK,CAAC,CAAD,CAAL,CAASA,KAAzB,CADF;AAELjD,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAE;AAHJ,iBAhB4B;;AAAA;AAAA;AAAA;AAAA,kDAuB5B;AACLD,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE,aAAEC,QAAF;AAFJ,iBAvB4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QAlOjC;AA+PLmE,IAAAA,sBAAsB,EAAE3G,aAAa;AAAA,gGAAC,kBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE9B8F,gBAAAA,OAF8B,GAEpB/F,IAAI,CAAC+F,OAFe;AAG9B7F,gBAAAA,MAH8B,GAGrBD,OAAO,CAACE,WAAR,CAAoBC,EAHC;AAAA;AAAA,uBAITnB,EAAE,CACxB0B,MADsB,CAErB,sBAFqB,EAGrB,0BAHqB,EAIrB,gBAJqB,EAKrB,iBALqB,EAMrB,kBANqB,EAOrB,mBAPqB,EAQrB,yBARqB,EAUtBE,OAVsB,CAUd,kBAVc,EAUM,MAVN,EAWtBmF,IAXsB,CAWjB,mBAXiB,EAYtBL,SAZsB,CAYZ,SAZY,EAYD,8BAZC,EAY+B,YAZ/B,EAatB7E,KAbsB,CAahB,UAAAC,OAAO,EAAI;AAChBA,kBAAAA,OAAO,CAACD,KAAR,CAAc,gCAAd,EAAgDZ,MAAhD;AAEAa,kBAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0C,CAA1C;AAEAC,kBAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8B,CAA9B;;AAEA,sBAAIiF,OAAJ,EAAa;AACXhF,oBAAAA,OAAO,CACJD,KADH,CACS,QADT,EACmB,MADnB,aAC+BiF,OAAO,CAACE,IAAR,EAD/B,QAEGC,OAFH,CAEW,SAFX,EAEsB,MAFtB,aAEkCH,OAAO,CAACE,IAAR,EAFlC;AAGD;AACF,iBAzBsB,CAJS;;AAAA;AAI9BE,gBAAAA,YAJ8B;AAAA;AAAA,uBA+BblH,EAAE,CAAC2B,KAAH,CAAS,qBAAT,EAClBD,MADkB,CACX,IADW,EACL,YADK,EACS,YADT,EAElBO,OAFkB,CAEV,YAFU,EAEIiF,YAAY,CAAC7C,GAAb,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAC6C,UAAN;AAAA,iBAAlB,CAFJ,CA/Ba;;AAAA;AA+B9BC,gBAAAA,QA/B8B;;AAmClC,oBAAIA,QAAQ,CAACpF,MAAT,GAAkB,CAAtB,EAAyB;AACvBkF,kBAAAA,YAAY,CAAC/E,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAC3B,wBAAIiF,KAAK,GAAGD,QAAQ,CAACvC,MAAT,CAAgB,UAAAP,CAAC;AAAA,6BAAIA,CAAC,CAAC6C,UAAF,IAAgB/E,IAAI,CAAC+E,UAAzB;AAAA,qBAAjB,CAAZ;AACAE,oBAAAA,KAAK,CAAClF,OAAN,CAAc,UAAAmF,IAAI,EAAI;AACpB,0BAAIvB,KAAK,GAAGuB,IAAI,CAACtB,UAAL,CAAgBC,WAAhB,CAA4B,GAA5B,CAAZ;AACA,0BAAIC,QAAQ,GAAGoB,IAAI,CAACtB,UAAL,CAAgBG,SAAhB,CAA0B,CAA1B,EAA6BJ,KAA7B,CAAf;AACA,0BAAIK,QAAQ,GAAGkB,IAAI,CAACtB,UAAL,CAAgBG,SAAhB,CAA0BJ,KAAK,GAAG,CAAlC,CAAf;AACA,0BAAIM,YAAY,GAAGH,QAAQ,CAACD,WAAT,CAAqB,GAArB,CAAnB;AACAqB,sBAAAA,IAAI,CAACtB,UAAL,GAAkBE,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsBE,YAAtB,IAAsC,GAAtC,GAA4CD,QAA9D;AACD,qBAND;AAOAhE,oBAAAA,IAAI,CAACiB,aAAL,GAAqBgE,KAArB;AACD,mBAVD;AAWD,iBA/CiC,CAiDlC;;;AACIE,gBAAAA,aAlD8B,GAkDdL,YAAY,CAAC7C,GAAb,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACkD,SAAN;AAAA,iBAAlB,CAlDc;AAAA;AAAA,uBAmDRxH,EAAE,CAAC2B,KAAH,CAAS,WAAT,EACvBD,MADuB,CAChB,IADgB,EACV,OADU,EAEvBO,OAFuB,CAEf,IAFe,EAETsF,aAFS,CAnDQ;;AAAA;AAmD9BE,gBAAAA,aAnD8B;AAuD9BlF,gBAAAA,WAvD8B,GAuDhB,EAvDgB;;AAwDlC2E,gBAAAA,YAAY,CAAC/E,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAAA;;AAC3B,sBAAIsF,OAAO,GAAG;AACZ7E,oBAAAA,EAAE,EAAET,IAAI,CAACS,EADG;AAEZC,oBAAAA,MAAM,EAAEV,IAAI,CAACU,MAFD;AAGZC,oBAAAA,OAAO,EAAEX,IAAI,CAACW,OAHF;AAIZI,oBAAAA,QAAQ,EAAEf,IAAI,CAACe,QAJH;AAKZwE,oBAAAA,WAAW,yBAAEF,aAAa,CAACG,IAAd,CAAmB,UAAAtD,CAAC;AAAA,6BAAIA,CAAC,CAACzB,EAAF,IAAQT,IAAI,CAACoF,SAAjB;AAAA,qBAApB,CAAF,wDAAE,oBAAiDjD,KALlD;AAMZsD,oBAAAA,KAAK,EAAEzF,IAAI,CAACyF,KANA;AAOZC,oBAAAA,QAAQ,EAAE1F,IAAI,CAACiB,aAAL,GAAqBjB,IAAI,CAACiB,aAA1B,GAA0C;AAPxC,mBAAd;AASAd,kBAAAA,WAAW,CAAC0B,IAAZ,CAAiByD,OAAjB;AACD,iBAXD;;AAxDkC,kDAqE3B;AACLnF,kBAAAA,WAAW,EAAEA,WADR;AAELC,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAE;AAHJ,iBArE2B;;AAAA;AAAA;AAAA;AAAA,kDA4E3B;AACLD,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE,aAAEC,QAAF;AAFJ,iBA5E2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA;AA/PhC,GAFS;AAqVhB;AACAqF,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE9H,aAAa;AAAA,gGAAC,kBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGrBC,gBAAAA,MAHqB,GAGZD,OAAO,CAACE,WAAR,CAAoBC,EAHR;AAAA;AAAA,uBAIFnB,EAAE,CAACiI,WAAH;AAAA,4GAAe,kBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChCC,4BAAAA,YADgC,GACjBpH,IAAI,CAACqH,YADY,EAGpC;;AAHoC;AAAA,mCAIjBF,GAAG,CAACvG,KAAJ,CAAU,SAAV,EAChB0G,SADgB,CACN,CAAC,IAAD,CADM,EACEC,MADF,CACS;AACxBxF,8BAAAA,MAAM,EAAEqF,YAAY,CAACrF,MADG;AAExBC,8BAAAA,OAAO,EAAEoF,YAAY,CAACpF,OAFE;AAGxBC,8BAAAA,aAAa,EAAEmF,YAAY,CAACnF,aAHJ;AAIxBC,8BAAAA,aAAa,EAAEkF,YAAY,CAAClF,aAJJ;AAKxBC,8BAAAA,QAAQ,EAAEiF,YAAY,CAACjF,QALC;AAMxBZ,8BAAAA,MAAM,EAAE,CANgB;AAMb;AACXkF,8BAAAA,SAAS,EAAEvG;AAPa,6BADT,CAJiB;;AAAA;AAIhCiB,4BAAAA,MAJgC;AAehCiF,4BAAAA,UAfgC,GAenBjF,MAAM,CAAC,CAAD,CAAN,CAAUW,EAfS,EAiBpC;;AAjBoC,kCAkBhCsF,YAAY,CAACnF,aAAb,IAA8B,CAlBE;AAAA;AAAA;AAAA;;AAmBlC;AACIuF,4BAAAA,qBApB8B,GAoBN,EApBM;AAqBlC,qDAAAJ,YAAY,CAACK,cAAb,gFAA6BrG,OAA7B,CAAqC,UAAAC,IAAI,EAAI;AAC3C,kCAAIqG,iBAAiB,GAAG;AACtBtB,gCAAAA,UAAU,EAAEA,UADU;AAEtBrD,gCAAAA,YAAY,EAAE1B,IAFQ;AAGtBE,gCAAAA,MAAM,EAAE;AAHc,+BAAxB;AAKAiG,8BAAAA,qBAAqB,CAACtE,IAAtB,CAA2BwE,iBAA3B;AACD,6BAPD;;AArBkC,kCA8B9BF,qBAAqB,CAACvG,MAAtB,GAA+B,CA9BD;AAAA;AAAA;AAAA;;AAAA;AAAA,mCA+BIkG,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACjC2G,MADiC,CAC1BC,qBAD0B,CA/BJ;;AAAA;AA+B5BG,4BAAAA,uBA/B4B;;AAAA;AAAA;AAAA;;AAAA;AAAA,kCAoC3BP,YAAY,CAACnF,aAAb,IAA8B,CApCH;AAAA;AAAA;AAAA;;AAqClC;AACI2F,4BAAAA,qBAtC8B,GAsCN,EAtCM;AAuClC,sDAAAR,YAAY,CAACK,cAAb,kFAA6BrG,OAA7B,CAAqC,UAAAC,IAAI,EAAI;AAC3C,kCAAIwG,iBAAiB,GAAG;AACtBzB,gCAAAA,UAAU,EAAEA,UADU;AAEtBrC,gCAAAA,YAAY,EAAE1C;AAFQ,+BAAxB;AAIAuG,8BAAAA,qBAAqB,CAAC1E,IAAtB,CAA2B2E,iBAA3B;AACD,6BAND;;AAvCkC,kCA+C9BD,qBAAqB,CAAC3G,MAAtB,GAA+B,CA/CD;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAgDIkG,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACjC2G,MADiC,CAC1BK,qBAD0B,CAhDJ;;AAAA;AAgD5BE,4BAAAA,uBAhD4B;;AAAA;AAAA;AAAA,mCAsDjBX,GAAG,CAACvG,KAAJ,CAAU,QAAV,EAAoBE,KAApB,CAA0B,IAA1B,EAAgC,CAAhC,EAAmCsD,KAAnC,EAtDiB;;AAAA;AAsDhC2D,4BAAAA,MAtDgC;AAuDhCC,4BAAAA,QAvDgC,GAuDrBD,MAAM,CAACjG,EAvDc;AAwDhCiD,4BAAAA,eAxDgC,GAwDd,EAxDc;AAAA,mEAyDnB/E,IAAI,CAACsG,KAzDc;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyD3BC,4BAAAA,IAzD2B;AAAA;AAAA,mCA0DmBA,IA1DnB;;AAAA;AAAA;AA0D5B0B,4BAAAA,QA1D4B,eA0D5BA,QA1D4B;AA0DlBC,4BAAAA,QA1DkB,eA0DlBA,QA1DkB;AA0DRC,4BAAAA,gBA1DQ,eA0DRA,gBA1DQ;AA4D9B5C,4BAAAA,WA5D8B,GA4DhB;AAChBN,8BAAAA,UAAU,EAAEgD,QADI;AAEhBG,8BAAAA,SAAS,EAAEJ,QAFK;AAGhB5B,8BAAAA,UAAU,EAAEA;AAHI,6BA5DgB;AAkElCrB,4BAAAA,eAAe,CAAC7B,IAAhB,CAAqBqC,WAArB;;AAlEkC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,kCAqEhCR,eAAe,CAAC9D,MAAhB,GAAyB,CArEO;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAsE5BkG,GAAG,CAACvG,KAAJ,CAAU,qBAAV,EAAiC2G,MAAjC,CAAwCxC,eAAxC,CAtE4B;;AAAA;AAAA;AAAA,mCAyE9B1F,QAAQ,CAACW,IAAI,CAACsG,KAAN,EAAayB,MAAM,CAACM,SAApB,CAzEsB;;AAAA;AAAA,8DA2E7B;AACLvG,8BAAAA,EAAE,EAAEsE,UADC;AAEL3E,8BAAAA,WAAW,EAAE,GAFR;AAGLC,8BAAAA,OAAO,EAAE;AAHJ,6BA3E6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAf;;AAAA;AAAA;AAAA;AAAA,oBAJE;;AAAA;AAIrB4G,gBAAAA,UAJqB;AAAA,kDAsFlBA,UAtFkB;;AAAA;AAAA;AAAA;AA0FzBC,gBAAAA,OAAO,CAACC,GAAR;AA1FyB,kDA2FlB;AACL/G,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBA3FkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QADpB;AAkGR+G,IAAAA,aAAa,EAAEtJ,aAAa;AAAA,gGAAC,kBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGFhB,EAAE,CAACiI,WAAH;AAAA,4GAAe,kBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChCC,4BAAAA,YADgC,GACjBpH,IAAI,CAACqH,YADY,EAEpC;;AAFoC;AAAA,mCAGjBF,GAAG,CAACvG,KAAJ,CAAU,SAAV,EAChBE,KADgB,CACV,IADU,EACJd,IAAI,CAAC8B,EADD,EAEhB4G,MAFgB,CAET;AACN3G,8BAAAA,MAAM,EAAEqF,YAAY,CAACrF,MADf;AAENC,8BAAAA,OAAO,EAAEoF,YAAY,CAACpF,OAFhB;AAGNC,8BAAAA,aAAa,EAAEmF,YAAY,CAACnF,aAHtB;AAINC,8BAAAA,aAAa,EAAEkF,YAAY,CAAClF,aAJtB;AAKNC,8BAAAA,QAAQ,EAAEiF,YAAY,CAACjF;AALjB,6BAFS,CAHiB;;AAAA;AAGhChB,4BAAAA,MAHgC;;AAAA,kCAchCiG,YAAY,CAACnF,aAAb,IAA8B,CAdE;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAgBlBkF,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACbE,KADa,CACP,YADO,EACOd,IAAI,CAAC8B,EADZ,EACgB6G,GADhB,EAhBkB;;AAAA;AAgB9BA,4BAAAA,GAhB8B;AAmBlC;AACInB,4BAAAA,qBApB8B,GAoBN,EApBM;AAqBlC,sDAAAJ,YAAY,CAACK,cAAb,kFAA6BrG,OAA7B,CAAqC,UAAAC,IAAI,EAAI;AAC3C,kCAAIqG,iBAAiB,GAAG;AACtBtB,gCAAAA,UAAU,EAAEpG,IAAI,CAAC8B,EADK;AAEtBiB,gCAAAA,YAAY,EAAE1B,IAFQ;AAGtBE,gCAAAA,MAAM,EAAE;AAHc,+BAAxB;AAKAiG,8BAAAA,qBAAqB,CAACtE,IAAtB,CAA2BwE,iBAA3B;AACD,6BAPD;;AArBkC,kCA8B9BF,qBAAqB,CAACvG,MAAtB,GAA+B,CA9BD;AAAA;AAAA;AAAA;;AAAA;AAAA,mCA+BIkG,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACjC2G,MADiC,CAC1BC,qBAD0B,CA/BJ;;AAAA;AA+B5BG,4BAAAA,uBA/B4B;;AAAA;AAAA;AAAA;;AAAA;AAAA,kCAoC3BP,YAAY,CAACnF,aAAb,IAA8B,CApCH;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAsClBkF,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACbE,KADa,CACP,YADO,EACOd,IAAI,CAAC8B,EADZ,EACgB6G,GADhB,EAtCkB;;AAAA;AAsC9BA,4BAAAA,IAtC8B;AAyClC;AACIf,4BAAAA,qBA1C8B,GA0CN,EA1CM;AA2ClC,sDAAAR,YAAY,CAACK,cAAb,kFAA6BrG,OAA7B,CAAqC,UAAAC,IAAI,EAAI;AAC3C,kCAAIwG,iBAAiB,GAAG;AACtBzB,gCAAAA,UAAU,EAAEpG,IAAI,CAAC8B,EADK;AAEtBiC,gCAAAA,YAAY,EAAE1C;AAFQ,+BAAxB;AAIAuG,8BAAAA,qBAAqB,CAAC1E,IAAtB,CAA2B2E,iBAA3B;AACD,6BAND;;AA3CkC,kCAmD9BD,qBAAqB,CAAC3G,MAAtB,GAA+B,CAnDD;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAoDIkG,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACjC2G,MADiC,CAC1BK,qBAD0B,CApDJ;;AAAA;AAoD5BE,4BAAAA,uBApD4B;;AAAA;AAAA;AAAA,mCA0DjBX,GAAG,CAACvG,KAAJ,CAAU,QAAV,EAAoBE,KAApB,CAA0B,IAA1B,EAAgC,CAAhC,EAAmCsD,KAAnC,EA1DiB;;AAAA;AA0DhC2D,4BAAAA,MA1DgC;AA2DhCC,4BAAAA,QA3DgC,GA2DrBD,MAAM,CAACjG,EA3Dc;AA4DhCiD,4BAAAA,eA5DgC,GA4Dd,EA5Dc;AAAA,oEA6DnB/E,IAAI,CAACsG,KA7Dc;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6D3BC,4BAAAA,IA7D2B;AAAA;AAAA,mCA8DmBA,IA9DnB;;AAAA;AAAA;AA8D5B0B,4BAAAA,QA9D4B,gBA8D5BA,QA9D4B;AA8DlBC,4BAAAA,QA9DkB,gBA8DlBA,QA9DkB;AA8DRC,4BAAAA,gBA9DQ,gBA8DRA,gBA9DQ;AAgE9B5C,4BAAAA,WAhE8B,GAgEhB;AAChBN,8BAAAA,UAAU,EAAEgD,QADI;AAEhBG,8BAAAA,SAAS,EAAEJ,QAFK;AAGhB5B,8BAAAA,UAAU,EAAEpG,IAAI,CAAC8B;AAHD,6BAhEgB;AAsElCiD,4BAAAA,eAAe,CAAC7B,IAAhB,CAAqBqC,WAArB;;AAtEkC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,kCAyEhCR,eAAe,CAAC9D,MAAhB,GAAyB,CAzEO;AAAA;AAAA;AAAA;;AAAA;AAAA,mCA0E5BkG,GAAG,CAACvG,KAAJ,CAAU,qBAAV,EAAiC2G,MAAjC,CAAwCxC,eAAxC,CA1E4B;;AAAA;AAAA;AAAA,mCA6E9B1F,QAAQ,CAACW,IAAI,CAACsG,KAAN,EAAayB,MAAM,CAACM,SAApB,CA7EsB;;AAAA;AAAA,8DA+E7B;AACL5G,8BAAAA,WAAW,EAAE,GADR;AAELC,8BAAAA,OAAO,EAAE;AAFJ,6BA/E6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAf;;AAAA;AAAA;AAAA;AAAA,oBAHE;;AAAA;AAGrB4G,gBAAAA,UAHqB;AAAA,kDAwFlBA,UAxFkB;;AAAA;AAAA;AAAA;AA4FzBC,gBAAAA,OAAO,CAACC,GAAR;AA5FyB,kDA6FlB;AACL/G,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBA7FkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QAlGpB;AAqMRkH,IAAAA,aAAa,EAAEzJ,aAAa;AAAA,gGAAC,mBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEFhB,EAAE,CAACiI,WAAH;AAAA,6GAAe,kBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACfA,GAAG,CAACvG,KAAJ,CAAU,SAAV,EAAqBE,KAArB,CAA2B,IAA3B,EAAiCd,IAAI,CAAC8B,EAAtC,EAA0CsC,KAA1C,EADe;;AAAA;AAChCyE,4BAAAA,QADgC;;AAAA,kCAIhCA,QAAQ,CAACtH,MAAT,IAAmB,CAJa;AAAA;AAAA;AAAA;;AAAA,kCAK5B,IAAIuH,KAAJ,CAAU,mCAAV,CAL4B;;AAAA;AAAA;AAAA,mCAQD3B,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EAChCE,KADgC,CAC1B,YAD0B,EACZ+H,QAAQ,CAAC/G,EADG,EACC6G,GADD,EARC;;AAAA;AAQhCI,4BAAAA,sBARgC;AAAA;AAAA,mCAWD5B,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EAChCE,KADgC,CAC1B,YAD0B,EACZ+H,QAAQ,CAAC/G,EADG,EACC6G,GADD,EAXC;;AAAA;AAWhCK,4BAAAA,sBAXgC;AAAA;AAAA,mCAcjB7B,GAAG,CAACvG,KAAJ,CAAU,QAAV,EAAoBE,KAApB,CAA0B,IAA1B,EAAgC,CAAhC,EAAmCsD,KAAnC,EAdiB;;AAAA;AAchC6E,4BAAAA,MAdgC;AAAA;AAAA,mCAeL9B,GAAG,CAACvG,KAAJ,CAAU,qBAAV,EAC5BE,KAD4B,CACtB,YADsB,EACRd,IAAI,CAAC8B,EADG,EACCoH,IADD,CACM,UAAC5C,KAAD,EAAW;AAC5C,kCAAIA,KAAK,CAACrF,MAAN,GAAe,CAAnB,EAAsB;AACpB,oCAAIkI,OAAO,GAAG,EAAd,CADoB,CAEpB;;AAAA;AAFoB,4EAGH7C,KAHG;AAAA;;AAAA;AAEpB;AACA,yFAAwB;AAAA,wCAAfC,IAAe;AACtB,wCAAI6C,GAAG,GAAGH,MAAM,CAACI,IAAP,GAAc,GAAd,GAAoB9C,IAAI,CAACtB,UAAnC;AACAkE,oCAAAA,OAAO,CAACjG,IAAR,CAAakG,GAAb;AACD;AANmB;AAAA;AAAA;AAAA;AAAA;;AAQpB9J,gCAAAA,UAAU,CAAC6J,OAAD,CAAV;AACD;AACF,6BAZ4B,CAfK;;AAAA;AAehCG,4BAAAA,kBAfgC;AAAA;AAAA,mCA8BfnC,GAAG,CAACvG,KAAJ,CAAU,qBAAV,EAClBE,KADkB,CACZ,YADY,EACEd,IAAI,CAAC8B,EADP,EACW6G,GADX,EA9Be;;AAAA;AA8BhCY,4BAAAA,QA9BgC;AAAA;AAAA,mCAkCpBpC,GAAG,CAACvG,KAAJ,CAAU,SAAV,EAAqBE,KAArB,CAA2B,IAA3B,EAAiCd,IAAI,CAAC8B,EAAtC,EAA0C6G,GAA1C,EAlCoB;;AAAA;AAkChCA,4BAAAA,GAlCgC;AAAA,8DAoC7B;AACLlH,8BAAAA,WAAW,EAAE,GADR;AAELC,8BAAAA,OAAO,EAAE;AAFJ,6BApC6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAf;;AAAA;AAAA;AAAA;AAAA,oBAFE;;AAAA;AAErB4G,gBAAAA,UAFqB;AAAA,mDA4ClBA,UA5CkB;;AAAA;AAAA;AAAA;AAgDzBC,gBAAAA,OAAO,CAACC,GAAR;AAhDyB,mDAiDlB;AACL/G,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAjDkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QArMpB;AA4PR8H,IAAAA,WAAW,EAAErK,aAAa;AAAA,iGAAC,mBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBC,gBAAAA,MAFmB,GAEVD,OAAO,CAACE,WAAR,CAAoBC,EAFV;AAAA;AAAA,uBAIAnB,EAAE,CAACiI,WAAH;AAAA,6GAAe,mBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACfA,GAAG,CAACvG,KAAJ,CAAU,SAAV,EAAqBE,KAArB,CAA2B,IAA3B,EAAiCd,IAAI,CAAC8B,EAAtC,EAA0CsC,KAA1C,EADe;;AAAA;AAChCyE,4BAAAA,QADgC;;AAAA,gCAI/BA,QAJ+B;AAAA;AAAA;AAAA;;AAAA,kCAK5B,IAAIC,KAAJ,CAAU,8CAAV,CAL4B;;AAAA;AAQhCW,4BAAAA,gBARgC,GAQbZ,QAAQ,CAAC3G,aAAT,CAAuBwH,KAAvB,CAA6B,GAA7B,CARa,EAUpC;;AAVoC;AAAA,mCAWLvC,GAAG,CAACvG,KAAJ,CAAU,SAAV,EAAqBE,KAArB,CAA2B,IAA3B,EAAiCd,IAAI,CAAC8B,EAAtC,EAC5B4G,MAD4B,CACrB;AACNnH,8BAAAA,MAAM,EAAE,CADF;AAENa,8BAAAA,QAAQ,EAAE,IAAIuH,IAAJ;AAFJ,6BADqB,CAXK;;AAAA;AAWhCC,4BAAAA,kBAXgC;;AAAA,kCAkBhCf,QAAQ,CAAC5G,aAAT,IAA0B,CAlBM;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAoBHkF,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EAC5BE,KAD4B,CACtB,YADsB,EACRd,IAAI,CAAC8B,EADG,EAE5BnB,MAF4B,CAErB,cAFqB,EAG5BkJ,KAH4B,CAGtB,cAHsB,CApBG;;AAAA;AAoB9BC,4BAAAA,kBApB8B;;AAAA,kCAyB9BA,kBAAkB,CAAC7I,MAAnB,KAA8B,CAzBA;AAAA;AAAA;AAAA;;AAAA,kCA0B1B,IAAI6H,KAAJ,CAAU,2CAAV,CA1B0B;;AAAA;AAAA,iCA8B9BW,gBAAgB,CAAClF,QAAjB,CAA0B,MAA1B,CA9B8B;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAgCA4C,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EAC7BE,KAD6B,CACvB,YADuB,EACTd,IAAI,CAAC8B,EADI,EAE7B4G,MAF6B,CAEtB;AACNnH,8BAAAA,MAAM,EAAE;AADF,6BAFsB,CAhCA;;AAAA;AAgC5BwI,4BAAAA,mBAhC4B;AAsChC;AACApK,4BAAAA,MAAM,CAACqK,OAAP,CAAexK,aAAf,EAA8B;AAAEyK,8BAAAA,mBAAmB,EAAE;AAAvB,6BAA9B;;AAvCgC;AAAA,iCA2C9BR,gBAAgB,CAAClF,QAAjB,CAA0B,IAA1B,CA3C8B;AAAA;AAAA;AAAA;;AAAA;AAAA,mCA6CT4C,GAAG,CAACvG,KAAJ,CAAU,WAAV,EACpBM,OADoB,CACZ,IADY,EACN4I,kBADM,EAEpBnJ,MAFoB,CAEb,OAFa,EAGpBkJ,KAHoB,CAGd,OAHc,CA7CS;;AAAA;AA6C5BK,4BAAAA,UA7C4B;AAkD5BC,4BAAAA,YAlD4B,GAkDZtB,QAAQ,CAAC9G,MAAT,GAAkB,gBAAlB,GAAqC9B,OAAO,CAACE,WAAR,CAAoBqD,KAlD7C,EAoDhC;;AApDgC;AAAA,mCAqDb2D,GAAG,CAACvG,KAAJ,CAAU,QAAV,EAAoBE,KAApB,CAA0B,IAA1B,EAAgC,CAAhC,EAAmCsJ,QAAnC,CAA4C,MAA5C,EAAoD,CAApD,EAAuDhG,KAAvD,EArDa;;AAAA;AAqD5B6E,4BAAAA,MArD4B;;AAAA,gCAsD3BA,MAtD2B;AAAA;AAAA;AAAA;;AAAA,kCAuDxB,IAAIH,KAAJ,CAAU,6CAAV,CAvDwB;;AAAA;AAAA;AAAA,mCAyDJ3B,GAAG,CAACvG,KAAJ,CAAU,qBAAV,EACzBE,KADyB,CACnB,YADmB,EACLd,IAAI,CAAC8B,EADA,EAEzBnB,MAFyB,CAElB,YAFkB,EAGzBkJ,KAHyB,CAGnB,YAHmB,CAzDI;;AAAA;AAyD5B9E,4BAAAA,eAzD4B;AA8DhC;AACIsF,4BAAAA,WA/D4B,GA+Dd,EA/Dc;AAgEhCtF,4BAAAA,eAAe,CAAC3D,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC9B,kCAAIiJ,UAAU,GAAG;AACfrC,gCAAAA,QAAQ,EAAE5G,IADK;AAEfkJ,gCAAAA,OAAO,YAAKtB,MAAM,CAACZ,SAAZ,cAAyBhH,IAAzB;AAFQ,+BAAjB;AAIAgJ,8BAAAA,WAAW,CAACnH,IAAZ,CAAiBoH,UAAjB;AACD,6BAND;AAQAlL,4BAAAA,SAAS,CAACA,SAAV,CAAoB8K,UAAU,CAACM,IAAX,CAAgB,GAAhB,CAApB,EAA0CL,YAA1C,EAAwDtB,QAAQ,CAAC7G,OAAjE,EAA0EqI,WAA1E,EAAuF,QAAvF,WACS9B,OAAO,CAACkC,KADjB;;AAxEgC;AAAA;AAAA;;AAAA;AAAA,kCA6E3B5B,QAAQ,CAAC5G,aAAT,IAA0B,CA7EC;AAAA;AAAA;AAAA;;AAAA;AAAA,mCA+EhBkF,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACfE,KADe,CACT,YADS,EACKd,IAAI,CAAC8B,EADV,EAEf4C,KAFe,CAET,IAFS,CA/EgB;;AAAA;AA+E9BA,4BAAAA,KA/E8B;;AAAA,kCAmF9BkB,MAAM,CAACC,QAAP,CAAgBnB,KAAK,CAAC,CAAD,CAAL,CAASA,KAAzB,MAAoC,CAnFN;AAAA;AAAA;AAAA;;AAAA,kCAoF1B,IAAIoE,KAAJ,CAAU,iDAAV,CApF0B;;AAAA;AAAA;AAAA,mCAwFH3B,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EAC5BE,KAD4B,CACtB,YADsB,EACRd,IAAI,CAAC8B,EADG,EAE5BnB,MAF4B,CAErB,cAFqB,EAG5BkJ,KAH4B,CAGtB,cAHsB,CAxFG;;AAAA;AAwF9B/E,4BAAAA,kBAxF8B;AAAA;AAAA,mCA6FNqC,GAAG,CAACvG,KAAJ,CAAU,WAAV,EACzBM,OADyB,CACjB,cADiB,EACD4D,kBADC,EAEzBnE,MAFyB,CAElB,cAFkB,EAGzB+J,QAHyB,EA7FM;;AAAA;AA6F9BlI,4BAAAA,eA7F8B;;AAAA,kCAkG9BA,eAAe,CAACvB,MAAhB,IAA0B,CAlGI;AAAA;AAAA;AAAA;;AAAA,kCAmG1B,IAAI6H,KAAJ,CAAU,2CAAV,CAnG0B;;AAAA;AAAA,iCAsG9BW,gBAAgB,CAAClF,QAAjB,CAA0B,MAA1B,CAtG8B;AAAA;AAAA;AAAA;;AAuGhC;AACIuF,4BAAAA,mBAxG4B,GAwGPtH,eAAe,CAACc,GAAhB,CAAoB,UAAAC,CAAC;AAAA,qCAAIA,CAAC,CAACR,YAAN;AAAA,6BAArB,CAxGO;AAyG5BgG,4BAAAA,sBAzG4B,GAyGH,EAzGG;;AA0GhCe,4BAAAA,mBAAkB,CAAC1I,OAAnB,CAA2B,UAAAC,IAAI,EAAI;AACjC,kCAAIqG,iBAAiB,GAAG;AACtBtB,gCAAAA,UAAU,EAAEpG,IAAI,CAAC8B,EADK;AAEtBiB,gCAAAA,YAAY,EAAE1B,IAFQ;AAGtBE,gCAAAA,MAAM,EAAE;AAHc,+BAAxB;AAKAwH,8BAAAA,sBAAsB,CAAC7F,IAAvB,CAA4BwE,iBAA5B;AACD,6BAPD;;AA1GgC;AAAA,mCAmH1BP,GAAG,CAACvG,KAAJ,CAAU,mBAAV,EACH2G,MADG,CACIwB,sBADJ,CAnH0B;;AAAA;AAsHhC;AACApJ,4BAAAA,MAAM,CAACqK,OAAP,CAAexK,aAAf,EAA8B;AAAEyK,8BAAAA,mBAAmB,EAAE;AAAvB,6BAA9B;;AAvHgC;AAAA,iCA2H9BR,gBAAgB,CAAClF,QAAjB,CAA0B,IAA1B,CA3H8B;AAAA;AAAA;AAAA;;AAAA;AAAA,mCA6HT4C,GAAG,CAACvG,KAAJ,CAAU,WAAV,EACpBM,OADoB,CACZ,IADY,EACN,CAAC,CAAD,CADM,EAEpBP,MAFoB,CAEb,OAFa,EAGpBkJ,KAHoB,CAGd,OAHc,CA7HS;;AAAA;AA6H5BK,4BAAAA,WA7H4B;AAkI5BC,4BAAAA,aAlI4B,GAkIZtB,QAAQ,CAAC9G,MAAT,GAAkB,gBAAlB,GAAqC9B,OAAO,CAACE,WAAR,CAAoBqD,KAlI7C,EAoIhC;;AApIgC;AAAA,mCAqIb2D,GAAG,CAACvG,KAAJ,CAAU,QAAV,EAAoBE,KAApB,CAA0B,IAA1B,EAAgC,CAAhC,EAAmCsJ,QAAnC,CAA4C,MAA5C,EAAoD,CAApD,EAAuDhG,KAAvD,EArIa;;AAAA;AAqI5B6E,4BAAAA,OArI4B;;AAAA,gCAsI3BA,OAtI2B;AAAA;AAAA;AAAA;;AAAA,kCAuIxB,IAAIH,KAAJ,CAAU,6CAAV,CAvIwB;;AAAA;AAAA;AAAA,mCAyIJ3B,GAAG,CAACvG,KAAJ,CAAU,qBAAV,EACzBE,KADyB,CACnB,YADmB,EACLd,IAAI,CAAC8B,EADA,EAEzBnB,MAFyB,CAElB,YAFkB,EAGzBkJ,KAHyB,CAGnB,YAHmB,CAzII;;AAAA;AAyI5B9E,4BAAAA,gBAzI4B;AA8IhC;AACIsF,4BAAAA,YA/I4B,GA+Id,EA/Ic;;AAgJhCtF,4BAAAA,gBAAe,CAAC3D,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC9B,kCAAIiJ,UAAU,GAAG;AACfrC,gCAAAA,QAAQ,EAAE5G,IADK;AAEfkJ,gCAAAA,OAAO,YAAKtB,OAAM,CAACZ,SAAZ,cAAyBhH,IAAzB;AAFQ,+BAAjB;;AAIAgJ,8BAAAA,YAAW,CAACnH,IAAZ,CAAiBoH,UAAjB;AACD,6BAND;;AAQAlL,4BAAAA,SAAS,CAACA,SAAV,CAAoB8K,WAAU,CAACM,IAAX,CAAgB,GAAhB,CAApB,EAA0CL,aAA1C,EAAwDtB,QAAQ,CAAC7G,OAAjE,EAA0EqI,YAA1E,EAAuF,QAAvF,WACS9B,OAAO,CAACkC,KADjB;;AAxJgC;AAAA,+DA6J7B;AACLhJ,8BAAAA,WAAW,EAAE,GADR;AAELC,8BAAAA,OAAO,EAAE;AAFJ,6BA7J6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAf;;AAAA;AAAA;AAAA;AAAA,oBAJA;;AAAA;AAInB4G,gBAAAA,UAJmB;AAAA,mDAuKhBA,UAvKgB;;AAAA;AAAA;AAAA;AAAA,mDA2KhB;AACL7G,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE,cAAEC,QAAF;AAFJ,iBA3KgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QA5PlB;AA6aRgJ,IAAAA,wBAAwB,EAAExL,aAAa;AAAA,iGAAC,mBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEZhB,EAAE,CAAC2B,KAAH,CAAS,qBAAT,EACrBE,KADqB,CACf,IADe,EACTd,IAAI,CAAC8B,EADI,EACAsC,KADA,EAFY;;AAAA;AAEhCmB,gBAAAA,WAFgC;;AAAA,oBAK/BA,WAL+B;AAAA;AAAA;AAAA;;AAAA,mDAM3B;AACL9D,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAN2B;;AAAA;AAAA;AAAA,uBAWfzC,EAAE,CAAC2B,KAAH,CAAS,SAAT,EAClBE,KADkB,CACZ,IADY,EACNyE,WAAW,CAACa,UADN,EACkBhC,KADlB,EAXe;;AAAA;AAWhCyE,gBAAAA,QAXgC;;AAAA,sBAchCA,QAAQ,CAACtH,MAAT,IAAmB,CAda;AAAA;AAAA;AAAA;;AAAA,mDAe3B;AACLE,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAf2B;;AAAA;AAAA;AAAA,uBAoBbzC,EAAE,CAACiI,WAAH;AAAA,6GAAe,mBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACpBA,GAAG,CAACvG,KAAJ,CAAU,qBAAV,EACfE,KADe,CACT,IADS,EACHd,IAAI,CAAC8B,EADF,EACMsC,KADN,GACcuE,GADd,EADoB;;AAAA;AAChCA,4BAAAA,GADgC;AAAA;AAAA,mCAKjBxB,GAAG,CAACvG,KAAJ,CAAU,QAAV,EAAoBE,KAApB,CAA0B,IAA1B,EAAgCyE,WAAW,CAAC6C,SAA5C,EAAuDhE,KAAvD,EALiB;;AAAA;AAKhC6E,4BAAAA,MALgC;AAMpC3J,4BAAAA,UAAU,CAAC,CAAC2J,MAAM,CAACI,IAAP,GAAc,GAAd,GAAoB9D,WAAW,CAACN,UAAjC,CAAD,CAAV;AANoC,+DAQ7B;AACLxD,8BAAAA,WAAW,EAAE,GADR;AAELC,8BAAAA,OAAO,EAAE;AAFJ,6BAR6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAf;;AAAA;AAAA;AAAA;AAAA,oBApBa;;AAAA;AAoBhC4G,gBAAAA,UApBgC;AAAA,mDAkC7BA,UAlC6B;;AAAA;AAAA;AAAA;AAAA,mDAqC7B;AACL7G,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE,cAAEC,QAAF;AAFJ,iBArC6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QA7a/B;AAwdRiJ,IAAAA,gBAAgB,EAAEzL,aAAa;AAAA,iGAAC,mBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEJhB,EAAE,CAAC2B,KAAH,CAAS,qBAAT,EACrBE,KADqB,CACf,IADe,EACTd,IAAI,CAAC8B,EADI,EACAsC,KADA,EAFI;;AAAA;AAExBmB,gBAAAA,WAFwB;AAAA;AAAA,uBAITtG,EAAE,CAAC2B,KAAH,CAAS,QAAT,EAAmBE,KAAnB,CAAyB,IAAzB,EAA+ByE,WAAW,CAAC6C,SAA3C,EAAsDhE,KAAtD,EAJS;;AAAA;AAIxB6E,gBAAAA,MAJwB;;AAAA,oBAMvB1D,WANuB;AAAA;AAAA;AAAA;;AAAA,mDAOnB;AACL9D,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAPmB;;AAAA;AAAA,gCAYLnC,YAAY,CAAC0J,MAAM,CAACI,IAAP,GAAc,GAAd,GAAoB9D,WAAW,CAACN,UAAjC,CAZP,EAYtB4F,MAZsB,iBAYtBA,MAZsB,EAYdC,IAZc,iBAYdA,IAZc;AAAA,mDAcrB;AACLD,kBAAAA,MAAM,EAAEA,MADH;AAELC,kBAAAA,IAAI,EAAEA,IAFD;AAGLrJ,kBAAAA,WAAW,EAAE,GAHR;AAILC,kBAAAA,OAAO,EAAE;AAJJ,iBAdqB;;AAAA;AAAA;AAAA;AAAA,mDAsBrB;AACLD,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE,cAAEC,QAAF;AAFJ,iBAtBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QAxdvB;AAofRoJ,IAAAA,UAAU,EAAE5L,aAAa;AAAA,iGAAC,mBAAOY,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBC,gBAAAA,MAFkB,GAETD,OAAO,CAACE,WAAR,CAAoBC,EAFX;AAAA;AAAA,uBAIKnB,EAAE,CAAC2B,KAAH,CAAS,mBAAT,EACxBE,KADwB,CAClB,IADkB,EACZd,IAAI,CAAC8B,EADO,EACH4G,MADG,CACI;AAC3B5B,kBAAAA,KAAK,EAAE;AADoB,iBADJ,CAJL;;AAAA;AAIlBkE,gBAAAA,cAJkB;AAStB;AACArL,gBAAAA,MAAM,CAACqK,OAAP,CAAexK,aAAf,EAA8B;AAAEyK,kBAAAA,mBAAmB,EAAE;AAAvB,iBAA9B;AAVsB,mDAYf;AACLxI,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAZe;;AAAA;AAAA;AAAA;AAAA,mDAkBf;AACLD,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE,cAAEC,QAAF;AAFJ,iBAlBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA;AApfjB,GAtVM;AAo2BhB;AACAsJ,EAAAA,YAAY,EAAE;AACZhB,IAAAA,mBAAmB,EAAE;AACnB;AACAiB,MAAAA,SAAS,EAAExL,UAAU,CACnB;AAAA,eAAMC,MAAM,CAACwL,aAAP,CAAqB3L,aAArB,CAAN;AAAA,OADmB,EAEnB,UAAC4L,OAAD,EAAUC,SAAV,EAAwB;AACtB;AACA;AAEA,eAAO,IAAP;AACD,OAPkB;AAFF;AADT;AAr2BE,CAAlB;AAq3BAC,MAAM,CAACC,OAAP,GAAiB3L,SAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\tien-ich\\message\\",
      "sourcesContent": [
        "const db = require('../../../../data/knex-db');\r\nconst authenticated = require('../../../../middleware/authenticated-guard');\r\nconst sendEmail = require('../../../../common/sendEmail');\r\nconst { saveFile, deleteFile, downloadFile } = require('../../../../common/handleFile');\r\nconst { MESSAGE_COUNT } = require('../../../subscription/const-subscription');\r\nconst { PubSub, withFilter } = require('graphql-subscriptions');\r\nconst pubsub = new PubSub();\r\n\r\nconst resolvers = {\r\n  //QUERY\r\n  Query: {\r\n    getListMessage: authenticated(async (parent, args, context) => {\r\n      try \r\n      {\r\n        let userId = context.currentUser.id;\r\n        let FromCreatedDate = args.GetListMessageInput.FromCreatedDate;\r\n        let ToCreatedDate = args.GetListMessageInput.ToCreatedDate;\r\n        let FromSendDate = args.GetListMessageInput.FromSendDate;\r\n        let ToSendDate = args.GetListMessageInput.ToSendDate;\r\n        let ListStatus = args.GetListMessageInput.ListStatus;\r\n\r\n        let result = await db.select().table('Message')\r\n          .orderBy('CreatedDate', 'desc')\r\n          .where(builder => {\r\n            builder.where('CreatedBy', userId);\r\n\r\n            if (FromCreatedDate)\r\n              builder.whereRaw('??::date >= ?::date', ['CreatedDate', FromCreatedDate]);\r\n\r\n            if (ToCreatedDate)\r\n              builder.whereRaw('??::date <= ?::date', ['CreatedDate', ToCreatedDate]);\r\n\r\n            if (FromSendDate)\r\n              builder.whereRaw('??::date >= ?::date', ['SendDate', FromSendDate]);\r\n\r\n            if (ToSendDate)\r\n              builder.whereRaw('??::date <= ?::date', ['SendDate', ToSendDate]);\r\n            \r\n            if (ListStatus.length > 0)\r\n              builder.whereIn('Status', ListStatus);\r\n          });\r\n\r\n        result.forEach(item => {\r\n          item.StatusName = item.Status == 0 ? \"Lưu nháp\" : \"Đã gửi\";\r\n        });\r\n\r\n        return {\r\n          listMessage: result,\r\n          messageCode: 200,\r\n          message: 'message.get_list_message.success'\r\n        }\r\n      } \r\n      catch (e) \r\n      {\r\n        return {\r\n          listMessage: [],\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    }),\r\n    getMasterDataMessageDialog: authenticated(async (parent, args, context) => { \r\n      try \r\n      {\r\n        let messageObject = {\r\n          Id: 0,\r\n          TieuDe: \"\",\r\n          NoiDung: \"\",\r\n          NhomNguoiNhan: 1,\r\n          PhuongThucGui: \"\",\r\n          GuiTatCa: null,\r\n          SendDate: null,\r\n          Status: null,\r\n          CreatedDate: null,\r\n          StatusName: null\r\n        };\r\n\r\n        //List file đính kèm\r\n        let fileUploadMes = [];\r\n\r\n        //Lấy list đơn vị\r\n        let list_don_vi = await db.table('DonVi')\r\n          .whereIn('Level', [0, 1])\r\n          .select('Id', 'TenDonVi', 'ParentId').orderBy('Id');\r\n\r\n        //Lấy list người dùng\r\n        let list_nguoi_dung = await db.table('NguoiDung').select('Id', 'HoTen', 'DonVi_Id');\r\n        \r\n        let list_data_send_mess = [];\r\n        list_don_vi.forEach(item => {\r\n          let data_send_mess = {\r\n            Id: item.Id,\r\n            Name: item.TenDonVi,\r\n            ParentId: null,\r\n            Level: 0,\r\n            NguoiDung_Id: null,\r\n            SoNguoiThuocNhomQuyen: 0,\r\n            Selectable: true\r\n          };\r\n          list_data_send_mess.push(data_send_mess);\r\n        });\r\n\r\n        let maxId = Math.max(...list_data_send_mess.map(x => x.Id));\r\n        list_nguoi_dung.forEach(item => {\r\n          let data_send_mess = {\r\n            Id: ++maxId,\r\n            Name: item.HoTen,\r\n            ParentId: item.DonVi_Id,\r\n            Level: 1,\r\n            NguoiDung_Id: item.Id,\r\n            SoNguoiThuocNhomQuyen: 0,\r\n            Selectable: true\r\n          };\r\n          list_data_send_mess.push(data_send_mess);\r\n        });\r\n\r\n        //Lấy list nhóm quyền\r\n        let list_nhom_quyen = await db.table('NhomQuyen').select('Id', 'TenNhomQuyen');\r\n        let list_phan_quyen = await db.table('PhanQuyen').select('NguoiDung_Id', 'NhomQuyen_Id');\r\n\r\n        let list_data_permission_group = [];\r\n        list_nhom_quyen.forEach(item => {\r\n          //Lấy số người thuộc nhóm quyền\r\n          let count_user = list_phan_quyen.filter(x => x.NhomQuyen_Id == item.Id).length;\r\n          let selectable = true; //count_user == 0 ? false : true;\r\n\r\n          let data_send_mess = {\r\n            Id: item.Id,\r\n            Name: item.TenNhomQuyen,\r\n            ParentId: null,\r\n            Level: 0,\r\n            NguoiDung_Id: null,\r\n            SoNguoiThuocNhomQuyen: count_user,\r\n            Selectable: selectable\r\n          };\r\n          list_data_permission_group.push(data_send_mess);\r\n        });\r\n\r\n        //Nếu là lấy lại thông tin Message\r\n        let listKeys = [];\r\n        let listPartial = [];\r\n        if (args.Id) {\r\n          let message = await db.table('Message').where('Id', args.Id).first();\r\n        \r\n          messageObject.Id = message.Id;\r\n          messageObject.TieuDe = message.TieuDe;\r\n          messageObject.NoiDung = message.NoiDung;\r\n          messageObject.NhomNguoiNhan = message.NhomNguoiNhan;\r\n          messageObject.PhuongThucGui = message.PhuongThucGui;\r\n          messageObject.GuiTatCa = message.GuiTatCa;\r\n          messageObject.Status = message.Status;\r\n          messageObject.StatusName = message.Status == 0 ? \"Lưu nháp\" : \"Đã gửi\";\r\n\r\n          //Lấy list selected và list PartialSelected nếu là Nhóm người nhận là Theo người dùng\r\n          if (messageObject.NhomNguoiNhan == 1) {\r\n            //Lấy list User đã gửi\r\n            let _listNguoiDungId = await db.table('Message_NguoiDung')\r\n              .where('Message_Id', message.Id)\r\n              .select('NguoiDung_Id');\r\n            let listNguoiDungId = _listNguoiDungId?.map(x => x.NguoiDung_Id);\r\n            listKeys = list_data_send_mess.filter(x => listNguoiDungId\r\n              .includes(x.NguoiDung_Id)).map(x => x.Id.toString());\r\n\r\n            let listNode = list_data_send_mess.filter(x => x.Level == 0);\r\n            listNode.forEach(item => {\r\n              let countChild = list_data_send_mess.filter(x => x.ParentId == item.Id).length;\r\n              let count = list_data_send_mess.filter(x => x.ParentId == item.Id)\r\n                .filter(x => listKeys.includes(x.Id.toString())).length;\r\n\r\n              //Nếu tất cả node con đều đc chọn\r\n              if (countChild == count && countChild != 0) {\r\n                listKeys.push(item.Id.toString())\r\n              }\r\n              //Nếu có ít nhất 1 node con đc chọn\r\n              else if (count > 0) {\r\n                listPartial.push(item.Id)\r\n              }\r\n              //Nếu không có node con nào đc chọn\r\n              else if (count == 0) {\r\n                let listChildId = list_data_send_mess.filter(x => x.ParentId == item.Id).map(x => x.Id);\r\n                let exists = false;\r\n                listChildId.forEach(child => {\r\n                  if (listPartial.includes(child)) exists = true;\r\n                });\r\n\r\n                //Nếu có ít nhất 1 node con là partial\r\n                if (exists) listPartial.push(item.Id)\r\n              }\r\n            });\r\n          }\r\n          //Lấy list selected của nhóm quyền\r\n          else {\r\n            let list_nhom_quyen_id = await db.table('Message_NhomQuyen')\r\n              .where('Message_Id', message.Id).select('NhomQuyen_Id');\r\n            listKeys = list_nhom_quyen_id.map(x => x.NhomQuyen_Id.toString());\r\n          }\r\n\r\n          let listFileDinhKem = await db.table('FileDinhKemMesssage')\r\n            .where('Message_Id', args.Id)\r\n            .select('Id', 'TenTaiLieu');\r\n\r\n          listFileDinhKem.forEach(item => {\r\n            let index = item.TenTaiLieu.lastIndexOf('.');\r\n            let fileName = item.TenTaiLieu.substring(0, index);\r\n            let fileType = item.TenTaiLieu.substring(index + 1);\r\n            let indexSpecial = fileName.lastIndexOf('_');\r\n            fileName = fileName.substring(0, indexSpecial) + '.' + fileType;\r\n\r\n            let fileDinhKem = {\r\n              Id: item.Id,\r\n              TenTaiLieu: fileName\r\n            };\r\n            fileUploadMes.push(fileDinhKem);\r\n          });\r\n        }\r\n\r\n        return {\r\n          messageObject: messageObject,\r\n          listDataSendMess: list_data_send_mess,\r\n          listDataPermissionGroup: list_data_permission_group,\r\n          listKeys: listKeys,\r\n          listPartial: listPartial,\r\n          fileUploadMes: fileUploadMes,\r\n          messageCode: 200,\r\n          message: 'message.get_master_data_message_dialog.success'\r\n        }\r\n      } \r\n      catch (e) \r\n      {\r\n        return {\r\n          listMessage: [],\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    }),\r\n    getCountMessageByUserId: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let userId = context.currentUser.id;\r\n        let count = await db.table('Message_NguoiDung')\r\n          .innerJoin('Message', 'Message_NguoiDung.Message_Id', '=', 'Message.Id')\r\n          .where(builder => {\r\n            builder.where('Message_NguoiDung.NguoiDung_Id', userId);\r\n\r\n            builder.where('Message_NguoiDung.DaXem', false);\r\n\r\n            builder.where('Message_NguoiDung.Status', 1);\r\n\r\n            builder.where('Message.Type', 0);\r\n          })\r\n          .count('Message_NguoiDung.Id');\r\n\r\n        return {\r\n          count: Number.parseInt(count[0].count),\r\n          messageCode: 200,\r\n          message: 'message.count_mes_by_user.success'\r\n        }\r\n      }\r\n      catch (e) {\r\n        return {\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    }),\r\n    getListMessageByUserId: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let Keyword = args.Keyword;\r\n        let userId = context.currentUser.id;\r\n        let _listMessage = await db\r\n          .select(\r\n            'Message_NguoiDung.Id',\r\n            'Message.Id AS Message_Id',\r\n            'Message.TieuDe',\r\n            'Message.NoiDung',\r\n            'Message.SendDate',\r\n            'Message.CreatedBy',\r\n            'Message_NguoiDung.DaXem'\r\n          )\r\n          .orderBy('Message.SendDate', 'desc')\r\n          .from('Message_NguoiDung')\r\n          .innerJoin('Message', 'Message_NguoiDung.Message_Id', 'Message.Id')\r\n          .where(builder => {\r\n            builder.where('Message_NguoiDung.NguoiDung_Id', userId);\r\n\r\n            builder.where('Message_NguoiDung.Status', 1);\r\n\r\n            builder.where('Message.Type', 0);\r\n\r\n            if (Keyword) {\r\n              builder\r\n                .where('TieuDe', 'like', `%${Keyword.trim()}%`)\r\n                .orWhere('NoiDung', 'like', `%${Keyword.trim()}%`);\r\n            }\r\n          });\r\n\r\n        let listFile = await db.table('FileDinhKemMesssage')\r\n          .select('Id', 'TenTaiLieu', 'Message_Id')\r\n          .whereIn('Message_Id', _listMessage.map(x => x.Message_Id));\r\n        \r\n        if (listFile.length > 0) {\r\n          _listMessage.forEach(item => {\r\n            let files = listFile.filter(x => x.Message_Id == item.Message_Id);\r\n            files.forEach(file => {\r\n              let index = file.TenTaiLieu.lastIndexOf('.');\r\n              let fileName = file.TenTaiLieu.substring(0, index);\r\n              let fileType = file.TenTaiLieu.substring(index + 1);\r\n              let indexSpecial = fileName.lastIndexOf('_');\r\n              file.TenTaiLieu = fileName.substring(0, indexSpecial) + '.' + fileType;\r\n            });\r\n            item.fileUploadMes = files;\r\n          });\r\n        }\r\n\r\n        //Lấy list người tạo message\r\n        let listCreatedBy = _listMessage.map(x => x.CreatedBy);\r\n        let listNguoiDung = await db.table('NguoiDung')\r\n          .select('Id', 'HoTen')\r\n          .whereIn('Id', listCreatedBy);\r\n\r\n        let listMessage = [];\r\n        _listMessage.forEach(item => {\r\n          let newItem = {\r\n            Id: item.Id,\r\n            TieuDe: item.TieuDe,\r\n            NoiDung: item.NoiDung,\r\n            SendDate: item.SendDate,\r\n            CreatedName: listNguoiDung.find(x => x.Id == item.CreatedBy)?.HoTen,\r\n            DaXem: item.DaXem,\r\n            ListFile: item.fileUploadMes ? item.fileUploadMes : []\r\n          }\r\n          listMessage.push(newItem);\r\n        })\r\n\r\n        return {\r\n          listMessage: listMessage,\r\n          messageCode: 200,\r\n          message: 'message.get_list_mess_by_user.success'\r\n        };\r\n      }\r\n      catch (e) {\r\n        return {\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  //MUTATION\r\n  Mutation: {\r\n    createMessage: authenticated(async (parent, args, context) => {\r\n      try \r\n      {\r\n        let userId = context.currentUser.id;\r\n        let trx_result = await db.transaction(async trx => {\r\n          let messageInput = args.MessageInput;\r\n\r\n          //Tạo Message\r\n          let result = await trx.table('Message')\r\n            .returning(['Id']).insert({\r\n              TieuDe: messageInput.TieuDe, \r\n              NoiDung: messageInput.NoiDung,\r\n              NhomNguoiNhan: messageInput.NhomNguoiNhan,\r\n              PhuongThucGui: messageInput.PhuongThucGui,\r\n              GuiTatCa: messageInput.GuiTatCa,\r\n              Status: 0, //Lưu nháp\r\n              CreatedBy: userId\r\n            });\r\n\r\n          let Message_Id = result[0].Id;\r\n          \r\n          //Theo người dùng\r\n          if (messageInput.NhomNguoiNhan == 1) {\r\n            //Thêm vào bảng mapping\r\n            let listMessage_NguoiDung = [];\r\n            messageInput.ListSelectedId?.forEach(item => {\r\n              let message_nguoiDung = {\r\n                Message_Id: Message_Id,\r\n                NguoiDung_Id: item,\r\n                Status: 0\r\n              };\r\n              listMessage_NguoiDung.push(message_nguoiDung);\r\n            });\r\n\r\n            if (listMessage_NguoiDung.length > 0) {\r\n              let createMessage_NguoiDung = await trx.table('Message_NguoiDung')\r\n                .insert(listMessage_NguoiDung);\r\n            }\r\n          }\r\n          //Theo nhóm quyền\r\n          else if (messageInput.NhomNguoiNhan == 2) {\r\n            //Thêm vào bảng mapping\r\n            let listMessage_NhomQuyen = [];\r\n            messageInput.ListSelectedId?.forEach(item => {\r\n              let message_nhomQuyen = {\r\n                Message_Id: Message_Id,\r\n                NhomQuyen_Id: item\r\n              };\r\n              listMessage_NhomQuyen.push(message_nhomQuyen);\r\n            });\r\n\r\n            if (listMessage_NhomQuyen.length > 0) {\r\n              let createMessage_NhomQuyen = await trx.table('Message_NhomQuyen')\r\n                .insert(listMessage_NhomQuyen);\r\n            }\r\n          }\r\n\r\n          //Lưu file db\r\n          let thuMuc = await trx.table('ThuMuc').where('Id', 1).first();\r\n          let thuMucId = thuMuc.Id;\r\n          let listFileDinhKem = [];\r\n          for (let file of args.files) {\r\n            let { filename, mimetype, createReadStream } = await file;\r\n\r\n            let fileDinhKem = {\r\n              TenTaiLieu: filename,\r\n              ThuMuc_Id: thuMucId,\r\n              Message_Id: Message_Id\r\n            };\r\n\r\n            listFileDinhKem.push(fileDinhKem);\r\n          }\r\n\r\n          if (listFileDinhKem.length > 0)\r\n            await trx.table('FileDinhKemMesssage').insert(listFileDinhKem);\r\n\r\n          //Lưu file vật lý\r\n          await saveFile(args.files, thuMuc.TenThuMuc);\r\n\r\n          return {\r\n            Id: Message_Id,\r\n            messageCode: 200,\r\n            message: 'message.tao_moi.success'\r\n          }\r\n        });\r\n\r\n        return trx_result;\r\n      }\r\n      catch (e)\r\n      {\r\n        console.log(e)\r\n        return {\r\n          messageCode: 500,\r\n          message: 'message.tao_moi.error'\r\n        }\r\n      }\r\n    }),\r\n    updateMessage: authenticated(async (parent, args, context) => {\r\n      try \r\n      {\r\n        let trx_result = await db.transaction(async trx => {\r\n          let messageInput = args.MessageInput;\r\n          //Update Message\r\n          let result = await trx.table('Message')\r\n            .where('Id', args.Id)\r\n            .update({\r\n              TieuDe: messageInput.TieuDe, \r\n              NoiDung: messageInput.NoiDung,\r\n              NhomNguoiNhan: messageInput.NhomNguoiNhan,\r\n              PhuongThucGui: messageInput.PhuongThucGui,\r\n              GuiTatCa: messageInput.GuiTatCa\r\n            });\r\n\r\n          //Theo người dùng\r\n          if (messageInput.NhomNguoiNhan == 1) {\r\n            //Xóa bảng mapping\r\n            let del = await trx.table('Message_NguoiDung')\r\n              .where('Message_Id', args.Id).del();\r\n            \r\n            //Thêm vào bảng mapping\r\n            let listMessage_NguoiDung = [];\r\n            messageInput.ListSelectedId?.forEach(item => {\r\n              let message_nguoiDung = {\r\n                Message_Id: args.Id,\r\n                NguoiDung_Id: item,\r\n                Status: 0\r\n              };\r\n              listMessage_NguoiDung.push(message_nguoiDung);\r\n            });\r\n\r\n            if (listMessage_NguoiDung.length > 0) {\r\n              let createMessage_NguoiDung = await trx.table('Message_NguoiDung')\r\n                .insert(listMessage_NguoiDung);\r\n            }\r\n          }\r\n          //Theo nhóm quyền\r\n          else if (messageInput.NhomNguoiNhan == 2) {\r\n            //Xóa bảng mapping\r\n            let del = await trx.table('Message_NhomQuyen')\r\n              .where('Message_Id', args.Id).del();\r\n            \r\n            //Thêm vào bảng mapping\r\n            let listMessage_NhomQuyen = [];\r\n            messageInput.ListSelectedId?.forEach(item => {\r\n              let message_nhomQuyen = {\r\n                Message_Id: args.Id,\r\n                NhomQuyen_Id: item\r\n              };\r\n              listMessage_NhomQuyen.push(message_nhomQuyen);\r\n            });\r\n\r\n            if (listMessage_NhomQuyen.length > 0) {\r\n              let createMessage_NhomQuyen = await trx.table('Message_NhomQuyen')\r\n                .insert(listMessage_NhomQuyen);\r\n            }\r\n          }\r\n\r\n          //Lưu file db\r\n          let thuMuc = await trx.table('ThuMuc').where('Id', 1).first();\r\n          let thuMucId = thuMuc.Id;\r\n          let listFileDinhKem = [];\r\n          for (let file of args.files) {\r\n            let { filename, mimetype, createReadStream } = await file;\r\n\r\n            let fileDinhKem = {\r\n              TenTaiLieu: filename,\r\n              ThuMuc_Id: thuMucId,\r\n              Message_Id: args.Id\r\n            };\r\n\r\n            listFileDinhKem.push(fileDinhKem);\r\n          }\r\n\r\n          if (listFileDinhKem.length > 0)\r\n            await trx.table('FileDinhKemMesssage').insert(listFileDinhKem);\r\n\r\n          //Lưu file vật lý\r\n          await saveFile(args.files, thuMuc.TenThuMuc);\r\n\r\n          return {\r\n            messageCode: 200,\r\n            message: 'message.cap_nhat.success'\r\n          }\r\n        });\r\n        \r\n        return trx_result;\r\n      }\r\n      catch (e)\r\n      {\r\n        console.log(e)\r\n        return {\r\n          messageCode: 500,\r\n          message: 'message.cap_nhat.error'\r\n        }\r\n      }\r\n    }),\r\n    deleteMessage: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let trx_result = await db.transaction(async trx => {\r\n          let _message = await trx.table('Message').where('Id', args.Id).first();\r\n\r\n          //Nếu tin nhắn ở trạng thái Đã gửi\r\n          if (_message.Status == 1) \r\n            throw new Error('message.xoa.error_tin_nhan_da_gui');\r\n          \r\n          //Xóa các bảng mapping\r\n          let list_message_nguoiDung = await trx.table('Message_NguoiDung')\r\n            .where('Message_Id', _message.Id).del();\r\n          \r\n          let list_message_nhomQuyen = await trx.table('Message_NhomQuyen')\r\n            .where('Message_Id', _message.Id).del();\r\n\r\n          let folder = await trx.table('ThuMuc').where('Id', 1).first();\r\n          let list_file_dinh_kem = await trx.table('FileDinhKemMesssage')\r\n            .where('Message_Id', args.Id).then((files) => {\r\n              if (files.length > 0) {\r\n                let listUrl = [];\r\n                //Xóa file vật lý\r\n                for (let file of files) {\r\n                  let url = folder.Path + '/' + file.TenTaiLieu;\r\n                  listUrl.push(url);\r\n                }\r\n                \r\n                deleteFile(listUrl);\r\n              }\r\n            });\r\n\r\n          //xóa file trên db\r\n          let del_file = await trx.table('FileDinhKemMesssage')\r\n            .where('Message_Id', args.Id).del();\r\n\r\n          //Xóa message\r\n          let del = await trx.table('Message').where('Id', args.Id).del();\r\n          \r\n          return {\r\n            messageCode: 200,\r\n            message: 'message.xoa.success'\r\n          }\r\n        });\r\n        \r\n        return trx_result;\r\n      }\r\n      catch (e) \r\n      {\r\n        console.log(e)\r\n        return {\r\n          messageCode: 500,\r\n          message: 'message.xoa.error'\r\n        }\r\n      }\r\n    }),\r\n    sendMessage: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let userId = context.currentUser.id;\r\n\r\n        let trx_result = await db.transaction(async trx => {\r\n          let _message = await trx.table('Message').where('Id', args.Id).first();\r\n\r\n          //Nếu tin nhắn ở trạng thái Đã gửi\r\n          if (!_message) {\r\n            throw new Error('message.send_message.error_message_not_found');\r\n          }\r\n\r\n          let list_phuong_thuc = _message.PhuongThucGui.split(',');\r\n          \r\n          //Cập nhật trạng thái message\r\n          let update_mess_status = await trx.table('Message').where('Id', args.Id)\r\n            .update({\r\n              Status: 1,\r\n              SendDate: new Date()\r\n            });\r\n          \r\n          //Theo người dùng\r\n          if (_message.NhomNguoiNhan == 1) {\r\n            //Đếm số người nhận\r\n            let list_nguoi_dung_id = await trx.table('Message_NguoiDung')\r\n              .where('Message_Id', args.Id)\r\n              .select('NguoiDung_Id')\r\n              .pluck('NguoiDung_Id');\r\n            \r\n            if (list_nguoi_dung_id.length === 0) {\r\n              throw new Error('message.send_message.error_user_not_found');\r\n            }\r\n\r\n            //Gửi trên Hệ thống\r\n            if (list_phuong_thuc.includes('GTHT')) {\r\n              //Cập nhật trạng thái bảng mapping\r\n              let update_mess_mapping = await trx.table('Message_NguoiDung')\r\n                .where('Message_Id', args.Id)\r\n                .update({\r\n                  Status: 1\r\n                });\r\n              \r\n              //Thông báo cho client\r\n              pubsub.publish(MESSAGE_COUNT, { RefreshMessageCount: true });\r\n            }\r\n\r\n            //Gửi email\r\n            if (list_phuong_thuc.includes('GE')) {\r\n              //Lấy list Email\r\n              let list_email = await trx.table('NguoiDung')\r\n                .whereIn('Id', list_nguoi_dung_id)\r\n                .select('Email')\r\n                .pluck('Email');\r\n                \r\n              let convertTitle =  _message.TieuDe + ' - Người gửi: ' + context.currentUser.HoTen;\r\n\r\n              //Lấy list file đính kèm\r\n              let folder = await trx.table('ThuMuc').where('Id', 1).andWhere('Type', 0).first();\r\n              if (!folder) \r\n                throw new Error('message.send_message.error_folder_not_found');\r\n\r\n              let listFileDinhKem = await trx.table('FileDinhKemMesssage')\r\n                .where('Message_Id', args.Id)\r\n                .select('TenTaiLieu')\r\n                .pluck('TenTaiLieu');\r\n\r\n              //convert attachments\r\n              let attachments = [];\r\n              listFileDinhKem.forEach(item => {\r\n                let attachment = {\r\n                  filename: item, \r\n                  content: `${folder.TenThuMuc}/${item}`\r\n                };\r\n                attachments.push(attachment);\r\n              });\r\n\r\n              sendEmail.sendEmail(list_email.join(','), convertTitle, _message.NoiDung, attachments, 'stream')\r\n                .catch(console.error);\r\n            }\r\n          }\r\n          //Theo nhóm quyền\r\n          else if (_message.NhomNguoiNhan == 2) {\r\n            //Đếm số Nhóm quyền đc chọn\r\n            let count = await trx.table('Message_NhomQuyen')\r\n              .where('Message_Id', args.Id)\r\n              .count('Id');\r\n            \r\n            if (Number.parseInt(count[0].count) === 0) {\r\n              throw new Error('message.send_message.error_permission_not_found');\r\n            }\r\n\r\n            //Lấy ra list UserId gắn với các nhóm quyền\r\n            let list_nhom_quyen_id = await trx.table('Message_NhomQuyen')\r\n              .where('Message_Id', args.Id)\r\n              .select('NhomQuyen_Id')\r\n              .pluck('NhomQuyen_Id');\r\n            \r\n            let list_nguoi_dung = await trx.table('PhanQuyen')\r\n              .whereIn('NhomQuyen_Id', list_nhom_quyen_id)\r\n              .select('NguoiDung_Id')\r\n              .distinct();\r\n            \r\n            if (list_nguoi_dung.length == 0) \r\n              throw new Error('message.send_message.error_user_not_found');\r\n\r\n            //Gửi trên Hệ thống\r\n            if (list_phuong_thuc.includes('GTHT')) {\r\n              //Thêm người dùng vào bảng mapping\r\n              let list_nguoi_dung_id = list_nguoi_dung.map(x => x.NguoiDung_Id);\r\n              let list_message_nguoiDung = [];\r\n              list_nguoi_dung_id.forEach(item => {\r\n                let message_nguoiDung = {\r\n                  Message_Id: args.Id,\r\n                  NguoiDung_Id: item,\r\n                  Status: 1\r\n                };\r\n                list_message_nguoiDung.push(message_nguoiDung);\r\n              });\r\n\r\n              await trx.table('Message_NguoiDung')\r\n                .insert(list_message_nguoiDung);\r\n\r\n              //Thông báo cho client\r\n              pubsub.publish(MESSAGE_COUNT, { RefreshMessageCount: true });\r\n            }\r\n\r\n            //Gửi email\r\n            if (list_phuong_thuc.includes('GE')) {\r\n              //Lấy list Email\r\n              let list_email = await trx.table('NguoiDung')\r\n                .whereIn('Id', [1])\r\n                .select('Email')\r\n                .pluck('Email');\r\n              \r\n              let convertTitle =  _message.TieuDe + ' - Người gửi: ' + context.currentUser.HoTen;\r\n              \r\n              //Lấy list file đính kèm\r\n              let folder = await trx.table('ThuMuc').where('Id', 1).andWhere('Type', 0).first();\r\n              if (!folder) \r\n                throw new Error('message.send_message.error_folder_not_found');\r\n\r\n              let listFileDinhKem = await trx.table('FileDinhKemMesssage')\r\n                .where('Message_Id', args.Id)\r\n                .select('TenTaiLieu')\r\n                .pluck('TenTaiLieu');\r\n              \r\n              //convert attachments\r\n              let attachments = [];\r\n              listFileDinhKem.forEach(item => {\r\n                let attachment = {\r\n                  filename: item, \r\n                  content: `${folder.TenThuMuc}/${item}`\r\n                };\r\n                attachments.push(attachment);\r\n              });\r\n\r\n              sendEmail.sendEmail(list_email.join(','), convertTitle, _message.NoiDung, attachments, 'stream')\r\n                .catch(console.error);\r\n            }\r\n          }\r\n          \r\n          return {\r\n            messageCode: 200,\r\n            message: 'message.send_message.success'\r\n          }\r\n        });\r\n        \r\n        return trx_result;\r\n      }\r\n      catch (e) \r\n      {\r\n        return {\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    }),\r\n    deleteFileDinhKemMessage: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let fileDinhKem = await db.table('FileDinhKemMesssage')\r\n          .where('Id', args.Id).first();\r\n        \r\n        if (!fileDinhKem)\r\n          return {\r\n            messageCode: 500,\r\n            message: 'message.delete_file_dinh_kem.error'\r\n          }\r\n\r\n        let _message = await db.table('Message')\r\n          .where('Id', fileDinhKem.Message_Id).first();\r\n\r\n        if (_message.Status == 1)\r\n          return {\r\n            messageCode: 500,\r\n            message: 'message.delete_file_dinh_kem.error_tin_nhan_da_gui'\r\n          }\r\n        \r\n        let trx_result = await db.transaction(async trx => {\r\n          let del = await trx.table('FileDinhKemMesssage')\r\n          .where('Id', args.Id).first().del();\r\n\r\n          //Xóa file vật lý\r\n          let folder = await trx.table('ThuMuc').where('Id', fileDinhKem.ThuMuc_Id).first();\r\n          deleteFile([folder.Path + '/' + fileDinhKem.TenTaiLieu]);\r\n\r\n          return {\r\n            messageCode: 200,\r\n            message: 'message.delete_file_dinh_kem.success'\r\n          }\r\n        });\r\n        \r\n        return trx_result;\r\n      }\r\n      catch (e) {\r\n        return {\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    }),\r\n    downloadFileMess: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let fileDinhKem = await db.table('FileDinhKemMesssage')\r\n          .where('Id', args.Id).first();\r\n        let folder = await db.table('ThuMuc').where('Id', fileDinhKem.ThuMuc_Id).first();\r\n        \r\n        if (!fileDinhKem)\r\n          return {\r\n            messageCode: 500,\r\n            message: 'message.downloadFile.error_file_not_found'\r\n          }\r\n        \r\n        let { base64, type } = downloadFile(folder.Path + '/' + fileDinhKem.TenTaiLieu);\r\n\r\n        return {\r\n          base64: base64,\r\n          type: type,\r\n          messageCode: 200,\r\n          message: 'message.downloadFile.success'\r\n        }\r\n      }\r\n      catch (e) {\r\n        return {\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    }),\r\n    xemMessage: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let userId = context.currentUser.id;\r\n\r\n        let _updateMessage = await db.table('Message_NguoiDung')\r\n          .where('Id', args.Id).update({\r\n            DaXem: true\r\n          });\r\n\r\n        //Thông báo cho client\r\n        pubsub.publish(MESSAGE_COUNT, { RefreshMessageCount: true });\r\n        \r\n        return {\r\n          messageCode: 200,\r\n          message: 'message.xemMessage.success'\r\n        }\r\n      }\r\n      catch (e) {\r\n        return {\r\n          messageCode: 500,\r\n          message: e.toString()\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  //SUBSCRIPTIONS\r\n  Subscription: {\r\n    RefreshMessageCount: {\r\n      // More on pubsub below\r\n      subscribe: withFilter(\r\n        () => pubsub.asyncIterator(MESSAGE_COUNT),\r\n        (payload, variables) => {\r\n          // Only push an update if the comment is on\r\n          // the correct repository for this operation\r\n\r\n          return true;\r\n        },\r\n      ),\r\n    },\r\n  },\r\n}\r\n\r\nmodule.exports = resolvers"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518330
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\middleware\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\middleware\\\\authenticated-guard.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\middleware\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\middleware\\authenticated-guard.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\middleware\\authenticated-guard.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\middleware\\authenticated-guard.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\middleware\\",
        "sourceFileName": "authenticated-guard.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (next) {\n  return function (root, args, context, info) {\n    if (!context.currentUser) {\n      throw new Error(\"Unauthenticated!\");\n    }\n\n    return next(root, args, context, info);\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0ZWQtZ3VhcmQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm5leHQiLCJyb290IiwiYXJncyIsImNvbnRleHQiLCJpbmZvIiwiY3VycmVudFVzZXIiLCJFcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLElBQUQ7QUFBQSxTQUFVLFVBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFhQyxPQUFiLEVBQXNCQyxJQUF0QixFQUErQjtBQUN0RCxRQUFJLENBQUNELE9BQU8sQ0FBQ0UsV0FBYixFQUEwQjtBQUN0QixZQUFNLElBQUlDLEtBQUosb0JBQU47QUFDSDs7QUFFRCxXQUFPTixJQUFJLENBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFhQyxPQUFiLEVBQXNCQyxJQUF0QixDQUFYO0FBQ0gsR0FOZ0I7QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTW92ZXNNYXN0ZXJcXENvZGVcXEFsaXNhbU1vdmUtTW92ZXNNYXR0ZXJcXHNlcnZlclxcc3JjXFxtaWRkbGV3YXJlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChuZXh0KSA9PiAocm9vdCwgYXJncywgY29udGV4dCwgaW5mbykgPT4ge1xyXG4gICAgaWYgKCFjb250ZXh0LmN1cnJlbnRVc2VyKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmF1dGhlbnRpY2F0ZWQhYCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5leHQocm9vdCwgYXJncywgY29udGV4dCwgaW5mbyk7XHJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "authenticated-guard.js"
      ],
      "names": [
        "module",
        "exports",
        "next",
        "root",
        "args",
        "context",
        "info",
        "currentUser",
        "Error"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD;AAAA,SAAU,UAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAsBC,IAAtB,EAA+B;AACtD,QAAI,CAACD,OAAO,CAACE,WAAb,EAA0B;AACtB,YAAM,IAAIC,KAAJ,oBAAN;AACH;;AAED,WAAON,IAAI,CAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAsBC,IAAtB,CAAX;AACH,GANgB;AAAA,CAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\middleware\\",
      "sourcesContent": [
        "module.exports = (next) => (root, args, context, info) => {\r\n    if (!context.currentUser) {\r\n        throw new Error(`Unauthenticated!`);\r\n    }\r\n\r\n    return next(root, args, context, info);\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518344
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\common\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\common\\\\handleFile.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\handleFile.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\handleFile.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\handleFile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\",
        "sourceFileName": "handleFile.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar _require = require('fs'),\n    unlinkSync = _require.unlinkSync;\n\nvar JSZip = require(\"jszip\");\n\nvar handleFile = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(files, folderUrl) {\n      var _iterator, _step, file, _yield$file, filename, mimetype, createReadStream, location, myfile;\n\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _iterator = _createForOfIteratorHelper(files);\n              _context.prev = 2;\n\n              _iterator.s();\n\n            case 4:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 18;\n                break;\n              }\n\n              file = _step.value;\n              _context.next = 8;\n              return file;\n\n            case 8:\n              _yield$file = _context.sent;\n              filename = _yield$file.filename;\n              mimetype = _yield$file.mimetype;\n              createReadStream = _yield$file.createReadStream;\n              location = path.join(__dirname, \"../upload/\".concat(folderUrl, \"/\"), \"\".concat(filename));\n              myfile = createReadStream();\n              _context.next = 16;\n              return myfile.pipe(fs.createWriteStream(location));\n\n            case 16:\n              _context.next = 4;\n              break;\n\n            case 18:\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](2);\n\n              _iterator.e(_context.t0);\n\n            case 23:\n              _context.prev = 23;\n\n              _iterator.f();\n\n              return _context.finish(23);\n\n            case 26:\n              _context.next = 31;\n              break;\n\n            case 28:\n              _context.prev = 28;\n              _context.t1 = _context[\"catch\"](0);\n              throw new Error(_context.t1);\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 28], [2, 20, 23, 26]]);\n    }));\n\n    function saveFile(_x, _x2) {\n      return _saveFile.apply(this, arguments);\n    }\n\n    return saveFile;\n  }(),\n  deleteFile: function deleteFile(listUrl) {\n    try {\n      var _iterator2 = _createForOfIteratorHelper(listUrl),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var url = _step2.value;\n          unlinkSync(path.join(__dirname, \"../upload/\".concat(url)));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } catch (e) {\n      throw new Error(e);\n    }\n  },\n  zipFile: function () {\n    var _zipFile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(paths) {\n      var zip, i, stream;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              zip = new JSZip();\n\n              for (i = 0; i <= paths.length - 1; i++) {\n                // đọc file và thêm file đó vào zip\n                stream = fs.createReadStream(path.join(__dirname, \"../upload/\".concat(paths[i])));\n                zip.file(paths[i], stream);\n              }\n\n              _context2.next = 5;\n              return zip.generateAsync({\n                type: \"base64\"\n              });\n\n            case 5:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw new Error(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    function zipFile(_x3) {\n      return _zipFile.apply(this, arguments);\n    }\n\n    return zipFile;\n  }(),\n  downloadFile: function downloadFile(url) {\n    try {\n      var extension = url.substring(url.lastIndexOf('.'));\n      var type = '';\n\n      switch (extension) {\n        case \".zip\":\n          type = \"application/zip\";\n          break;\n\n        case \".rar\":\n          type = \"application/x-rar-compressed\";\n          break;\n\n        case \".ppt\":\n          type = \"application/vnd.ms-powerpoint\";\n          break;\n\n        case \".pptx\":\n          type = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n          break;\n\n        case \".pdf\":\n          type = \"application/pdf\";\n          break;\n\n        case \".txt\":\n          type = \"text/plain\";\n          break;\n\n        case \".jpeg\":\n          type = \"image/jpeg\";\n          break;\n\n        case \".jpg\":\n          type = \"image/jpeg\";\n          break;\n\n        case \".tif\":\n          type = \"image/tiff\";\n          break;\n\n        case \".tiff\":\n          type = \"image/tiff\";\n          break;\n\n        case \".png\":\n          type = \"image/png\";\n          break;\n\n        case \".bmp\":\n          type = \"image/bmp\";\n          break;\n\n        case \".gif\":\n          type = \"image/gif\";\n          break;\n\n        case \".ico\":\n          type = \"image/x-icon\";\n          break;\n\n        case \".svg\":\n          type = \"image/svg+xml\";\n          break;\n\n        case \".webp\":\n          type = \"image/webp\";\n          break;\n\n        case \".doc\":\n          type = \"application/msword\";\n          break;\n\n        case \".docx\":\n          type = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n          break;\n\n        case \".xls\":\n          type = \"application/vnd.ms-excel\";\n          break;\n\n        case \".xlsx\":\n          type = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n          break;\n\n        default:\n          type = \"\";\n          break;\n      }\n\n      var base64 = fs.readFileSync(path.join(__dirname, \"../upload/\".concat(url)), {\n        encoding: 'base64'\n      });\n      return {\n        base64: base64,\n        type: type\n      };\n    } catch (e) {\n      throw new Error(e);\n    }\n  },\n  existFile: function () {\n    var _existFile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(filename, folderUrl) {\n      var location;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (filename) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", false);\n\n            case 2:\n              location = path.join(__dirname, \"../upload/\".concat(folderUrl, \"/\"), \"\".concat(filename));\n              return _context3.abrupt(\"return\", fs.existsSync(location));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function existFile(_x4, _x5) {\n      return _existFile.apply(this, arguments);\n    }\n\n    return existFile;\n  }()\n};\nmodule.exports = handleFile;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "handleFile.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "unlinkSync",
        "JSZip",
        "handleFile",
        "saveFile",
        "files",
        "folderUrl",
        "file",
        "filename",
        "mimetype",
        "createReadStream",
        "location",
        "join",
        "__dirname",
        "myfile",
        "pipe",
        "createWriteStream",
        "Error",
        "deleteFile",
        "listUrl",
        "url",
        "e",
        "zipFile",
        "paths",
        "zip",
        "i",
        "length",
        "stream",
        "generateAsync",
        "type",
        "downloadFile",
        "extension",
        "substring",
        "lastIndexOf",
        "base64",
        "readFileSync",
        "encoding",
        "existFile",
        "existsSync",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,eAAuBA,OAAO,CAAC,IAAD,CAA9B;AAAA,IAAQE,UAAR,YAAQA,UAAR;;AACA,IAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMI,UAAU,GAAG;AACjBC,EAAAA,QAAQ;AAAA,kGAAE,iBAAOC,KAAP,EAAcC,SAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAEWD,KAFX;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEGE,cAAAA,IAFH;AAAA;AAAA,qBAGiDA,IAHjD;;AAAA;AAAA;AAGEC,cAAAA,QAHF,eAGEA,QAHF;AAGYC,cAAAA,QAHZ,eAGYA,QAHZ;AAGsBC,cAAAA,gBAHtB,eAGsBA,gBAHtB;AAIAC,cAAAA,QAJA,GAIWX,IAAI,CAACY,IAAL,CAAUC,SAAV,sBAAkCP,SAAlC,kBAAmDE,QAAnD,EAJX;AAKAM,cAAAA,MALA,GAKSJ,gBAAgB,EALzB;AAAA;AAAA,qBAMEI,MAAM,CAACC,IAAP,CAAYjB,EAAE,CAACkB,iBAAH,CAAqBL,QAArB,CAAZ,CANF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAUA,IAAIM,KAAJ,aAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADS;AAcjBC,EAAAA,UAAU,EAAE,oBAACC,OAAD,EAAa;AACvB,QAAI;AAAA,kDACcA,OADd;AAAA;;AAAA;AACF;AAAA,cAASC,GAAT;AACEnB,UAAAA,UAAU,CAACD,IAAI,CAACY,IAAL,CAAUC,SAAV,sBAAkCO,GAAlC,EAAD,CAAV;AADF;AADE;AAAA;AAAA;AAAA;AAAA;AAGH,KAHD,CAIA,OAAOC,CAAP,EAAU;AACR,YAAM,IAAIJ,KAAJ,CAAUI,CAAV,CAAN;AACD;AACF,GAtBgB;AAuBjBC,EAAAA,OAAO;AAAA,iGAAE,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECC,cAAAA,GAFD,GAEO,IAAItB,KAAJ,EAFP;;AAGL,mBAASuB,CAAT,GAAa,CAAb,EAAgBA,CAAC,IAAIF,KAAK,CAACG,MAAN,GAAe,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACME,gBAAAA,MAFoC,GAE3B7B,EAAE,CAACY,gBAAH,CAAoBV,IAAI,CAACY,IAAL,CAAUC,SAAV,sBAAkCU,KAAK,CAACE,CAAD,CAAvC,EAApB,CAF2B;AAG1CD,gBAAAA,GAAG,CAACjB,IAAJ,CAASgB,KAAK,CAACE,CAAD,CAAd,EAAmBE,MAAnB;AACD;;AAPI;AAAA,qBAQQH,GAAG,CAACI,aAAJ,CAAkB;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAlB,CARR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAUC,IAAIZ,KAAJ,cAVD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvBU;AAoCjBa,EAAAA,YAAY,EAAE,sBAACV,GAAD,EAAS;AACrB,QAAI;AACF,UAAIW,SAAS,GAAGX,GAAG,CAACY,SAAJ,CAAcZ,GAAG,CAACa,WAAJ,CAAgB,GAAhB,CAAd,CAAhB;AACA,UAAIJ,IAAI,GAAG,EAAX;;AACA,cAAQE,SAAR;AACE,aAAK,MAAL;AAAaF,UAAAA,IAAI,GAAG,iBAAP;AAA0B;;AACvC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,8BAAP;AAAuC;;AACpD,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,+BAAP;AAAwC;;AACrD,aAAK,OAAL;AAAcA,UAAAA,IAAI,GAAG,2EAAP;AAAoF;;AAClG,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,iBAAP;AAA0B;;AACvC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,YAAP;AAAqB;;AAClC,aAAK,OAAL;AAAcA,UAAAA,IAAI,GAAG,YAAP;AAAqB;;AACnC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,YAAP;AAAqB;;AAClC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,YAAP;AAAqB;;AAClC,aAAK,OAAL;AAAcA,UAAAA,IAAI,GAAG,YAAP;AAAqB;;AACnC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,WAAP;AAAoB;;AACjC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,WAAP;AAAoB;;AACjC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,WAAP;AAAoB;;AACjC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,cAAP;AAAuB;;AACpC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,eAAP;AAAwB;;AACrC,aAAK,OAAL;AAAcA,UAAAA,IAAI,GAAG,YAAP;AAAqB;;AACnC,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,oBAAP;AAA6B;;AAC1C,aAAK,OAAL;AAAcA,UAAAA,IAAI,GAAG,yEAAP;AAAkF;;AAChG,aAAK,MAAL;AAAaA,UAAAA,IAAI,GAAG,0BAAP;AAAmC;;AAChD,aAAK,OAAL;AAAcA,UAAAA,IAAI,GAAG,mEAAP;AAA4E;;AAC1F;AAASA,UAAAA,IAAI,GAAG,EAAP;AAAW;AArBtB;;AAwBA,UAAIK,MAAM,GAAGpC,EAAE,CAACqC,YAAH,CAAgBnC,IAAI,CAACY,IAAL,CAAUC,SAAV,sBAAkCO,GAAlC,EAAhB,EAA0D;AAAEgB,QAAAA,QAAQ,EAAE;AAAZ,OAA1D,CAAb;AAEA,aAAO;AACLF,QAAAA,MAAM,EAAEA,MADH;AAELL,QAAAA,IAAI,EAAEA;AAFD,OAAP;AAID,KAjCD,CAkCA,OAAOR,CAAP,EAAU;AACR,YAAM,IAAIJ,KAAJ,CAAUI,CAAV,CAAN;AACD;AACF,GA1EgB;AA2EjBgB,EAAAA,SAAS;AAAA,mGAAE,kBAAO7B,QAAP,EAAiBF,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJE,QADI;AAAA;AAAA;AAAA;;AAAA,gDACa,KADb;;AAAA;AAELG,cAAAA,QAFK,GAEMX,IAAI,CAACY,IAAL,CAAUC,SAAV,sBAAkCP,SAAlC,kBAAmDE,QAAnD,EAFN;AAAA,gDAGFV,EAAE,CAACwC,UAAH,CAAc3B,QAAd,CAHE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA3EQ,CAAnB;AAkFA4B,MAAM,CAACC,OAAP,GAAiBrC,UAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\common\\",
      "sourcesContent": [
        "const fs = require('fs');\r\nconst path = require('path');\r\nconst { unlinkSync } = require('fs');\r\nconst JSZip = require(\"jszip\");\r\n\r\nconst handleFile = {\r\n  saveFile: async (files, folderUrl) => {\r\n    try {\r\n      for (let file of files) {\r\n        let { filename, mimetype, createReadStream } = await file;\r\n        let location = path.join(__dirname, `../upload/${folderUrl}/`, `${filename}`);\r\n        let myfile = createReadStream();\r\n        await myfile.pipe(fs.createWriteStream(location));\r\n      }\r\n    }\r\n    catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  },\r\n  deleteFile: (listUrl) => {\r\n    try {\r\n      for (let url of listUrl)\r\n        unlinkSync(path.join(__dirname, `../upload/${url}`));\r\n    }\r\n    catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  },\r\n  zipFile: async (paths) => {\r\n    try {\r\n      const zip = new JSZip();\r\n      for (let i = 0; i <= paths.length - 1; i++) {\r\n        // đọc file và thêm file đó vào zip\r\n        const stream = fs.createReadStream(path.join(__dirname, `../upload/${paths[i]}`));\r\n        zip.file(paths[i], stream);\r\n      }\r\n      return await zip.generateAsync({ type: \"base64\" })\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  },\r\n  downloadFile: (url) => {\r\n    try {\r\n      let extension = url.substring(url.lastIndexOf('.'));\r\n      let type = '';\r\n      switch (extension) {\r\n        case \".zip\": type = \"application/zip\"; break;\r\n        case \".rar\": type = \"application/x-rar-compressed\"; break;\r\n        case \".ppt\": type = \"application/vnd.ms-powerpoint\"; break;\r\n        case \".pptx\": type = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"; break;\r\n        case \".pdf\": type = \"application/pdf\"; break;\r\n        case \".txt\": type = \"text/plain\"; break;\r\n        case \".jpeg\": type = \"image/jpeg\"; break;\r\n        case \".jpg\": type = \"image/jpeg\"; break;\r\n        case \".tif\": type = \"image/tiff\"; break;\r\n        case \".tiff\": type = \"image/tiff\"; break;\r\n        case \".png\": type = \"image/png\"; break;\r\n        case \".bmp\": type = \"image/bmp\"; break;\r\n        case \".gif\": type = \"image/gif\"; break;\r\n        case \".ico\": type = \"image/x-icon\"; break;\r\n        case \".svg\": type = \"image/svg+xml\"; break;\r\n        case \".webp\": type = \"image/webp\"; break;\r\n        case \".doc\": type = \"application/msword\"; break;\r\n        case \".docx\": type = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"; break;\r\n        case \".xls\": type = \"application/vnd.ms-excel\"; break;\r\n        case \".xlsx\": type = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"; break;\r\n        default: type = \"\"; break;\r\n      }\r\n\r\n      let base64 = fs.readFileSync(path.join(__dirname, `../upload/${url}`), { encoding: 'base64' });\r\n\r\n      return {\r\n        base64: base64,\r\n        type: type\r\n      }\r\n    }\r\n    catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  },\r\n  existFile: async (filename, folderUrl) => {\r\n    if (!filename) return false\r\n    let location = path.join(__dirname, `../upload/${folderUrl}/`, `${filename}`);\r\n    return fs.existsSync(location)\r\n  }\r\n}\r\n\r\nmodule.exports = handleFile;"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518284
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\subscription\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\subscription\\\\const-subscription.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\subscription\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\subscription\\const-subscription.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\subscription\\const-subscription.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\subscription\\const-subscription.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\subscription\\",
        "sourceFileName": "const-subscription.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar subscription = {\n  MESSAGE_COUNT: \"MESSAGE_COUNT\",\n  NOTIFICATION: \"NOTIFICATION\"\n};\nmodule.exports = subscription;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0LXN1YnNjcmlwdGlvbi5qcyJdLCJuYW1lcyI6WyJzdWJzY3JpcHRpb24iLCJNRVNTQUdFX0NPVU5UIiwiTk9USUZJQ0FUSU9OIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxZQUFZLEdBQUc7QUFDbkJDLEVBQUFBLGFBQWEsRUFBRSxlQURJO0FBRW5CQyxFQUFBQSxZQUFZLEVBQUU7QUFGSyxDQUFyQjtBQUtBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLFlBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxNb3Zlc01hc3RlclxcQ29kZVxcQWxpc2FtTW92ZS1Nb3Zlc01hdHRlclxcc2VydmVyXFxzcmNcXGdyYXBocWxcXHN1YnNjcmlwdGlvblxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc3Vic2NyaXB0aW9uID0ge1xyXG4gIE1FU1NBR0VfQ09VTlQ6IFwiTUVTU0FHRV9DT1VOVFwiLFxyXG4gIE5PVElGSUNBVElPTjogXCJOT1RJRklDQVRJT05cIlxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHN1YnNjcmlwdGlvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "const-subscription.js"
      ],
      "names": [
        "subscription",
        "MESSAGE_COUNT",
        "NOTIFICATION",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,eADI;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKAC,MAAM,CAACC,OAAP,GAAiBJ,YAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\subscription\\",
      "sourcesContent": [
        "const subscription = {\r\n  MESSAGE_COUNT: \"MESSAGE_COUNT\",\r\n  NOTIFICATION: \"NOTIFICATION\"\r\n}\r\n\r\nmodule.exports = subscription;"
      ]
    },
    "sourceType": "script",
    "mtime": 1652671518335
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\dashboard\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\types\\\\dashboard\\\\dashboard.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\dashboard\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\dashboard\\dashboard.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\dashboard\\dashboard.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\dashboard\\dashboard.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\dashboard\\",
        "sourceFileName": "dashboard.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _templateObject;\n\nvar _require = require('apollo-server-express'),\n    gql = _require.gql;\n\nvar typeDefs = gql(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  type Charity {\\n    Moves_Charity_ID: Int,\\n    Charity_Name: String,\\n    Charity_Commission_No: String,\\n    Contact_Name: String,\\n    Contact_Email: String,\\n    Contact_Phone_Number: String,\\n    Charity_URL: String,\\n    Charity_Aims: String,\\n    Charity_icon: String,\\n    Charity_Geographical_Scope: Int,\\n    Charity_Income_Band_ID: Int,\\n    Charity_Date_Founded: Timestamp,\\n    Date_Active: Timestamp,\\n\\n    #Vitual Field:\\n    Charity_Geographical_Scope_Name: String,\\n    Charity_Income_Band_Name: String,\\n    Charity_Sector: String, #Sector 1, Sector 2, Sector 3,...\\n  }\\n\\n  type Company {\\n    Moves_Company_ID: Int,\\n    Company_Name: String,\\n    Company_Number: Float,\\n    Company_URL: String,\\n    Company_Icon: String,\\n    Company_CSR_Statement: String,\\n    Is_Active: Boolean,\\n    Contact_Name: String,\\n    Contact_Email: String,\\n    Contact_Phone_Number: String,\\n    Date_Active: Timestamp,\\n  }\\n\\n  type New {\\n    News_Item_ID: Int,\\n    News_Image: String,\\n    News_Title: String,\\n    News_Content: String,\\n  }\\n\\n  type GetDashboardProfileResponse {\\n    Charity: Charity,\\n    Company: Company,\\n    messageCode: Int!,\\n    message: String!,\\n  }\\n\\n  type GetDashboardAccountInfoResponse {\\n    Role: String,\\n    User_Id: Int,\\n    User_Name: String,\\n    User_Email: String,\\n    messageCode: Int!,\\n    message: String!,\\n  }\\n\\n  type GetDashboardNewsResponse {\\n    ListNew: [New],\\n    messageCode: Int!,\\n    message: String!,\\n  }\\n\\n  type GetDashboardReportResponse {\\n    TotalAppeal: Int,\\n    TotalCampaign: Int,\\n    TotalDonation: Int,\\n    messageCode: Int!,\\n    message: String!,\\n  }\\n\\n  type GetDashboardPreviewResponse {\\n    Charity_Name: String,\\n    Charity_icon: String,\\n    Charity_Aims: String,\\n    Date_Active: Timestamp,\\n    TotalAppeal: Int,\\n    TotalCampaign: Int,\\n    TotalDonation: Int,\\n    messageCode: Int!,\\n    message: String!,\\n  }\\n\\n  input UpdateDashboardCharityInput {\\n    Charity_URL: String,\\n    Contact_Name: String,\\n    Contact_Email: String,\\n    Contact_Phone_Number: String,\\n    Charity_Date_Founded: Timestamp,\\n    Charity_Aims: String,\\n    Charity_icon: String,\\n    Charity_Geographical_Scope: Int,\\n    Charity_Income_Band_ID: Int,\\n    ListCategoryId: [Int]\\n  }\\n\\n  # ROOT TYPE\\n  type Query {\\n    getDashboardProfile(type: Int!, objectId: Int): GetDashboardProfileResponse,\\n    getDashboardAccountInfo(type: Int!, objectId: Int): GetDashboardAccountInfoResponse,\\n    getDashboardNews(type: Int!, objectId: Int): GetDashboardNewsResponse,\\n    getDashboardReport(type: Int!, objectId: Int): GetDashboardReportResponse,\\n    getDashboardPreview(type: Int!, objectId: Int, ): GetDashboardPreviewResponse,\\n  }\\n\\n  type Mutation {\\n    updateDashboardCharity(UpdateDashboardCharityInput: UpdateDashboardCharityInput): BaseResponse\\n  }\\n\"])));\nmodule.exports = typeDefs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZ3FsIiwidHlwZURlZnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGVBQWdCQSxPQUFPLENBQUMsdUJBQUQsQ0FBdkI7QUFBQSxJQUFRQyxHQUFSLFlBQVFBLEdBQVI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHRCxHQUFILCszRkFBZDtBQWdIQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixRQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTW92ZXNNYXN0ZXJcXENvZGVcXEFsaXNhbU1vdmUtTW92ZXNNYXR0ZXJcXHNlcnZlclxcc3JjXFxncmFwaHFsXFx0eXBlc1xcZGFzaGJvYXJkXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGdxbCB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XHJcblxyXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcclxuICB0eXBlIENoYXJpdHkge1xyXG4gICAgTW92ZXNfQ2hhcml0eV9JRDogSW50LFxyXG4gICAgQ2hhcml0eV9OYW1lOiBTdHJpbmcsXHJcbiAgICBDaGFyaXR5X0NvbW1pc3Npb25fTm86IFN0cmluZyxcclxuICAgIENvbnRhY3RfTmFtZTogU3RyaW5nLFxyXG4gICAgQ29udGFjdF9FbWFpbDogU3RyaW5nLFxyXG4gICAgQ29udGFjdF9QaG9uZV9OdW1iZXI6IFN0cmluZyxcclxuICAgIENoYXJpdHlfVVJMOiBTdHJpbmcsXHJcbiAgICBDaGFyaXR5X0FpbXM6IFN0cmluZyxcclxuICAgIENoYXJpdHlfaWNvbjogU3RyaW5nLFxyXG4gICAgQ2hhcml0eV9HZW9ncmFwaGljYWxfU2NvcGU6IEludCxcclxuICAgIENoYXJpdHlfSW5jb21lX0JhbmRfSUQ6IEludCxcclxuICAgIENoYXJpdHlfRGF0ZV9Gb3VuZGVkOiBUaW1lc3RhbXAsXHJcbiAgICBEYXRlX0FjdGl2ZTogVGltZXN0YW1wLFxyXG5cclxuICAgICNWaXR1YWwgRmllbGQ6XHJcbiAgICBDaGFyaXR5X0dlb2dyYXBoaWNhbF9TY29wZV9OYW1lOiBTdHJpbmcsXHJcbiAgICBDaGFyaXR5X0luY29tZV9CYW5kX05hbWU6IFN0cmluZyxcclxuICAgIENoYXJpdHlfU2VjdG9yOiBTdHJpbmcsICNTZWN0b3IgMSwgU2VjdG9yIDIsIFNlY3RvciAzLC4uLlxyXG4gIH1cclxuXHJcbiAgdHlwZSBDb21wYW55IHtcclxuICAgIE1vdmVzX0NvbXBhbnlfSUQ6IEludCxcclxuICAgIENvbXBhbnlfTmFtZTogU3RyaW5nLFxyXG4gICAgQ29tcGFueV9OdW1iZXI6IEZsb2F0LFxyXG4gICAgQ29tcGFueV9VUkw6IFN0cmluZyxcclxuICAgIENvbXBhbnlfSWNvbjogU3RyaW5nLFxyXG4gICAgQ29tcGFueV9DU1JfU3RhdGVtZW50OiBTdHJpbmcsXHJcbiAgICBJc19BY3RpdmU6IEJvb2xlYW4sXHJcbiAgICBDb250YWN0X05hbWU6IFN0cmluZyxcclxuICAgIENvbnRhY3RfRW1haWw6IFN0cmluZyxcclxuICAgIENvbnRhY3RfUGhvbmVfTnVtYmVyOiBTdHJpbmcsXHJcbiAgICBEYXRlX0FjdGl2ZTogVGltZXN0YW1wLFxyXG4gIH1cclxuXHJcbiAgdHlwZSBOZXcge1xyXG4gICAgTmV3c19JdGVtX0lEOiBJbnQsXHJcbiAgICBOZXdzX0ltYWdlOiBTdHJpbmcsXHJcbiAgICBOZXdzX1RpdGxlOiBTdHJpbmcsXHJcbiAgICBOZXdzX0NvbnRlbnQ6IFN0cmluZyxcclxuICB9XHJcblxyXG4gIHR5cGUgR2V0RGFzaGJvYXJkUHJvZmlsZVJlc3BvbnNlIHtcclxuICAgIENoYXJpdHk6IENoYXJpdHksXHJcbiAgICBDb21wYW55OiBDb21wYW55LFxyXG4gICAgbWVzc2FnZUNvZGU6IEludCEsXHJcbiAgICBtZXNzYWdlOiBTdHJpbmchLFxyXG4gIH1cclxuXHJcbiAgdHlwZSBHZXREYXNoYm9hcmRBY2NvdW50SW5mb1Jlc3BvbnNlIHtcclxuICAgIFJvbGU6IFN0cmluZyxcclxuICAgIFVzZXJfSWQ6IEludCxcclxuICAgIFVzZXJfTmFtZTogU3RyaW5nLFxyXG4gICAgVXNlcl9FbWFpbDogU3RyaW5nLFxyXG4gICAgbWVzc2FnZUNvZGU6IEludCEsXHJcbiAgICBtZXNzYWdlOiBTdHJpbmchLFxyXG4gIH1cclxuXHJcbiAgdHlwZSBHZXREYXNoYm9hcmROZXdzUmVzcG9uc2Uge1xyXG4gICAgTGlzdE5ldzogW05ld10sXHJcbiAgICBtZXNzYWdlQ29kZTogSW50ISxcclxuICAgIG1lc3NhZ2U6IFN0cmluZyEsXHJcbiAgfVxyXG5cclxuICB0eXBlIEdldERhc2hib2FyZFJlcG9ydFJlc3BvbnNlIHtcclxuICAgIFRvdGFsQXBwZWFsOiBJbnQsXHJcbiAgICBUb3RhbENhbXBhaWduOiBJbnQsXHJcbiAgICBUb3RhbERvbmF0aW9uOiBJbnQsXHJcbiAgICBtZXNzYWdlQ29kZTogSW50ISxcclxuICAgIG1lc3NhZ2U6IFN0cmluZyEsXHJcbiAgfVxyXG5cclxuICB0eXBlIEdldERhc2hib2FyZFByZXZpZXdSZXNwb25zZSB7XHJcbiAgICBDaGFyaXR5X05hbWU6IFN0cmluZyxcclxuICAgIENoYXJpdHlfaWNvbjogU3RyaW5nLFxyXG4gICAgQ2hhcml0eV9BaW1zOiBTdHJpbmcsXHJcbiAgICBEYXRlX0FjdGl2ZTogVGltZXN0YW1wLFxyXG4gICAgVG90YWxBcHBlYWw6IEludCxcclxuICAgIFRvdGFsQ2FtcGFpZ246IEludCxcclxuICAgIFRvdGFsRG9uYXRpb246IEludCxcclxuICAgIG1lc3NhZ2VDb2RlOiBJbnQhLFxyXG4gICAgbWVzc2FnZTogU3RyaW5nISxcclxuICB9XHJcblxyXG4gIGlucHV0IFVwZGF0ZURhc2hib2FyZENoYXJpdHlJbnB1dCB7XHJcbiAgICBDaGFyaXR5X1VSTDogU3RyaW5nLFxyXG4gICAgQ29udGFjdF9OYW1lOiBTdHJpbmcsXHJcbiAgICBDb250YWN0X0VtYWlsOiBTdHJpbmcsXHJcbiAgICBDb250YWN0X1Bob25lX051bWJlcjogU3RyaW5nLFxyXG4gICAgQ2hhcml0eV9EYXRlX0ZvdW5kZWQ6IFRpbWVzdGFtcCxcclxuICAgIENoYXJpdHlfQWltczogU3RyaW5nLFxyXG4gICAgQ2hhcml0eV9pY29uOiBTdHJpbmcsXHJcbiAgICBDaGFyaXR5X0dlb2dyYXBoaWNhbF9TY29wZTogSW50LFxyXG4gICAgQ2hhcml0eV9JbmNvbWVfQmFuZF9JRDogSW50LFxyXG4gICAgTGlzdENhdGVnb3J5SWQ6IFtJbnRdXHJcbiAgfVxyXG5cclxuICAjIFJPT1QgVFlQRVxyXG4gIHR5cGUgUXVlcnkge1xyXG4gICAgZ2V0RGFzaGJvYXJkUHJvZmlsZSh0eXBlOiBJbnQhLCBvYmplY3RJZDogSW50KTogR2V0RGFzaGJvYXJkUHJvZmlsZVJlc3BvbnNlLFxyXG4gICAgZ2V0RGFzaGJvYXJkQWNjb3VudEluZm8odHlwZTogSW50ISwgb2JqZWN0SWQ6IEludCk6IEdldERhc2hib2FyZEFjY291bnRJbmZvUmVzcG9uc2UsXHJcbiAgICBnZXREYXNoYm9hcmROZXdzKHR5cGU6IEludCEsIG9iamVjdElkOiBJbnQpOiBHZXREYXNoYm9hcmROZXdzUmVzcG9uc2UsXHJcbiAgICBnZXREYXNoYm9hcmRSZXBvcnQodHlwZTogSW50ISwgb2JqZWN0SWQ6IEludCk6IEdldERhc2hib2FyZFJlcG9ydFJlc3BvbnNlLFxyXG4gICAgZ2V0RGFzaGJvYXJkUHJldmlldyh0eXBlOiBJbnQhLCBvYmplY3RJZDogSW50LCApOiBHZXREYXNoYm9hcmRQcmV2aWV3UmVzcG9uc2UsXHJcbiAgfVxyXG5cclxuICB0eXBlIE11dGF0aW9uIHtcclxuICAgIHVwZGF0ZURhc2hib2FyZENoYXJpdHkoVXBkYXRlRGFzaGJvYXJkQ2hhcml0eUlucHV0OiBVcGRhdGVEYXNoYm9hcmRDaGFyaXR5SW5wdXQpOiBCYXNlUmVzcG9uc2VcclxuICB9XHJcbmA7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVEZWZzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dashboard.js"
      ],
      "names": [
        "require",
        "gql",
        "typeDefs",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,eAAgBA,OAAO,CAAC,uBAAD,CAAvB;AAAA,IAAQC,GAAR,YAAQA,GAAR;;AAEA,IAAMC,QAAQ,GAAGD,GAAH,+3FAAd;AAgHAE,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\types\\dashboard\\",
      "sourcesContent": [
        "const { gql } = require('apollo-server-express');\r\n\r\nconst typeDefs = gql`\r\n  type Charity {\r\n    Moves_Charity_ID: Int,\r\n    Charity_Name: String,\r\n    Charity_Commission_No: String,\r\n    Contact_Name: String,\r\n    Contact_Email: String,\r\n    Contact_Phone_Number: String,\r\n    Charity_URL: String,\r\n    Charity_Aims: String,\r\n    Charity_icon: String,\r\n    Charity_Geographical_Scope: Int,\r\n    Charity_Income_Band_ID: Int,\r\n    Charity_Date_Founded: Timestamp,\r\n    Date_Active: Timestamp,\r\n\r\n    #Vitual Field:\r\n    Charity_Geographical_Scope_Name: String,\r\n    Charity_Income_Band_Name: String,\r\n    Charity_Sector: String, #Sector 1, Sector 2, Sector 3,...\r\n  }\r\n\r\n  type Company {\r\n    Moves_Company_ID: Int,\r\n    Company_Name: String,\r\n    Company_Number: Float,\r\n    Company_URL: String,\r\n    Company_Icon: String,\r\n    Company_CSR_Statement: String,\r\n    Is_Active: Boolean,\r\n    Contact_Name: String,\r\n    Contact_Email: String,\r\n    Contact_Phone_Number: String,\r\n    Date_Active: Timestamp,\r\n  }\r\n\r\n  type New {\r\n    News_Item_ID: Int,\r\n    News_Image: String,\r\n    News_Title: String,\r\n    News_Content: String,\r\n  }\r\n\r\n  type GetDashboardProfileResponse {\r\n    Charity: Charity,\r\n    Company: Company,\r\n    messageCode: Int!,\r\n    message: String!,\r\n  }\r\n\r\n  type GetDashboardAccountInfoResponse {\r\n    Role: String,\r\n    User_Id: Int,\r\n    User_Name: String,\r\n    User_Email: String,\r\n    messageCode: Int!,\r\n    message: String!,\r\n  }\r\n\r\n  type GetDashboardNewsResponse {\r\n    ListNew: [New],\r\n    messageCode: Int!,\r\n    message: String!,\r\n  }\r\n\r\n  type GetDashboardReportResponse {\r\n    TotalAppeal: Int,\r\n    TotalCampaign: Int,\r\n    TotalDonation: Int,\r\n    messageCode: Int!,\r\n    message: String!,\r\n  }\r\n\r\n  type GetDashboardPreviewResponse {\r\n    Charity_Name: String,\r\n    Charity_icon: String,\r\n    Charity_Aims: String,\r\n    Date_Active: Timestamp,\r\n    TotalAppeal: Int,\r\n    TotalCampaign: Int,\r\n    TotalDonation: Int,\r\n    messageCode: Int!,\r\n    message: String!,\r\n  }\r\n\r\n  input UpdateDashboardCharityInput {\r\n    Charity_URL: String,\r\n    Contact_Name: String,\r\n    Contact_Email: String,\r\n    Contact_Phone_Number: String,\r\n    Charity_Date_Founded: Timestamp,\r\n    Charity_Aims: String,\r\n    Charity_icon: String,\r\n    Charity_Geographical_Scope: Int,\r\n    Charity_Income_Band_ID: Int,\r\n    ListCategoryId: [Int]\r\n  }\r\n\r\n  # ROOT TYPE\r\n  type Query {\r\n    getDashboardProfile(type: Int!, objectId: Int): GetDashboardProfileResponse,\r\n    getDashboardAccountInfo(type: Int!, objectId: Int): GetDashboardAccountInfoResponse,\r\n    getDashboardNews(type: Int!, objectId: Int): GetDashboardNewsResponse,\r\n    getDashboardReport(type: Int!, objectId: Int): GetDashboardReportResponse,\r\n    getDashboardPreview(type: Int!, objectId: Int, ): GetDashboardPreviewResponse,\r\n  }\r\n\r\n  type Mutation {\r\n    updateDashboardCharity(UpdateDashboardCharityInput: UpdateDashboardCharityInput): BaseResponse\r\n  }\r\n`;\r\n\r\nmodule.exports = typeDefs;"
      ]
    },
    "sourceType": "script",
    "mtime": 1653278562082
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\dashboard\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"filename\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\\\\src\\\\graphql\\\\resolves\\\\dashboard\\\\resolveDashboard.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\MovesMaster\\\\Code\\\\AlisamMove-MovesMatter\\\\server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\dashboard\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\dashboard\\resolveDashboard.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\dashboard\\resolveDashboard.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\dashboard\\resolveDashboard.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\dashboard\\",
        "sourceFileName": "resolveDashboard.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar db = require('../../../data/knex-db');\n\nvar authenticated = require('../../../middleware/authenticated-guard');\n\nvar resolvers = {\n  Query: {\n    getDashboardProfile: authenticated( /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(parent, args, context) {\n        var User_ID, User, Moves_Charity_ID, Charity, listCharitySectorID, listCharitySector, Charity_Geographical_Scope, Charity_Income_Band, Moves_Company_ID, Company;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                User_ID = context.currentUser.User_ID;\n                _context.next = 4;\n                return db.table('User').where('User_ID', User_ID).first();\n\n              case 4:\n                User = _context.sent;\n\n                if (!(args.type == 1)) {\n                  _context.next = 27;\n                  break;\n                }\n\n                Moves_Charity_ID = User.Moves_Charity_ID;\n\n                if (Moves_Charity_ID) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'Charity ID is not exists'\n                });\n\n              case 9:\n                _context.next = 11;\n                return db.table('Charity').where('Moves_Charity_ID', Moves_Charity_ID).first();\n\n              case 11:\n                Charity = _context.sent;\n                _context.next = 14;\n                return db.table('Charity_Sector').where('Moves_Charity_ID', Moves_Charity_ID).select('Category_ID');\n\n              case 14:\n                listCharitySectorID = _context.sent;\n                _context.next = 17;\n                return db.table('Category').whereIn('Category_ID', listCharitySectorID.map(function (x) {\n                  return x.Category_ID;\n                })).select('Category_Name');\n\n              case 17:\n                listCharitySector = _context.sent;\n                _context.next = 20;\n                return db.table('Category').where('Category_ID', Charity.Charity_Geographical_Scope).first();\n\n              case 20:\n                Charity_Geographical_Scope = _context.sent;\n                _context.next = 23;\n                return db.table('Category').where('Category_ID', Charity.Charity_Income_Band_ID).first();\n\n              case 23:\n                Charity_Income_Band = _context.sent;\n                return _context.abrupt(\"return\", {\n                  Charity: {\n                    Moves_Charity_ID: Charity.Moves_Charity_ID,\n                    Charity_Name: Charity.Charity_Name,\n                    Charity_Commission_No: Charity.Charity_Commission_No,\n                    Contact_Name: Charity.Contact_Name,\n                    Contact_Email: Charity.Contact_Email,\n                    Contact_Phone_Number: Charity.Contact_Phone_Number,\n                    Charity_URL: Charity.Charity_URL,\n                    Charity_Aims: Charity.Charity_Aims,\n                    Charity_icon: Charity.Charity_icon,\n                    Charity_Geographical_Scope: Charity.Charity_Geographical_Scope,\n                    Charity_Income_Band_ID: Charity.Charity_Income_Band_ID,\n                    Charity_Date_Founded: Charity.Charity_Date_Founded,\n                    Date_Active: Charity.Date_Active,\n                    Charity_Geographical_Scope_Name: Charity_Geographical_Scope === null || Charity_Geographical_Scope === void 0 ? void 0 : Charity_Geographical_Scope.Category_Name,\n                    Charity_Income_Band_Name: Charity_Income_Band === null || Charity_Income_Band === void 0 ? void 0 : Charity_Income_Band.Category_Name,\n                    Charity_Sector: listCharitySector.map(function (x) {\n                      return x.Category_Name;\n                    }).join(\", \")\n                  },\n                  Company: null,\n                  messageCode: 200,\n                  message: 'Success'\n                });\n\n              case 27:\n                if (!(args.type == 2)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                Moves_Company_ID = User.Moves_Company_ID;\n\n                if (Moves_Company_ID) {\n                  _context.next = 31;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'Company ID is not exists'\n                });\n\n              case 31:\n                _context.next = 33;\n                return db.table('Company').where('Moves_Company_ID', Moves_Company_ID).first();\n\n              case 33:\n                Company = _context.sent;\n                return _context.abrupt(\"return\", {\n                  Company: {\n                    Moves_Company_ID: Company.Moves_Company_ID,\n                    Company_Name: Company.Company_Name,\n                    Company_Number: Company.Company_Number,\n                    Company_URL: Company.Company_URL,\n                    Company_Icon: Company.Company_Icon,\n                    Company_CSR_Statement: Company.Company_CSR_Statement,\n                    Is_Active: Company.Is_Active,\n                    Contact_Name: Company.Contact_Name,\n                    Contact_Email: Company.Contact_Email,\n                    Contact_Phone_Number: Company.Contact_Phone_Number\n                  },\n                  Charity: null,\n                  messageCode: 200,\n                  message: 'Success'\n                });\n\n              case 37:\n                if (args.type == 3) {} //Charity Directory\n                else if (args.type == 4) {} //Company Directory\n                else if (args.type == 5) {}\n\n              case 38:\n                return _context.abrupt(\"return\", {\n                  messageCode: 200,\n                  message: 'Success'\n                });\n\n              case 41:\n                _context.prev = 41;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 44:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 41]]);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }()),\n    getDashboardAccountInfo: authenticated( /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(parent, args, context) {\n        var User_ID, User;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                User_ID = context.currentUser.User_ID;\n                _context2.next = 4;\n                return db.table('User').where('User_ID', User_ID).first();\n\n              case 4:\n                User = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  Role: '',\n                  User_Id: User_ID,\n                  User_Name: User.User_Name,\n                  User_Email: User.User_Email,\n                  messageCode: 200,\n                  message: 'Success'\n                });\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n\n      return function (_x4, _x5, _x6) {\n        return _ref2.apply(this, arguments);\n      };\n    }()),\n    getDashboardNews: authenticated( /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(parent, args, context) {\n        var User_ID, User, listNew, Moves_Charity_ID, Moves_Company_ID;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                User_ID = context.currentUser.User_ID;\n                _context3.next = 4;\n                return db.table('User').where('User_ID', User_ID).first();\n\n              case 4:\n                User = _context3.sent;\n                listNew = []; //Charity\n\n                if (!(args.type == 1)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                Moves_Charity_ID = User.Moves_Charity_ID;\n\n                if (Moves_Charity_ID) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'Charity ID is not exists'\n                });\n\n              case 10:\n                _context3.next = 12;\n                return db.table('News_Item').select('News_Item_ID', 'News_Image', 'News_Title', 'News_Content').where('News_Publish', true).andWhere('Moves_Charity_ID', User.Moves_Charity_ID).orderBy('News_Publish_Date', 'desc').limit(3);\n\n              case 12:\n                listNew = _context3.sent;\n                _context3.next = 25;\n                break;\n\n              case 15:\n                if (!(args.type == 2)) {\n                  _context3.next = 24;\n                  break;\n                }\n\n                Moves_Company_ID = User.Moves_Company_ID;\n\n                if (Moves_Company_ID) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'Company ID is not exists'\n                });\n\n              case 19:\n                _context3.next = 21;\n                return db.table('News_Item').select('News_Item_ID', 'News_Image', 'News_Title', 'News_Content').where('News_Publish', true).andWhere('Moves_Company_ID', User.Moves_Company_ID).orderBy('News_Publish_Date', 'desc').limit(3);\n\n              case 21:\n                listNew = _context3.sent;\n                _context3.next = 25;\n                break;\n\n              case 24:\n                if (args.type == 3) {} //Charity Directory\n                else if (args.type == 4) {} //Company Directory\n                else if (args.type == 5) {}\n\n              case 25:\n                return _context3.abrupt(\"return\", {\n                  listNew: listNew,\n                  messageCode: 200,\n                  message: 'Success'\n                });\n\n              case 28:\n                _context3.prev = 28;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 31:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 28]]);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref3.apply(this, arguments);\n      };\n    }()),\n    getDashboardReport: authenticated( /*#__PURE__*/function () {\n      var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(parent, args, context) {\n        var _result, _result2, _result3, User_ID, User, result, _donation$sum, listCampaign, listMapCampaignId, listCampaignId, donation;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                User_ID = context.currentUser.User_ID;\n                _context4.next = 4;\n                return db.table('User').where('User_ID', User_ID).first();\n\n              case 4:\n                User = _context4.sent;\n                result = null; //Charity\n\n                if (!(args.type == 1)) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                _context4.next = 9;\n                return dashboardHelper(User);\n\n              case 9:\n                result = _context4.sent;\n                _context4.next = 27;\n                break;\n\n              case 12:\n                if (!(args.type == 2)) {\n                  _context4.next = 26;\n                  break;\n                }\n\n                _context4.next = 15;\n                return db.table('Campaign').where('Moves_Company_ID', User.Moves_Company_ID).select('Campaign_ID');\n\n              case 15:\n                listCampaign = _context4.sent;\n                _context4.next = 18;\n                return db.table('Match').where('Moves_Company_ID', User.Moves_Company_ID).select('Campaign_ID');\n\n              case 18:\n                listMapCampaignId = _context4.sent;\n                listCampaignId = [].concat((0, _toConsumableArray2[\"default\"])(listCampaign.map(function (x) {\n                  return x.Campaign_ID;\n                })), (0, _toConsumableArray2[\"default\"])(listMapCampaignId.map(function (x) {\n                  return x.Campaign_ID;\n                })));\n                _context4.next = 22;\n                return db.table('Donation').andWhere('Moves_Charity_ID', User.Moves_Charity_ID).orWhereIn('Campaign_ID', listCampaignId).sum('Financial_Amount');\n\n              case 22:\n                donation = _context4.sent;\n                result = {\n                  totalAppeal: 0,\n                  totalCampaign: listCampaignId.length,\n                  totalDonation: (_donation$sum = donation.sum) !== null && _donation$sum !== void 0 ? _donation$sum : 0\n                };\n                _context4.next = 27;\n                break;\n\n              case 26:\n                if (args.type == 3) {} //Charity Directory\n                else if (args.type == 4) {} //Company Directory\n                else if (args.type == 5) {}\n\n              case 27:\n                return _context4.abrupt(\"return\", {\n                  TotalAppeal: (_result = result) === null || _result === void 0 ? void 0 : _result.totalAppeal,\n                  TotalCampaign: (_result2 = result) === null || _result2 === void 0 ? void 0 : _result2.totalCampaign,\n                  TotalDonation: (_result3 = result) === null || _result3 === void 0 ? void 0 : _result3.totalDonation,\n                  message: 'Success',\n                  messageCode: 200\n                });\n\n              case 30:\n                _context4.prev = 30;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 33:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 30]]);\n      }));\n\n      return function (_x10, _x11, _x12) {\n        return _ref4.apply(this, arguments);\n      };\n    }()),\n    getDashboardPreview: authenticated( /*#__PURE__*/function () {\n      var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(parent, args, context) {\n        var User_ID, User, Moves_Charity_ID, Charity, result;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                User_ID = context.currentUser.User_ID;\n                _context5.next = 4;\n                return db.table('User').where('User_ID', User_ID).first();\n\n              case 4:\n                User = _context5.sent;\n                Moves_Charity_ID = User.Moves_Charity_ID;\n\n                if (Moves_Charity_ID) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'Charity ID is not exists'\n                });\n\n              case 8:\n                _context5.next = 10;\n                return db.table('Charity').where('Moves_Charity_ID', Moves_Charity_ID).first();\n\n              case 10:\n                Charity = _context5.sent;\n                _context5.next = 13;\n                return dashboardHelper(User);\n\n              case 13:\n                result = _context5.sent;\n                return _context5.abrupt(\"return\", {\n                  Charity_Name: Charity.Charity_Name,\n                  Charity_icon: Charity.Charity_icon,\n                  Charity_Aims: Charity.Charity_Aims,\n                  Date_Active: Charity.Date_Active,\n                  TotalAppeal: result.totalAppeal,\n                  TotalCampaign: result.totalCampaign,\n                  TotalDonation: result.totalDonation,\n                  message: 'Success',\n                  messageCode: 200\n                });\n\n              case 17:\n                _context5.prev = 17;\n                _context5.t0 = _context5[\"catch\"](0);\n                return _context5.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 17]]);\n      }));\n\n      return function (_x13, _x14, _x15) {\n        return _ref5.apply(this, arguments);\n      };\n    }())\n  },\n  Mutation: {\n    updateDashboardCharity: authenticated( /*#__PURE__*/function () {\n      var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(parent, args, context) {\n        var User_ID, User, Charity, ListCategoryId, Moves_Charity_ID, trx_result;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                User_ID = context.currentUser.User_ID;\n                _context7.next = 4;\n                return db.table('User').where('User_ID', User_ID).first();\n\n              case 4:\n                User = _context7.sent;\n                Charity = args.UpdateDashboardCharityInput.Charity;\n                ListCategoryId = args.UpdateDashboardCharityInput.ListCategoryId;\n                Moves_Charity_ID = User.Moves_Charity_ID;\n\n                if (Moves_Charity_ID) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  messageCode: 404,\n                  message: 'Charity ID is not exists'\n                });\n\n              case 10:\n                _context7.next = 12;\n                return db.transaction( /*#__PURE__*/function () {\n                  var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(trx) {\n                    var listCharitySector;\n                    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.next = 2;\n                            return trx.table('Charity').where('Moves_Charity_ID', Moves_Charity_ID).update({\n                              Charity_URL: Charity.Charity_URL,\n                              Contact_Name: Charity.Contact_Name,\n                              Contact_Email: Charity.Contact_Email,\n                              Contact_Phone_Number: Charity.Contact_Phone_Number,\n                              Charity_Date_Founded: Charity.Charity_Date_Founded,\n                              Charity_Aims: Charity.Charity_Aims,\n                              Charity_icon: Charity.Charity_icon,\n                              Charity_Geographical_Scope: Charity.Charity_Geographical_Scope,\n                              Charity_Income_Band_ID: Charity.Charity_Income_Band_ID\n                            });\n\n                          case 2:\n                            _context6.next = 4;\n                            return trx.table('Charity_Sector').where('Moves_Charity_ID', Moves_Charity_ID).del();\n\n                          case 4:\n                            listCharitySector = [];\n                            ListCategoryId.forEach(function (item) {\n                              var new_item = {\n                                Moves_Charity_ID: Moves_Charity_ID,\n                                Category_ID: item\n                              };\n                              listCharitySector.push(new_item);\n                            });\n                            _context6.next = 8;\n                            return trx.table('Charity_Sector').insert(listCharitySector);\n\n                          case 8:\n                            return _context6.abrupt(\"return\", {\n                              message: 'Success',\n                              messageCode: 200\n                            });\n\n                          case 9:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function (_x19) {\n                    return _ref7.apply(this, arguments);\n                  };\n                }());\n\n              case 12:\n                trx_result = _context7.sent;\n                return _context7.abrupt(\"return\", trx_result);\n\n              case 16:\n                _context7.prev = 16;\n                _context7.t0 = _context7[\"catch\"](0);\n                return _context7.abrupt(\"return\", {\n                  message: 'Internal Server Error',\n                  messageCode: 500\n                });\n\n              case 19:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 16]]);\n      }));\n\n      return function (_x16, _x17, _x18) {\n        return _ref6.apply(this, arguments);\n      };\n    }())\n  }\n};\n\nfunction dashboardHelper(_x20) {\n  return _dashboardHelper.apply(this, arguments);\n}\n\nfunction _dashboardHelper() {\n  _dashboardHelper = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(User) {\n    var _donation$sum2;\n\n    var listAppeal, listCampaign, listAppealId, listCampaignId, donation;\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return db.table('Appeal').where('Moves_Charity_ID', User.Moves_Charity_ID);\n\n          case 2:\n            listAppeal = _context8.sent;\n            _context8.next = 5;\n            return db.table('Campaign').where('Moves_Charity_ID', User.Moves_Charity_ID);\n\n          case 5:\n            listCampaign = _context8.sent;\n            listAppealId = listAppeal.map(function (x) {\n              return x.Appeal_ID;\n            });\n            listCampaignId = listCampaign.map(function (x) {\n              return x.Campaign_ID;\n            });\n            _context8.next = 10;\n            return db.table('Donation').andWhere('Moves_Charity_ID', User.Moves_Charity_ID).orWhereIn('Appeal_ID', listAppealId).orWhereIn('Campaign_ID', listCampaignId).sum('Financial_Amount');\n\n          case 10:\n            donation = _context8.sent;\n            return _context8.abrupt(\"return\", {\n              totalAppeal: listAppeal.length,\n              totalCampaign: listCampaign.length,\n              totalDonation: (_donation$sum2 = donation.sum) !== null && _donation$sum2 !== void 0 ? _donation$sum2 : 0\n            });\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _dashboardHelper.apply(this, arguments);\n}\n\nmodule.exports = resolvers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolveDashboard.js"
      ],
      "names": [
        "db",
        "require",
        "authenticated",
        "resolvers",
        "Query",
        "getDashboardProfile",
        "parent",
        "args",
        "context",
        "User_ID",
        "currentUser",
        "table",
        "where",
        "first",
        "User",
        "type",
        "Moves_Charity_ID",
        "messageCode",
        "message",
        "Charity",
        "select",
        "listCharitySectorID",
        "whereIn",
        "map",
        "x",
        "Category_ID",
        "listCharitySector",
        "Charity_Geographical_Scope",
        "Charity_Income_Band_ID",
        "Charity_Income_Band",
        "Charity_Name",
        "Charity_Commission_No",
        "Contact_Name",
        "Contact_Email",
        "Contact_Phone_Number",
        "Charity_URL",
        "Charity_Aims",
        "Charity_icon",
        "Charity_Date_Founded",
        "Date_Active",
        "Charity_Geographical_Scope_Name",
        "Category_Name",
        "Charity_Income_Band_Name",
        "Charity_Sector",
        "join",
        "Company",
        "Moves_Company_ID",
        "Company_Name",
        "Company_Number",
        "Company_URL",
        "Company_Icon",
        "Company_CSR_Statement",
        "Is_Active",
        "getDashboardAccountInfo",
        "Role",
        "User_Id",
        "User_Name",
        "User_Email",
        "getDashboardNews",
        "listNew",
        "andWhere",
        "orderBy",
        "limit",
        "getDashboardReport",
        "result",
        "dashboardHelper",
        "listCampaign",
        "listMapCampaignId",
        "listCampaignId",
        "Campaign_ID",
        "orWhereIn",
        "sum",
        "donation",
        "totalAppeal",
        "totalCampaign",
        "length",
        "totalDonation",
        "TotalAppeal",
        "TotalCampaign",
        "TotalDonation",
        "getDashboardPreview",
        "Mutation",
        "updateDashboardCharity",
        "UpdateDashboardCharityInput",
        "ListCategoryId",
        "transaction",
        "trx",
        "update",
        "del",
        "forEach",
        "item",
        "new_item",
        "push",
        "insert",
        "trx_result",
        "listAppeal",
        "listAppealId",
        "Appeal_ID",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,uBAAD,CAAlB;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,yCAAD,CAA7B;;AAEA,IAAME,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,mBAAmB,EAAEH,aAAa;AAAA,+FAAC,iBAAOI,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3BC,gBAAAA,OAF2B,GAEjBD,OAAO,CAACE,WAAR,CAAoBD,OAFH;AAAA;AAAA,uBAGdT,EAAE,CAACW,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,SAAvB,EAAkCH,OAAlC,EAA2CI,KAA3C,EAHc;;AAAA;AAG3BC,gBAAAA,IAH2B;;AAAA,sBAM3BP,IAAI,CAACQ,IAAL,IAAa,CANc;AAAA;AAAA;AAAA;;AAOzBC,gBAAAA,gBAPyB,GAONF,IAAI,CAACE,gBAPC;;AAAA,oBASxBA,gBATwB;AAAA;AAAA;AAAA;;AAAA,iDAUpB;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAVoB;;AAAA;AAAA;AAAA,uBAgBTlB,EAAE,CAACW,KAAH,CAAS,SAAT,EAAoBC,KAApB,CAA0B,kBAA1B,EAA8CI,gBAA9C,EAAgEH,KAAhE,EAhBS;;AAAA;AAgBzBM,gBAAAA,OAhByB;AAAA;AAAA,uBAiBGnB,EAAE,CAACW,KAAH,CAAS,gBAAT,EAC7BC,KAD6B,CACvB,kBADuB,EACHI,gBADG,EAE7BI,MAF6B,CAEtB,aAFsB,CAjBH;;AAAA;AAiBzBC,gBAAAA,mBAjByB;AAAA;AAAA,uBAqBCrB,EAAE,CAACW,KAAH,CAAS,UAAT,EAC3BW,OAD2B,CACnB,aADmB,EACJD,mBAAmB,CAACE,GAApB,CAAwB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,WAAN;AAAA,iBAAzB,CADI,EAE3BL,MAF2B,CAEpB,eAFoB,CArBD;;AAAA;AAqBzBM,gBAAAA,iBArByB;AAAA;AAAA,uBAyBU1B,EAAE,CAACW,KAAH,CAAS,UAAT,EACpCC,KADoC,CAC9B,aAD8B,EACfO,OAAO,CAACQ,0BADO,EACqBd,KADrB,EAzBV;;AAAA;AAyBzBc,gBAAAA,0BAzByB;AAAA;AAAA,uBA2BG3B,EAAE,CAACW,KAAH,CAAS,UAAT,EAC7BC,KAD6B,CACvB,aADuB,EACRO,OAAO,CAACS,sBADA,EACwBf,KADxB,EA3BH;;AAAA;AA2BzBgB,gBAAAA,mBA3ByB;AAAA,iDA8BtB;AACLV,kBAAAA,OAAO,EAAE;AACPH,oBAAAA,gBAAgB,EAAEG,OAAO,CAACH,gBADnB;AAEPc,oBAAAA,YAAY,EAAEX,OAAO,CAACW,YAFf;AAGPC,oBAAAA,qBAAqB,EAAEZ,OAAO,CAACY,qBAHxB;AAIPC,oBAAAA,YAAY,EAAEb,OAAO,CAACa,YAJf;AAKPC,oBAAAA,aAAa,EAAEd,OAAO,CAACc,aALhB;AAMPC,oBAAAA,oBAAoB,EAAEf,OAAO,CAACe,oBANvB;AAOPC,oBAAAA,WAAW,EAAEhB,OAAO,CAACgB,WAPd;AAQPC,oBAAAA,YAAY,EAAEjB,OAAO,CAACiB,YARf;AASPC,oBAAAA,YAAY,EAAElB,OAAO,CAACkB,YATf;AAUPV,oBAAAA,0BAA0B,EAAER,OAAO,CAACQ,0BAV7B;AAWPC,oBAAAA,sBAAsB,EAAET,OAAO,CAACS,sBAXzB;AAYPU,oBAAAA,oBAAoB,EAAEnB,OAAO,CAACmB,oBAZvB;AAaPC,oBAAAA,WAAW,EAAEpB,OAAO,CAACoB,WAbd;AAcPC,oBAAAA,+BAA+B,EAAEb,0BAAF,aAAEA,0BAAF,uBAAEA,0BAA0B,CAAEc,aAdtD;AAePC,oBAAAA,wBAAwB,EAAEb,mBAAF,aAAEA,mBAAF,uBAAEA,mBAAmB,CAAEY,aAfxC;AAgBPE,oBAAAA,cAAc,EAAEjB,iBAAiB,CAACH,GAAlB,CAAsB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACiB,aAAN;AAAA,qBAAvB,EAA4CG,IAA5C,CAAiD,IAAjD;AAhBT,mBADJ;AAmBLC,kBAAAA,OAAO,EAAE,IAnBJ;AAoBL5B,kBAAAA,WAAW,EAAE,GApBR;AAqBLC,kBAAAA,OAAO,EAAE;AArBJ,iBA9BsB;;AAAA;AAAA,sBAuDtBX,IAAI,CAACQ,IAAL,IAAa,CAvDS;AAAA;AAAA;AAAA;;AAwDzB+B,gBAAAA,gBAxDyB,GAwDNhC,IAAI,CAACgC,gBAxDC;;AAAA,oBA0DxBA,gBA1DwB;AAAA;AAAA;AAAA;;AAAA,iDA2DpB;AACL7B,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBA3DoB;;AAAA;AAAA;AAAA,uBAiETlB,EAAE,CAACW,KAAH,CAAS,SAAT,EAAoBC,KAApB,CAA0B,kBAA1B,EAA8CkC,gBAA9C,EAAgEjC,KAAhE,EAjES;;AAAA;AAiEzBgC,gBAAAA,OAjEyB;AAAA,iDAmEtB;AACLA,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,gBAAgB,EAAED,OAAO,CAACC,gBADnB;AAEPC,oBAAAA,YAAY,EAAEF,OAAO,CAACE,YAFf;AAGPC,oBAAAA,cAAc,EAAEH,OAAO,CAACG,cAHjB;AAIPC,oBAAAA,WAAW,EAAEJ,OAAO,CAACI,WAJd;AAKPC,oBAAAA,YAAY,EAAEL,OAAO,CAACK,YALf;AAMPC,oBAAAA,qBAAqB,EAAEN,OAAO,CAACM,qBANxB;AAOPC,oBAAAA,SAAS,EAAEP,OAAO,CAACO,SAPZ;AAQPpB,oBAAAA,YAAY,EAAEa,OAAO,CAACb,YARf;AASPC,oBAAAA,aAAa,EAAEY,OAAO,CAACZ,aAThB;AAUPC,oBAAAA,oBAAoB,EAAEW,OAAO,CAACX;AAVvB,mBADJ;AAaLf,kBAAAA,OAAO,EAAE,IAbJ;AAcLF,kBAAAA,WAAW,EAAE,GAdR;AAeLC,kBAAAA,OAAO,EAAE;AAfJ,iBAnEsB;;AAAA;AAsF1B,oBAAIX,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB,CAFI,CAGL;AAHK,qBAIA,IAAIR,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB,CAFI,CAGL;AAHK,qBAIA,IAAIR,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB;;AAhG8B;AAAA,iDAkGxB;AACLE,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAlGwB;;AAAA;AAAA;AAAA;AAAA,iDAwGxB;AACLA,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBAxGwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QAD7B;AA+GLoC,IAAAA,uBAAuB,EAAEnD,aAAa;AAAA,gGAAC,kBAAOI,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE/BC,gBAAAA,OAF+B,GAErBD,OAAO,CAACE,WAAR,CAAoBD,OAFC;AAAA;AAAA,uBAGlBT,EAAE,CAACW,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,SAAvB,EAAkCH,OAAlC,EAA2CI,KAA3C,EAHkB;;AAAA;AAG/BC,gBAAAA,IAH+B;AAAA,kDAK5B;AACLwC,kBAAAA,IAAI,EAAE,EADD;AAELC,kBAAAA,OAAO,EAAE9C,OAFJ;AAGL+C,kBAAAA,SAAS,EAAE1C,IAAI,CAAC0C,SAHX;AAILC,kBAAAA,UAAU,EAAE3C,IAAI,CAAC2C,UAJZ;AAKLxC,kBAAAA,WAAW,EAAE,GALR;AAMLC,kBAAAA,OAAO,EAAE;AANJ,iBAL4B;;AAAA;AAAA;AAAA;AAAA,kDAe5B;AACLA,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBAf4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QA/GjC;AAoILyC,IAAAA,gBAAgB,EAAExD,aAAa;AAAA,gGAAC,kBAAOI,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,gBAAAA,OAFwB,GAEdD,OAAO,CAACE,WAAR,CAAoBD,OAFN;AAAA;AAAA,uBAGXT,EAAE,CAACW,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,SAAvB,EAAkCH,OAAlC,EAA2CI,KAA3C,EAHW;;AAAA;AAGxBC,gBAAAA,IAHwB;AAIxB6C,gBAAAA,OAJwB,GAId,EAJc,EAM5B;;AAN4B,sBAOxBpD,IAAI,CAACQ,IAAL,IAAa,CAPW;AAAA;AAAA;AAAA;;AAQtBC,gBAAAA,gBARsB,GAQHF,IAAI,CAACE,gBARF;;AAAA,oBAUrBA,gBAVqB;AAAA;AAAA;AAAA;;AAAA,kDAWjB;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAXiB;;AAAA;AAAA;AAAA,uBAiBVlB,EAAE,CAACW,KAAH,CAAS,WAAT,EACfS,MADe,CACR,cADQ,EACQ,YADR,EACsB,YADtB,EACoC,cADpC,EAEfR,KAFe,CAET,cAFS,EAEO,IAFP,EAGfgD,QAHe,CAGN,kBAHM,EAGc9C,IAAI,CAACE,gBAHnB,EAIf6C,OAJe,CAIP,mBAJO,EAIc,MAJd,EAKfC,KALe,CAKT,CALS,CAjBU;;AAAA;AAiB1BH,gBAAAA,OAjB0B;AAAA;AAAA;;AAAA;AAAA,sBAyBnBpD,IAAI,CAACQ,IAAL,IAAa,CAzBM;AAAA;AAAA;AAAA;;AA0BtB+B,gBAAAA,gBA1BsB,GA0BHhC,IAAI,CAACgC,gBA1BF;;AAAA,oBA4BrBA,gBA5BqB;AAAA;AAAA;AAAA;;AAAA,kDA6BjB;AACL7B,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBA7BiB;;AAAA;AAAA;AAAA,uBAmCVlB,EAAE,CAACW,KAAH,CAAS,WAAT,EACfS,MADe,CACR,cADQ,EACQ,YADR,EACsB,YADtB,EACoC,cADpC,EAEfR,KAFe,CAET,cAFS,EAEO,IAFP,EAGfgD,QAHe,CAGN,kBAHM,EAGc9C,IAAI,CAACgC,gBAHnB,EAIfe,OAJe,CAIP,mBAJO,EAIc,MAJd,EAKfC,KALe,CAKT,CALS,CAnCU;;AAAA;AAmC1BH,gBAAAA,OAnC0B;AAAA;AAAA;;AAAA;AA2CvB,oBAAIpD,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB,CAFI,CAGL;AAHK,qBAIA,IAAIR,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB,CAFI,CAGL;AAHK,qBAIA,IAAIR,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB;;AArD2B;AAAA,kDAuDrB;AACL4C,kBAAAA,OAAO,EAAEA,OADJ;AAEL1C,kBAAAA,WAAW,EAAE,GAFR;AAGLC,kBAAAA,OAAO,EAAE;AAHJ,iBAvDqB;;AAAA;AAAA;AAAA;AAAA,kDA8DrB;AACLA,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBA9DqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QApI1B;AAwML8C,IAAAA,kBAAkB,EAAE7D,aAAa;AAAA,gGAAC,kBAAOI,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BC,gBAAAA,OAF0B,GAEhBD,OAAO,CAACE,WAAR,CAAoBD,OAFJ;AAAA;AAAA,uBAGbT,EAAE,CAACW,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,SAAvB,EAAkCH,OAAlC,EAA2CI,KAA3C,EAHa;;AAAA;AAG1BC,gBAAAA,IAH0B;AAK1BkD,gBAAAA,MAL0B,GAKjB,IALiB,EAM9B;;AAN8B,sBAO1BzD,IAAI,CAACQ,IAAL,IAAa,CAPa;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQbkD,eAAe,CAACnD,IAAD,CARF;;AAAA;AAQ5BkD,gBAAAA,MAR4B;AAAA;AAAA;;AAAA;AAAA,sBAWrBzD,IAAI,CAACQ,IAAL,IAAa,CAXQ;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAYHf,EAAE,CAACW,KAAH,CAAS,UAAT,EACtBC,KADsB,CAChB,kBADgB,EACIE,IAAI,CAACgC,gBADT,EAEtB1B,MAFsB,CAEf,aAFe,CAZG;;AAAA;AAYxB8C,gBAAAA,YAZwB;AAAA;AAAA,uBAeElE,EAAE,CAACW,KAAH,CAAS,OAAT,EAC3BC,KAD2B,CACrB,kBADqB,EACDE,IAAI,CAACgC,gBADJ,EAE3B1B,MAF2B,CAEpB,aAFoB,CAfF;;AAAA;AAexB+C,gBAAAA,iBAfwB;AAmBxBC,gBAAAA,cAnBwB,iDAmBHF,YAAY,CAAC3C,GAAb,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAC6C,WAAN;AAAA,iBAAlB,CAnBG,uCAmBsCF,iBAAiB,CAAC5C,GAAlB,CAAsB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAC6C,WAAN;AAAA,iBAAvB,CAnBtC;AAAA;AAAA,uBAqBPrE,EAAE,CAACW,KAAH,CAAS,UAAT,EAClBiD,QADkB,CACT,kBADS,EACW9C,IAAI,CAACE,gBADhB,EAElBsD,SAFkB,CAER,aAFQ,EAEOF,cAFP,EAGlBG,GAHkB,CAGd,kBAHc,CArBO;;AAAA;AAqBxBC,gBAAAA,QArBwB;AA0B5BR,gBAAAA,MAAM,GAAG;AACPS,kBAAAA,WAAW,EAAE,CADN;AAEPC,kBAAAA,aAAa,EAAEN,cAAc,CAACO,MAFvB;AAGPC,kBAAAA,aAAa,mBAAEJ,QAAQ,CAACD,GAAX,yDAAkB;AAHxB,iBAAT;AA1B4B;AAAA;;AAAA;AAiCzB,oBAAIhE,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB,CAFI,CAGL;AAHK,qBAIA,IAAIR,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB,CAFI,CAGL;AAHK,qBAIA,IAAIR,IAAI,CAACQ,IAAL,IAAa,CAAjB,EAAoB,CAExB;;AA3C6B;AAAA,kDA6CvB;AACL8D,kBAAAA,WAAW,aAAEb,MAAF,4CAAE,QAAQS,WADhB;AAELK,kBAAAA,aAAa,cAAEd,MAAF,6CAAE,SAAQU,aAFlB;AAGLK,kBAAAA,aAAa,cAAEf,MAAF,6CAAE,SAAQY,aAHlB;AAIL1D,kBAAAA,OAAO,EAAE,SAJJ;AAKLD,kBAAAA,WAAW,EAAE;AALR,iBA7CuB;;AAAA;AAAA;AAAA;AAAA,kDAsDvB;AACLC,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBAtDuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA,QAxM5B;AAoQL+D,IAAAA,mBAAmB,EAAE9E,aAAa;AAAA,gGAAC,kBAAOI,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3BC,gBAAAA,OAF2B,GAEjBD,OAAO,CAACE,WAAR,CAAoBD,OAFH;AAAA;AAAA,uBAGdT,EAAE,CAACW,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,SAAvB,EAAkCH,OAAlC,EAA2CI,KAA3C,EAHc;;AAAA;AAG3BC,gBAAAA,IAH2B;AAK3BE,gBAAAA,gBAL2B,GAKRF,IAAI,CAACE,gBALG;;AAAA,oBAM1BA,gBAN0B;AAAA;AAAA;AAAA;;AAAA,kDAOtB;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBAPsB;;AAAA;AAAA;AAAA,uBAaXlB,EAAE,CAACW,KAAH,CAAS,SAAT,EAAoBC,KAApB,CAA0B,kBAA1B,EAA8CI,gBAA9C,EAAgEH,KAAhE,EAbW;;AAAA;AAa3BM,gBAAAA,OAb2B;AAAA;AAAA,uBAcZ8C,eAAe,CAACnD,IAAD,CAdH;;AAAA;AAc3BkD,gBAAAA,MAd2B;AAAA,kDAgBxB;AACLlC,kBAAAA,YAAY,EAAEX,OAAO,CAACW,YADjB;AAELO,kBAAAA,YAAY,EAAElB,OAAO,CAACkB,YAFjB;AAGLD,kBAAAA,YAAY,EAAEjB,OAAO,CAACiB,YAHjB;AAILG,kBAAAA,WAAW,EAAEpB,OAAO,CAACoB,WAJhB;AAKLsC,kBAAAA,WAAW,EAAEb,MAAM,CAACS,WALf;AAMLK,kBAAAA,aAAa,EAAEd,MAAM,CAACU,aANjB;AAOLK,kBAAAA,aAAa,EAAEf,MAAM,CAACY,aAPjB;AAQL1D,kBAAAA,OAAO,EAAE,SARJ;AASLD,kBAAAA,WAAW,EAAE;AATR,iBAhBwB;;AAAA;AAAA;AAAA;AAAA,kDA6BxB;AACLC,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBA7BwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA;AApQ7B,GADS;AAyShBgE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,sBAAsB,EAAEhF,aAAa;AAAA,gGAAC,kBAAOI,MAAP,EAAeC,IAAf,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE9BC,gBAAAA,OAF8B,GAEpBD,OAAO,CAACE,WAAR,CAAoBD,OAFA;AAAA;AAAA,uBAGjBT,EAAE,CAACW,KAAH,CAAS,MAAT,EAAiBC,KAAjB,CAAuB,SAAvB,EAAkCH,OAAlC,EAA2CI,KAA3C,EAHiB;;AAAA;AAG9BC,gBAAAA,IAH8B;AAI9BK,gBAAAA,OAJ8B,GAIpBZ,IAAI,CAAC4E,2BAAL,CAAiChE,OAJb;AAK9BiE,gBAAAA,cAL8B,GAKb7E,IAAI,CAAC4E,2BAAL,CAAiCC,cALpB;AAO9BpE,gBAAAA,gBAP8B,GAOXF,IAAI,CAACE,gBAPM;;AAAA,oBAQ7BA,gBAR6B;AAAA;AAAA;AAAA;;AAAA,kDASzB;AACLC,kBAAAA,WAAW,EAAE,GADR;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBATyB;;AAAA;AAAA;AAAA,uBAeXlB,EAAE,CAACqF,WAAH;AAAA,4GAAe,kBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC9BA,GAAG,CAAC3E,KAAJ,CAAU,SAAV,EACHC,KADG,CACG,kBADH,EACuBI,gBADvB,EAEHuE,MAFG,CAEI;AACNpD,8BAAAA,WAAW,EAAEhB,OAAO,CAACgB,WADf;AAENH,8BAAAA,YAAY,EAAEb,OAAO,CAACa,YAFhB;AAGNC,8BAAAA,aAAa,EAAEd,OAAO,CAACc,aAHjB;AAINC,8BAAAA,oBAAoB,EAAEf,OAAO,CAACe,oBAJxB;AAKNI,8BAAAA,oBAAoB,EAAEnB,OAAO,CAACmB,oBALxB;AAMNF,8BAAAA,YAAY,EAAEjB,OAAO,CAACiB,YANhB;AAONC,8BAAAA,YAAY,EAAElB,OAAO,CAACkB,YAPhB;AAQNV,8BAAAA,0BAA0B,EAAER,OAAO,CAACQ,0BAR9B;AASNC,8BAAAA,sBAAsB,EAAET,OAAO,CAACS;AAT1B,6BAFJ,CAD8B;;AAAA;AAAA;AAAA,mCAe9B0D,GAAG,CAAC3E,KAAJ,CAAU,gBAAV,EACHC,KADG,CACG,kBADH,EACuBI,gBADvB,EACyCwE,GADzC,EAf8B;;AAAA;AAkBhC9D,4BAAAA,iBAlBgC,GAkBZ,EAlBY;AAmBpC0D,4BAAAA,cAAc,CAACK,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,kCAAIC,QAAQ,GAAG;AACb3E,gCAAAA,gBAAgB,EAAEA,gBADL;AAEbS,gCAAAA,WAAW,EAAEiE;AAFA,+BAAf;AAIAhE,8BAAAA,iBAAiB,CAACkE,IAAlB,CAAuBD,QAAvB;AACD,6BAND;AAnBoC;AAAA,mCA2B9BL,GAAG,CAAC3E,KAAJ,CAAU,gBAAV,EACHkF,MADG,CACInE,iBADJ,CA3B8B;;AAAA;AAAA,8DA8B7B;AACLR,8BAAAA,OAAO,EAAE,SADJ;AAELD,8BAAAA,WAAW,EAAE;AAFR,6BA9B6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAf;;AAAA;AAAA;AAAA;AAAA,oBAfW;;AAAA;AAe9B6E,gBAAAA,UAf8B;AAAA,kDAmD3BA,UAnD2B;;AAAA;AAAA;AAAA;AAAA,kDAsD3B;AACL5E,kBAAAA,OAAO,EAAE,uBADJ;AAELD,kBAAAA,WAAW,EAAE;AAFR,iBAtD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;AAAA;AAD7B;AAzSM,CAAlB;;SAyWegD,e;;;;;mGAAf,kBAA+BnD,IAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBd,EAAE,CAACW,KAAH,CAAS,QAAT,EACpBC,KADoB,CACd,kBADc,EACME,IAAI,CAACE,gBADX,CADzB;;AAAA;AACM+E,YAAAA,UADN;AAAA;AAAA,mBAI2B/F,EAAE,CAACW,KAAH,CAAS,UAAT,EACtBC,KADsB,CAChB,kBADgB,EACIE,IAAI,CAACE,gBADT,CAJ3B;;AAAA;AAIMkD,YAAAA,YAJN;AAOM8B,YAAAA,YAPN,GAOqBD,UAAU,CAACxE,GAAX,CAAe,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACyE,SAAN;AAAA,aAAhB,CAPrB;AAQM7B,YAAAA,cARN,GAQuBF,YAAY,CAAC3C,GAAb,CAAiB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC6C,WAAN;AAAA,aAAlB,CARvB;AAAA;AAAA,mBAUuBrE,EAAE,CAACW,KAAH,CAAS,UAAT,EAClBiD,QADkB,CACT,kBADS,EACW9C,IAAI,CAACE,gBADhB,EAElBsD,SAFkB,CAER,WAFQ,EAEK0B,YAFL,EAGlB1B,SAHkB,CAGR,aAHQ,EAGOF,cAHP,EAIlBG,GAJkB,CAId,kBAJc,CAVvB;;AAAA;AAUMC,YAAAA,QAVN;AAAA,8CAgBS;AACLC,cAAAA,WAAW,EAAEsB,UAAU,CAACpB,MADnB;AAELD,cAAAA,aAAa,EAAER,YAAY,CAACS,MAFvB;AAGLC,cAAAA,aAAa,oBAAEJ,QAAQ,CAACD,GAAX,2DAAkB;AAH1B,aAhBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuBA2B,MAAM,CAACC,OAAP,GAAiBhG,SAAjB",
      "sourceRoot": "D:\\MovesMaster\\Code\\AlisamMove-MovesMatter\\server\\src\\graphql\\resolves\\dashboard\\",
      "sourcesContent": [
        "const db = require('../../../data/knex-db');\r\nconst authenticated = require('../../../middleware/authenticated-guard');\r\n\r\nconst resolvers = {\r\n  Query: {\r\n    getDashboardProfile: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let User_ID = context.currentUser.User_ID;\r\n        let User = await db.table('User').where('User_ID', User_ID).first();\r\n        \r\n        //Charity\r\n        if (args.type == 1) {\r\n          let Moves_Charity_ID = User.Moves_Charity_ID;\r\n          \r\n          if (!Moves_Charity_ID) {\r\n            return {\r\n              messageCode: 404,\r\n              message: 'Charity ID is not exists',\r\n            };\r\n          }\r\n          \r\n          let Charity = await db.table('Charity').where('Moves_Charity_ID', Moves_Charity_ID).first();\r\n          let listCharitySectorID = await db.table('Charity_Sector')\r\n            .where('Moves_Charity_ID', Moves_Charity_ID)\r\n            .select('Category_ID');\r\n          \r\n          let listCharitySector = await db.table('Category')\r\n            .whereIn('Category_ID', listCharitySectorID.map(x => x.Category_ID))\r\n            .select('Category_Name');\r\n\r\n          let Charity_Geographical_Scope = await db.table('Category')\r\n            .where('Category_ID', Charity.Charity_Geographical_Scope).first();\r\n          let Charity_Income_Band = await db.table('Category')\r\n            .where('Category_ID', Charity.Charity_Income_Band_ID).first();\r\n\r\n          return {\r\n            Charity: {\r\n              Moves_Charity_ID: Charity.Moves_Charity_ID,\r\n              Charity_Name: Charity.Charity_Name,\r\n              Charity_Commission_No: Charity.Charity_Commission_No,\r\n              Contact_Name: Charity.Contact_Name,\r\n              Contact_Email: Charity.Contact_Email,\r\n              Contact_Phone_Number: Charity.Contact_Phone_Number,\r\n              Charity_URL: Charity.Charity_URL,\r\n              Charity_Aims: Charity.Charity_Aims,\r\n              Charity_icon: Charity.Charity_icon,\r\n              Charity_Geographical_Scope: Charity.Charity_Geographical_Scope,\r\n              Charity_Income_Band_ID: Charity.Charity_Income_Band_ID,\r\n              Charity_Date_Founded: Charity.Charity_Date_Founded,\r\n              Date_Active: Charity.Date_Active,\r\n              Charity_Geographical_Scope_Name: Charity_Geographical_Scope?.Category_Name,\r\n              Charity_Income_Band_Name: Charity_Income_Band?.Category_Name,\r\n              Charity_Sector: listCharitySector.map(x => x.Category_Name).join(\", \"),\r\n            },\r\n            Company: null,\r\n            messageCode: 200,\r\n            message: 'Success',\r\n          }\r\n        }\r\n        //Company\r\n        else if (args.type == 2) {\r\n          let Moves_Company_ID = User.Moves_Company_ID;\r\n          \r\n          if (!Moves_Company_ID) {\r\n            return {\r\n              messageCode: 404,\r\n              message: 'Company ID is not exists',\r\n            };\r\n          }\r\n\r\n          let Company = await db.table('Company').where('Moves_Company_ID', Moves_Company_ID).first();\r\n\r\n          return {\r\n            Company: {\r\n              Moves_Company_ID: Company.Moves_Company_ID,\r\n              Company_Name: Company.Company_Name,\r\n              Company_Number: Company.Company_Number,\r\n              Company_URL: Company.Company_URL,\r\n              Company_Icon: Company.Company_Icon,\r\n              Company_CSR_Statement: Company.Company_CSR_Statement,\r\n              Is_Active: Company.Is_Active,\r\n              Contact_Name: Company.Contact_Name,\r\n              Contact_Email: Company.Contact_Email,\r\n              Contact_Phone_Number: Company.Contact_Phone_Number\r\n            },\r\n            Charity: null,\r\n            messageCode: 200,\r\n            message: 'Success',\r\n          }\r\n        }\r\n        //Admin\r\n        else if (args.type == 3) {\r\n          \r\n        }\r\n        //Charity Directory\r\n        else if (args.type == 4) {\r\n          \r\n        }\r\n        //Company Directory\r\n        else if (args.type == 5) {\r\n          \r\n        }\r\n\r\n        return {\r\n          messageCode: 200,\r\n          message: 'Success',\r\n        };\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    }),\r\n    getDashboardAccountInfo: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let User_ID = context.currentUser.User_ID;\r\n        let User = await db.table('User').where('User_ID', User_ID).first();\r\n\r\n        return {\r\n          Role: '',\r\n          User_Id: User_ID,\r\n          User_Name: User.User_Name,\r\n          User_Email: User.User_Email,\r\n          messageCode: 200,\r\n          message: 'Success',\r\n        };\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    }),\r\n    getDashboardNews: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let User_ID = context.currentUser.User_ID;\r\n        let User = await db.table('User').where('User_ID', User_ID).first();\r\n        let listNew = [];\r\n\r\n        //Charity\r\n        if (args.type == 1) {\r\n          let Moves_Charity_ID = User.Moves_Charity_ID;\r\n          \r\n          if (!Moves_Charity_ID) {\r\n            return {\r\n              messageCode: 404,\r\n              message: 'Charity ID is not exists',\r\n            };\r\n          }\r\n          \r\n          listNew = await db.table('News_Item')\r\n          .select('News_Item_ID', 'News_Image', 'News_Title', 'News_Content')\r\n          .where('News_Publish', true)\r\n          .andWhere('Moves_Charity_ID', User.Moves_Charity_ID)\r\n          .orderBy('News_Publish_Date', 'desc')\r\n          .limit(3);\r\n        }\r\n        //Company\r\n        else if (args.type == 2) {\r\n          let Moves_Company_ID = User.Moves_Company_ID;\r\n          \r\n          if (!Moves_Company_ID) {\r\n            return {\r\n              messageCode: 404,\r\n              message: 'Company ID is not exists',\r\n            };\r\n          }\r\n\r\n          listNew = await db.table('News_Item')\r\n          .select('News_Item_ID', 'News_Image', 'News_Title', 'News_Content')\r\n          .where('News_Publish', true)\r\n          .andWhere('Moves_Company_ID', User.Moves_Company_ID)\r\n          .orderBy('News_Publish_Date', 'desc')\r\n          .limit(3);\r\n        }\r\n        //Admin\r\n        else if (args.type == 3) {\r\n          \r\n        }\r\n        //Charity Directory\r\n        else if (args.type == 4) {\r\n          \r\n        }\r\n        //Company Directory\r\n        else if (args.type == 5) {\r\n          \r\n        }\r\n\r\n        return {\r\n          listNew: listNew,\r\n          messageCode: 200,\r\n          message: 'Success',\r\n        };\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    }),\r\n    getDashboardReport: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let User_ID = context.currentUser.User_ID;\r\n        let User = await db.table('User').where('User_ID', User_ID).first();\r\n\r\n        let result = null;\r\n        //Charity\r\n        if (args.type == 1) {\r\n          result = await dashboardHelper(User);\r\n        }\r\n        //Company\r\n        else if (args.type == 2) {\r\n          let listCampaign = await db.table('Campaign')\r\n            .where('Moves_Company_ID', User.Moves_Company_ID)\r\n            .select('Campaign_ID');\r\n          let listMapCampaignId = await db.table('Match')\r\n            .where('Moves_Company_ID', User.Moves_Company_ID)\r\n            .select('Campaign_ID');\r\n          \r\n          let listCampaignId = [...listCampaign.map(x => x.Campaign_ID), ...listMapCampaignId.map(x => x.Campaign_ID)];\r\n\r\n          let donation = await db.table('Donation')\r\n            .andWhere('Moves_Charity_ID', User.Moves_Charity_ID)\r\n            .orWhereIn('Campaign_ID', listCampaignId)\r\n            .sum('Financial_Amount');\r\n\r\n          result = {\r\n            totalAppeal: 0,\r\n            totalCampaign: listCampaignId.length,\r\n            totalDonation: donation.sum ?? 0\r\n          };\r\n        }\r\n        //Admin\r\n        else if (args.type == 3) {\r\n          \r\n        }\r\n        //Charity Directory\r\n        else if (args.type == 4) {\r\n          \r\n        }\r\n        //Company Directory\r\n        else if (args.type == 5) {\r\n          \r\n        }\r\n\r\n        return {\r\n          TotalAppeal: result?.totalAppeal,\r\n          TotalCampaign: result?.totalCampaign,\r\n          TotalDonation: result?.totalDonation,\r\n          message: 'Success',\r\n          messageCode: 200\r\n        }\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    }),\r\n    getDashboardPreview: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let User_ID = context.currentUser.User_ID;\r\n        let User = await db.table('User').where('User_ID', User_ID).first();\r\n\r\n        let Moves_Charity_ID = User.Moves_Charity_ID;\r\n        if (!Moves_Charity_ID) {\r\n          return {\r\n            messageCode: 404,\r\n            message: 'Charity ID is not exists',\r\n          };\r\n        }\r\n        \r\n        let Charity = await db.table('Charity').where('Moves_Charity_ID', Moves_Charity_ID).first();\r\n        let result = await dashboardHelper(User);\r\n\r\n        return {\r\n          Charity_Name: Charity.Charity_Name,\r\n          Charity_icon: Charity.Charity_icon,\r\n          Charity_Aims: Charity.Charity_Aims,\r\n          Date_Active: Charity.Date_Active,\r\n          TotalAppeal: result.totalAppeal,\r\n          TotalCampaign: result.totalCampaign,\r\n          TotalDonation: result.totalDonation,\r\n          message: 'Success',\r\n          messageCode: 200\r\n        }\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    })\r\n  },\r\n  Mutation: {\r\n    updateDashboardCharity: authenticated(async (parent, args, context) => {\r\n      try {\r\n        let User_ID = context.currentUser.User_ID;\r\n        let User = await db.table('User').where('User_ID', User_ID).first();\r\n        let Charity = args.UpdateDashboardCharityInput.Charity;\r\n        let ListCategoryId = args.UpdateDashboardCharityInput.ListCategoryId;\r\n\r\n        let Moves_Charity_ID = User.Moves_Charity_ID;\r\n        if (!Moves_Charity_ID) {\r\n          return {\r\n            messageCode: 404,\r\n            message: 'Charity ID is not exists',\r\n          };\r\n        }\r\n\r\n        let trx_result = await db.transaction(async trx => {\r\n          await trx.table('Charity')\r\n            .where('Moves_Charity_ID', Moves_Charity_ID)\r\n            .update({\r\n              Charity_URL: Charity.Charity_URL,\r\n              Contact_Name: Charity.Contact_Name,\r\n              Contact_Email: Charity.Contact_Email,\r\n              Contact_Phone_Number: Charity.Contact_Phone_Number,\r\n              Charity_Date_Founded: Charity.Charity_Date_Founded,\r\n              Charity_Aims: Charity.Charity_Aims,\r\n              Charity_icon: Charity.Charity_icon,\r\n              Charity_Geographical_Scope: Charity.Charity_Geographical_Scope,\r\n              Charity_Income_Band_ID: Charity.Charity_Income_Band_ID,\r\n            });\r\n\r\n          await trx.table('Charity_Sector')\r\n            .where('Moves_Charity_ID', Moves_Charity_ID).del();\r\n          \r\n          let listCharitySector = [];\r\n          ListCategoryId.forEach(item => {\r\n            let new_item = {\r\n              Moves_Charity_ID: Moves_Charity_ID,\r\n              Category_ID: item\r\n            };\r\n            listCharitySector.push(new_item);\r\n          });\r\n\r\n          await trx.table('Charity_Sector')\r\n            .insert(listCharitySector);\r\n\r\n          return {\r\n            message: 'Success',\r\n            messageCode: 200\r\n          }\r\n        });\r\n\r\n        return trx_result;\r\n      }\r\n      catch (e) {\r\n        return {\r\n          message: 'Internal Server Error',\r\n          messageCode: 500\r\n        }\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nasync function dashboardHelper(User) {\r\n  let listAppeal = await db.table('Appeal')\r\n    .where('Moves_Charity_ID', User.Moves_Charity_ID);\r\n  \r\n  let listCampaign = await db.table('Campaign')\r\n    .where('Moves_Charity_ID', User.Moves_Charity_ID);\r\n\r\n  let listAppealId = listAppeal.map(x => x.Appeal_ID);\r\n  let listCampaignId = listCampaign.map(x => x.Campaign_ID);\r\n  \r\n  let donation = await db.table('Donation')\r\n    .andWhere('Moves_Charity_ID', User.Moves_Charity_ID)\r\n    .orWhereIn('Appeal_ID', listAppealId)\r\n    .orWhereIn('Campaign_ID', listCampaignId)\r\n    .sum('Financial_Amount');\r\n\r\n  return {\r\n    totalAppeal: listAppeal.length,\r\n    totalCampaign: listCampaign.length,\r\n    totalDonation: donation.sum ?? 0\r\n  }\r\n}\r\n\r\nmodule.exports = resolvers"
      ]
    },
    "sourceType": "script",
    "mtime": 1653278562088
  }
}